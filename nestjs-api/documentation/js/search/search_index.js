var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.718,1,1.689]],["body/controllers/AppController.html",[0,0.817,1,1.922,2,0.801,3,0.318,4,0.267,5,0.267,6,1.786,7,0.318,8,0.924,9,3.009,10,4.19,11,4.19,12,3.406,13,3.217,14,4.19,15,1.626,16,0.047,17,3.217,18,0.87,19,2.197,20,1.281,21,2.275,22,3.217,23,2.197,24,2.197,25,2.197,26,0.719,27,2.197,28,4.66,29,3.217,30,2.197,31,0.902,32,0.631,33,0.902,34,2.275,35,1.042,36,4.19,37,3.217,38,2.197,39,0.645,40,2.197,41,0.429,42,1.762,43,1.786,44,3.806,45,1.786,46,1.786,47,1.762,48,1.786,49,0.318,50,0.318,51,1.017,52,1.762,53,1.762,54,3.217,55,3.217,56,2.197,57,1.338,58,2.197,59,1.515,60,2.197,61,2.504,62,2.197,63,2.197,64,3.217,65,2.197,66,2.197,67,1.786,68,2.197,69,2.197,70,1.786,71,1.786,72,2.197,73,2.197,74,2.197,75,2.197,76,2.197,77,1.786,78,2.197,79,2.197,80,2.197,81,2.197,82,2.197,83,2.197,84,3.217,85,2.197,86,2.197,87,2.197,88,2.197,89,2.197,90,2.197,91,1.786,92,3.217,93,3.217,94,2.197,95,1.786,96,2.197,97,1.017,98,1.786,99,1.786,100,2.197,101,1.515,102,1.313,103,2.197,104,2.197,105,2.197,106,0.026,107,0.026]],["title/modules/AppModule.html",[108,1.481,109,1.689]],["body/modules/AppModule.html",[1,2.36,2,1.229,3,0.339,4,0.285,5,0.285,16,0.047,26,0.524,39,0.791,41,0.457,42,2.206,43,1.905,47,2.206,48,1.905,49,0.339,50,0.339,59,2.325,77,1.905,95,1.905,97,1.085,106,0.027,107,0.027,108,2.07,109,3.27,110,1.228,111,1.401,112,1.905,113,1.905,114,1.401,115,2.724,116,1.905,117,1.905,118,1.905,119,1.905,120,2.497,121,2.206,122,2.206,123,2.206,124,2.741,125,1.905,126,1.905,127,2.344,128,2.36,129,2.36,130,2.36,131,2.741,132,2.344,133,1.085,134,2.344,135,1.905,136,2.344,137,2.344,138,1.905,139,0.855,140,1.401,141,2.344,142,2.344,143,1.905,144,1.905,145,1.092,146,1.401,147,1.229,148,1.616,149,1.228,150,2.344,151,2.344,152,2.344,153,2.344,154,2.344,155,2.344,156,2.344,157,2.344,158,2.344,159,2.344,160,2.344,161,2.344,162,2.344,163,2.344,164,1.228,165,2.344,166,2.344,167,2.344,168,2.344,169,2.344,170,2.344,171,2.344,172,2.344,173,2.344,174,2.344,175,2.344,176,2.344,177,2.344,178,2.344]],["title/injectables/AppService.html",[42,1.308,179,0.718]],["body/injectables/AppService.html",[3,0.566,4,0.476,5,0.476,7,0.566,8,1.361,12,4.307,16,0.046,18,0.764,20,1.124,35,1.535,39,0.566,41,0.764,42,2.194,49,0.566,50,0.566,57,1.124,106,0.038,107,0.038,179,1.203,180,1.812,181,3.182,182,3.915,183,3.915,184,3.915]],["title/entities/Combustivel.html",[145,0.915,185,1.16]],["body/entities/Combustivel.html",[3,0.461,4,0.388,5,0.388,7,0.461,15,1.692,16,0.046,18,0.906,26,1.099,32,1.333,35,1.35,39,0.602,49,0.461,50,0.461,59,2.874,106,0.034,107,0.034,145,1.35,147,1.909,149,1.672,164,1.672,185,1.309,186,2.593,187,2.184,188,3.2,189,3.521,190,3.772,191,2.184,192,2.2,193,4.167,194,3.19,195,2.2,196,2.874,197,2.874,198,3.387,199,4.167,200,3.19,201,2.593,202,4.167,203,3.19,204,2.874,205,2.874,206,3.387,207,1.163,208,1.906,209,3.19]],["title/controllers/CombustivelController.html",[0,0.718,129,1.689]],["body/controllers/CombustivelController.html",[0,0.955,2,1.371,3,0.544,4,0.458,5,0.458,7,0.544,8,1.328,15,1.371,16,0.046,18,0.734,20,1.08,39,0.669,41,0.734,49,0.544,50,0.544,53,1.741,57,1.08,106,0.037,107,0.037,121,2.319,129,2.764,143,3.057,210,3.057,211,2.247,212,2.594,213,4.248,214,3.761,215,3.761,216,2.594,217,3.761]],["title/injectables/CombustivelService.html",[121,1.308,179,0.718]],["body/injectables/CombustivelService.html",[3,0.502,4,0.423,5,0.423,7,0.502,8,1.265,16,0.046,18,0.859,20,0.998,26,0.776,31,1.426,32,0.998,33,1.426,39,0.734,41,0.678,49,0.502,50,0.502,51,2.038,52,1.608,53,1.608,57,0.998,106,0.035,107,0.035,121,2.038,133,1.608,145,1.125,146,2.076,179,1.118,180,1.608,207,1.267,213,4.13,218,2.825,219,3.475,220,2.352,221,3.475,222,3.036,223,3.475,224,3.579,225,2.076,226,2.396,227,3.475]],["title/controllers/HealthController.html",[0,0.718,228,1.689]],["body/controllers/HealthController.html",[0,0.689,2,0.989,3,0.618,4,0.33,5,0.33,7,0.392,8,1.073,15,1.363,16,0.047,18,0.729,20,1.073,34,2.233,39,0.54,41,0.529,49,0.392,50,0.392,51,1.256,52,1.73,57,1.323,61,2.753,91,3.038,97,1.73,101,2.577,102,2.233,106,0.03,107,0.03,211,1.621,228,2.233,229,2.205,230,3.737,231,4.608,232,4.608,233,2.713,234,2.713,235,2.713,236,2.713,237,4.276,238,3.737,239,3.038,240,1.871,241,2.713,242,2.713,243,3.737,244,4.276,245,3.737,246,3.737,247,3.737,248,2.713,249,3.737,250,4.608,251,3.737,252,3.737,253,3.737,254,3.737,255,4.608,256,3.737,257,3.737,258,3.737,259,3.737,260,2.713,261,3.737,262,3.038,263,2.713,264,2.713,265,2.713]],["title/modules/HealthModule.html",[108,1.481,120,1.481]],["body/modules/HealthModule.html",[2,1.686,3,0.544,4,0.458,5,0.458,16,0.046,39,0.776,41,0.734,49,0.544,50,0.544,106,0.037,107,0.037,108,2.424,110,1.971,115,2.594,120,2.424,131,3.057,228,2.993,239,3.76,240,3.19,266,3.761,267,4.625,268,3.761,269,4.625,270,3.057]],["title/entities/Posto.html",[139,1.031,185,1.16]],["body/entities/Posto.html",[3,0.276,4,0.232,5,0.232,7,0.276,15,1.858,16,0.046,18,0.994,26,1.222,32,1.565,35,1.757,39,0.419,49,0.276,50,0.276,106,0.023,107,0.023,139,1.057,147,1.613,149,1.001,164,1.001,185,0.784,187,1.519,188,2.415,190,2.847,191,1.519,192,1.317,195,3.41,196,3.741,197,3.741,198,3.596,201,1.552,204,1.998,205,3.466,206,2.356,207,0.696,208,1.141,271,1.552,272,2.512,273,4.203,274,3.416,275,3.416,276,4.203,277,3.416,278,3.416,279,4.203,280,3.416,281,4.203,282,1.91,283,1.91,284,2.356,285,1.91,286,1.91,287,2.898,288,1.91,289,1.998,290,1.91,291,2.898,292,1.91,293,4.424,294,1.91,295,1.91,296,2.898,297,1.91,298,2.898,299,1.91,300,1.91,301,1.91]],["title/controllers/PostoController.html",[0,0.718,128,1.689]],["body/controllers/PostoController.html",[0,0.843,2,1.211,3,0.48,4,0.404,5,0.404,7,0.48,8,1.228,15,1.56,16,0.046,18,0.835,20,1.228,26,0.742,31,1.363,32,0.954,33,1.363,35,1.714,39,0.618,41,0.648,49,0.48,50,0.48,53,1.537,57,1.228,106,0.034,107,0.034,122,2.19,128,2.556,138,2.7,211,1.985,216,2.29,302,2.7,303,2.7,304,4.061,305,3.846,306,3.321,307,2.7,308,4.061,309,4.277,310,3.321,311,3.477,312,2.29,313,3.321,314,3.321,315,3.321,316,3.321,317,3.321]],["title/injectables/PostoService.html",[122,1.308,179,0.718]],["body/injectables/PostoService.html",[3,0.446,4,0.376,5,0.376,7,0.446,8,1.171,16,0.047,18,0.891,20,1.171,26,0.911,31,1.674,32,1.171,33,1.674,35,1.68,39,0.702,41,0.602,49,0.446,50,0.446,51,1.888,52,1.429,53,1.429,57,1.171,106,0.033,107,0.033,122,1.888,133,1.429,139,1.126,140,1.845,179,1.035,180,1.429,207,1.126,220,2.249,224,3.949,225,1.845,304,3.949,305,3.315,307,3.315,308,4.106,311,3.712,318,2.509,319,3.087,320,3.087,321,2.812,322,3.087,323,3.087,324,2.129,325,3.087,326,3.087,327,3.087,328,3.087]],["title/entities/PrecoColetado.html",[147,1.031,185,1.16]],["body/entities/PrecoColetado.html",[3,0.358,4,0.301,5,0.301,7,0.358,15,1.77,16,0.046,18,0.947,26,1.158,32,1.489,35,1.136,39,0.589,49,0.358,50,0.358,106,0.028,107,0.028,139,1.891,145,1.679,147,1.279,164,1.298,185,1.016,187,1.838,188,2.808,191,2.321,192,1.708,195,2.808,196,2.418,197,2.418,204,2.418,205,3.054,207,0.903,208,2.793,284,3.6,329,4.056,330,2.013,331,3.799,332,4.674,333,3.507,334,2.476,335,3.507,336,2.476,337,3.6,338,2.476,339,3.507,340,2.476,341,2.476,342,4.072,343,2.476,344,3.507,345,3.507,346,3.507,347,2.418,348,2.476,349,2.476,350,4.072,351,4.072,352,2.476,353,2.476,354,2.476,355,2.476,356,2.476,357,2.013,358,2.476,359,2.476,360,2.476]],["title/controllers/PrecoController.html",[0,0.718,130,1.689]],["body/controllers/PrecoController.html",[0,0.473,2,0.679,3,0.269,4,0.227,5,0.227,7,0.269,8,0.817,9,3.245,15,1.662,16,0.046,18,0.889,20,1.309,21,2.723,26,0.979,31,1.798,32,1.258,33,1.798,35,1.811,39,0.411,41,0.363,49,0.269,50,0.269,53,0.862,57,1.309,61,1.699,97,0.862,106,0.023,107,0.023,123,1.596,130,1.699,144,1.514,145,1.731,191,2.296,208,2.618,211,1.113,216,1.284,272,2.936,289,1.284,312,1.284,361,1.514,362,1.862,363,3.448,364,2.311,365,2.311,366,3.137,367,3.448,368,3.448,369,3.448,370,1.862,371,2.843,372,1.862,373,3.994,374,1.514,375,4.699,376,1.862,377,1.514,378,2.306,379,1.862,380,1.961,381,2.843,382,1.862,383,1.862,384,1.862,385,1.862,386,2.843,387,1.862,388,1.862,389,3.137,390,1.862,391,2.803,392,1.862,393,1.862,394,1.514,395,1.862,396,1.514,397,1.514,398,1.862,399,1.862,400,1.514,401,2.843,402,1.862,403,1.862,404,3.448,405,3.859,406,1.862,407,1.862,408,1.862,409,1.862,410,1.862,411,1.862,412,1.862,413,1.862,414,1.862]],["title/injectables/PrecoService.html",[123,1.308,179,0.718]],["body/injectables/PrecoService.html",[3,0.14,4,0.118,5,0.118,7,0.14,8,0.479,9,2.876,16,0.047,18,0.71,20,0.989,21,2.058,26,0.769,31,1.414,32,0.989,33,1.414,35,1.658,39,0.465,41,0.189,49,0.14,50,0.14,51,0.771,52,1.208,57,1.134,61,2.664,97,0.448,102,0.578,106,0.024,107,0.013,123,0.771,133,0.448,139,1.073,140,0.578,145,1.559,146,0.578,147,0.353,148,0.667,149,0.507,179,0.423,180,0.448,189,2.218,191,1.367,207,0.353,212,1.514,220,1.828,222,1.514,225,0.578,226,0.667,272,2.927,274,2.8,275,2.8,277,2.8,278,2.8,280,2.8,289,1.514,312,0.667,321,1.514,324,0.667,331,1.355,337,0.787,347,2.218,364,1.355,365,1.355,366,2.121,373,2.957,374,1.355,377,1.355,378,1.922,380,1.799,389,2.392,391,1.355,394,0.787,396,0.787,397,2.121,400,1.785,415,0.787,416,1.785,417,1.667,418,1.667,419,1.667,420,0.787,421,2.8,422,0.968,423,1.355,424,1.667,425,0.968,426,0.968,427,0.968,428,1.667,429,0.968,430,0.968,431,0.968,432,0.968,433,1.667,434,0.968,435,1.667,436,0.968,437,0.787,438,0.787,439,0.968,440,0.787,441,0.968,442,3.215,443,0.968,444,0.968,445,0.968,446,0.787,447,1.667,448,3.21,449,0.968,450,0.968,451,0.968,452,0.968,453,2.609,454,0.968,455,0.968,456,0.968,457,2.121,458,2.942,459,3.215,460,3.444,461,3.215,462,3.215,463,2.614,464,3.215,465,3.215,466,3.215,467,3.215,468,4.076,469,0.968,470,2.195,471,0.968,472,2.392,473,2.392,474,1.667,475,2.609,476,2.609,477,2.609,478,2.609,479,3.215,480,3.215,481,2.942,482,2.942,483,0.968,484,0.968,485,0.968,486,0.968,487,0.968,488,0.968,489,0.968,490,0.968,491,0.968,492,1.667,493,0.968,494,1.667,495,1.355,496,1.355,497,0.968,498,0.968,499,0.968,500,1.667,501,0.968,502,0.968,503,0.968,504,0.968,505,1.667,506,0.968,507,0.968,508,0.968,509,0.968,510,2.195,511,0.968,512,0.968,513,3.215,514,0.968,515,0.968,516,0.968,517,0.968,518,0.968,519,0.968,520,0.968,521,0.968,522,1.355,523,2.195,524,2.195,525,2.195,526,2.195,527,2.195,528,2.195,529,2.195,530,2.195,531,3.215,532,3.215,533,3.215,534,2.195,535,2.195,536,2.195,537,2.195,538,2.195,539,2.195,540,2.195,541,0.968,542,2.195,543,2.195,544,2.195,545,0.968,546,1.667,547,1.667,548,1.667,549,0.968,550,0.968,551,0.968,552,1.667,553,0.968,554,0.968]],["title/injectables/UtilService.html",[47,1.308,179,0.718]],["body/injectables/UtilService.html",[3,0.354,4,0.298,5,0.298,7,0.354,8,0.999,9,3.09,16,0.046,18,0.86,20,1.162,21,2.417,26,0.547,31,1.005,32,0.703,33,1.005,39,0.699,41,0.478,47,1.61,49,0.354,50,0.354,51,1.61,52,1.873,57,1.162,70,3.288,71,1.99,98,1.99,99,1.99,102,1.463,106,0.028,107,0.028,133,1.133,139,0.892,140,1.463,145,0.793,146,1.463,147,0.892,148,1.688,149,1.283,179,0.883,180,1.133,189,2.79,207,0.892,212,1.688,220,2.427,222,2.79,225,1.463,226,1.688,272,1.463,321,2.79,324,1.688,378,2.078,380,1.688,416,3.581,420,1.99,421,1.99,423,2.827,437,1.99,438,1.99,440,1.99,448,2.827,457,1.99,463,1.99,472,1.99,473,1.99,495,2.827,496,1.99,522,3.288,555,1.99,556,4.405,557,4.405,558,2.448,559,2.448,560,2.448,561,2.448,562,2.448,563,4.045,564,4.045,565,4.045,566,4.045,567,3.478,568,2.827,569,1.99,570,4.045,571,2.448,572,4.045,573,2.448,574,3.478,575,2.448,576,2.448,577,2.448,578,2.448,579,2.448]],["title/coverage.html",[580,2.651]],["body/coverage.html",[0,1.299,1,1.918,5,0.39,6,2.609,16,0.046,26,0.717,42,1.486,47,1.486,106,0.034,107,0.034,114,1.918,121,1.486,122,1.486,123,1.486,128,1.918,129,1.918,130,1.918,139,1.17,145,1.04,147,1.17,179,1.299,181,2.609,185,1.91,186,2.609,210,2.609,218,2.609,228,1.918,229,2.609,271,2.609,302,2.609,318,2.609,329,2.609,330,2.609,361,2.609,415,2.609,446,2.609,555,2.609,580,2.213,581,3.21,582,3.21,583,3.21,584,5.654,585,3.21,586,4.184,587,4.654,588,3.21,589,4.932,590,2.609,591,3.21,592,3.21,593,3.21,594,3.21,595,3.21,596,3.21]],["title/dependencies.html",[111,2.029,597,1.924]],["body/dependencies.html",[16,0.047,41,0.745,45,3.101,46,3.101,106,0.038,107,0.038,111,2.28,133,1.766,135,3.101,207,1.391,240,2.631,270,3.101,598,3.815,599,5.041,600,3.815,601,3.815,602,3.815,603,3.815,604,3.815,605,3.815,606,3.815,607,3.815,608,3.815,609,3.815,610,3.815,611,3.815,612,3.815,613,3.815,614,3.815,615,3.815]],["title/miscellaneous/functions.html",[616,1.924,617,2.76]],["body/miscellaneous/functions.html",[7,0.629,16,0.041,106,0.041,107,0.041,114,3.186,590,3.538,616,3.538,617,3.538,618,4.352]],["title/index.html",[7,0.342,619,2.367,620,2.367]],["body/index.html",[4,0.389,16,0.046,34,1.912,106,0.034,107,0.034,220,1.481,580,2.207,621,3.2,622,3.2,623,4.175,624,3.2,625,3.2,626,3.2,627,3.2,628,3.2,629,3.2,630,4.647,631,3.2,632,3.2,633,3.2,634,4.647,635,5.337,636,3.2,637,3.2,638,3.2,639,5.24,640,3.2,641,3.2,642,4.175,643,3.2,644,3.2,645,3.2,646,3.2,647,4.175,648,4.175,649,3.2,650,3.2,651,3.2,652,4.175,653,4.175,654,3.2,655,3.2,656,3.2,657,3.2,658,3.2,659,2.601,660,3.2,661,3.2,662,3.2,663,3.2,664,3.2,665,3.2,666,3.2,667,3.2,668,3.2,669,3.2,670,2.601,671,3.2,672,3.2,673,3.2,674,3.2,675,3.2,676,3.2,677,2.601]],["title/modules.html",[110,2.014]],["body/modules.html",[16,0.04,67,3.509,106,0.04,107,0.04,109,2.579,110,2.262,120,2.262,659,3.509,678,4.317,679,4.317,680,5.023,681,4.317]],["title/overview.html",[682,3.125]],["body/overview.html",[2,1.301,16,0.045,42,2.265,47,2.265,106,0.036,107,0.036,108,1.871,109,3.422,110,1.871,111,2.133,112,2.901,113,2.901,114,2.133,115,2.461,116,2.901,117,2.901,118,2.901,119,2.901,120,2.564,121,2.265,122,2.265,123,2.265,124,3.64,125,2.901,126,2.901,164,1.871,180,1.652,347,2.461,682,2.901,683,3.569,684,4.478]],["title/properties.html",[187,1.78,597,1.924]],["body/properties.html",[16,0.045,34,2.297,97,2.341,101,2.65,106,0.038,107,0.038,187,2.014,220,1.779,262,3.124,303,3.124,357,3.124,378,2.297,568,3.124,569,3.124,670,3.124,677,3.124,685,3.843,686,3.843,687,3.843,688,3.843,689,3.843,690,3.843,691,3.843,692,3.843,693,3.843,694,3.843,695,3.843,696,3.843,697,3.843,698,3.843,699,3.843,700,3.843,701,3.843,702,3.843,703,3.843]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":686,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":400,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["1.7.7",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":284,"title":{},"body":{"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["10.0.0",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["10.0.4",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":198,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{}}}],["14",{"_index":287,"title":{},"body":{"entities/Posto.html":{}}}],["2",{"_index":683,"title":{},"body":{"overview.html":{}}}],["20",{"_index":296,"title":{},"body":{"entities/Posto.html":{}}}],["2022",{"_index":691,"title":{},"body":{"properties.html":{}}}],["2024",{"_index":692,"title":{},"body":{"properties.html":{}}}],["255",{"_index":293,"title":{},"body":{"entities/Posto.html":{}}}],["3",{"_index":347,"title":{},"body":{"entities/PrecoColetado.html":{},"injectables/PrecoService.html":{},"overview.html":{}}}],["3.0.3",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":684,"title":{},"body":{"overview.html":{}}}],["50",{"_index":289,"title":{},"body":{"entities/Posto.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["5432",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["7.8.1",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["8.12.0",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["acc",{"_index":543,"title":{},"body":{"injectables/PrecoService.html":{}}}],["acc[postokey",{"_index":533,"title":{},"body":{"injectables/PrecoService.html":{}}}],["acc[postokey].combustiveis.push",{"_index":539,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby(\"to_char(pc.datacoleta",{"_index":493,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('co.nome",{"_index":492,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('po.bairro",{"_index":488,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('po.cep",{"_index":491,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('po.cidade",{"_index":489,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('po.estado",{"_index":490,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('po.logradouro",{"_index":486,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('po.numero",{"_index":487,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addorderby('mes",{"_index":578,"title":{},"body":{"injectables/UtilService.html":{}}}],["addselect('co.nome",{"_index":498,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addselect('round(avg(pc.\"preco",{"_index":503,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addselect('round(avg(pc.preco",{"_index":499,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addselect('to_char(pc.\"datacoleta",{"_index":576,"title":{},"body":{"injectables/UtilService.html":{}}}],["adiciona",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["agrupar",{"_index":526,"title":{},"body":{"injectables/PrecoService.html":{}}}],["aigner",{"_index":702,"title":{},"body":{"properties.html":{}}}],["alterado",{"_index":356,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["amazing",{"_index":660,"title":{},"body":{"index.html":{}}}],["ambiente",{"_index":72,"title":{},"body":{"controllers/AppController.html":{}}}],["andwhere('co.nome",{"_index":484,"title":{},"body":{"injectables/PrecoService.html":{}}}],["andwhere('to_char(pc.\"datacoleta",{"_index":507,"title":{},"body":{"injectables/PrecoService.html":{}}}],["ano",{"_index":378,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"properties.html":{}}}],["ao",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["apenas",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["api",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"properties.html":{}}}],["app",{"_index":637,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":629,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":109,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":42,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["asc",{"_index":522,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["atual",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["author",{"_index":670,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"modules.html":{}}}],["await",{"_index":448,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["axios",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":661,"title":{},"body":{"index.html":{}}}],["bairro",{"_index":272,"title":{},"body":{"entities/Posto.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["bairros",{"_index":572,"title":{},"body":{"injectables/UtilService.html":{}}}],["banco",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{}}}],["bandeira",{"_index":273,"title":{},"body":{"entities/Posto.html":{}}}],["boolean",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["bootstrap",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":680,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":678,"title":{},"body":{"modules.html":{}}}],["building",{"_index":624,"title":{},"body":{"index.html":{}}}],["caminho",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["cep",{"_index":274,"title":{},"body":{"entities/Posto.html":{},"injectables/PrecoService.html":{}}}],["certifique",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["check",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["checkdatabase",{"_index":231,"title":{},"body":{"controllers/HealthController.html":{}}}],["checkgeneral",{"_index":232,"title":{},"body":{"controllers/HealthController.html":{}}}],["cidade",{"_index":275,"title":{},"body":{"entities/Posto.html":{},"injectables/PrecoService.html":{}}}],["class",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["cluster_appmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cnpj",{"_index":276,"title":{},"body":{"entities/Posto.html":{}}}],["co",{"_index":480,"title":{},"body":{"injectables/PrecoService.html":{}}}],["co.\"id_combustivel",{"_index":505,"title":{},"body":{"injectables/PrecoService.html":{}}}],["co.id_combustivel",{"_index":482,"title":{},"body":{"injectables/PrecoService.html":{}}}],["co.nome",{"_index":467,"title":{},"body":{"injectables/PrecoService.html":{}}}],["coletado.entity",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"entities/Combustivel.html":{},"entities/Posto.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["coletado.entity.ts",{"_index":330,"title":{},"body":{"entities/PrecoColetado.html":{},"coverage.html":{}}}],["coletado.entity.ts:14",{"_index":340,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["coletado.entity.ts:17",{"_index":348,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["coletado.entity.ts:20",{"_index":349,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["coletado.entity.ts:23",{"_index":338,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["coletado.entity.ts:27",{"_index":343,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["coletado.entity.ts:31",{"_index":336,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["column",{"_index":205,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["column({type",{"_index":195,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["com",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["combustiveis",{"_index":212,"title":{},"body":{"controllers/CombustivelController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["combustivel",{"_index":145,"title":{"entities/Combustivel.html":{}},"body":{"modules/AppModule.html":{},"entities/Combustivel.html":{},"injectables/CombustivelService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["combustivel.entity",{"_index":353,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["combustivel.precoscoletados",{"_index":360,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["combustivel.precoscoletados)@joincolumn({name",{"_index":334,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["combustivelcontroller",{"_index":129,"title":{"controllers/CombustivelController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CombustivelController.html":{},"coverage.html":{}}}],["combustivelid",{"_index":335,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["combustivelrepository",{"_index":222,"title":{},"body":{"injectables/CombustivelService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["combustivelservice",{"_index":121,"title":{"injectables/CombustivelService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"coverage.html":{},"overview.html":{}}}],["combustivies",{"_index":562,"title":{},"body":{"injectables/UtilService.html":{}}}],["combustíveis",{"_index":569,"title":{},"body":{"injectables/UtilService.html":{},"properties.html":{}}}],["completo",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["configmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error('router",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["constructor",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["constructor(combustivelrepository",{"_index":219,"title":{},"body":{"injectables/CombustivelService.html":{}}}],["constructor(postorepository",{"_index":319,"title":{},"body":{"injectables/PostoService.html":{}}}],["constructor(precorepository",{"_index":420,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["constructor(private",{"_index":216,"title":{},"body":{"controllers/CombustivelController.html":{},"controllers/PostoController.html":{},"controllers/PrecoController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CombustivelController.html":{},"controllers/HealthController.html":{},"controllers/PostoController.html":{},"controllers/PrecoController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CombustivelController.html":{},"controllers/HealthController.html":{},"controllers/PostoController.html":{},"controllers/PrecoController.html":{},"coverage.html":{}}}],["controller('combustiveis",{"_index":215,"title":{},"body":{"controllers/CombustivelController.html":{}}}],["controller('health",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('postos",{"_index":313,"title":{},"body":{"controllers/PostoController.html":{}}}],["controller('precos",{"_index":392,"title":{},"body":{"controllers/PrecoController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CombustivelController.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/PostoController.html":{},"controllers/PrecoController.html":{},"overview.html":{}}}],["controllers/combustivel/combustivel.controller",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/health/health.controller",{"_index":268,"title":{},"body":{"modules/HealthModule.html":{}}}],["controllers/posto/posto.controller",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/preco/preco.controller",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["corretamente",{"_index":359,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["correto",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":580,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["curr",{"_index":529,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.bairro",{"_index":535,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.cep",{"_index":538,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.cidade",{"_index":536,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.data_coleta",{"_index":542,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.estado",{"_index":537,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.logradouro",{"_index":532,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.maior_preco",{"_index":554,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.media_preco",{"_index":550,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.menor_preco",{"_index":541,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.nome_combustivel",{"_index":540,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.nome_posto",{"_index":531,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.numero",{"_index":534,"title":{},"body":{"injectables/PrecoService.html":{}}}],["da",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{}}}],["dados",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{},"properties.html":{}}}],["data",{"_index":443,"title":{},"body":{"injectables/PrecoService.html":{}}}],["data_coleta",{"_index":513,"title":{},"body":{"injectables/PrecoService.html":{}}}],["database",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["datacoleta",{"_index":331,"title":{},"body":{"entities/PrecoColetado.html":{},"injectables/PrecoService.html":{}}}],["datafim",{"_index":308,"title":{},"body":{"controllers/PostoController.html":{},"injectables/PostoService.html":{}}}],["datainicio",{"_index":311,"title":{},"body":{"controllers/PostoController.html":{},"injectables/PostoService.html":{}}}],["datas",{"_index":570,"title":{},"body":{"injectables/UtilService.html":{}}}],["datasource",{"_index":421,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["date",{"_index":337,"title":{},"body":{"entities/PrecoColetado.html":{},"injectables/PrecoService.html":{}}}],["date.now",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["db",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["de",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"properties.html":{}}}],["debug",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"controllers/HealthController.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{}}}],["decrescente",{"_index":444,"title":{},"body":{"injectables/PrecoService.html":{}}}],["default",{"_index":426,"title":{},"body":{"injectables/PrecoService.html":{}}}],["defined",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["dependencies",{"_index":111,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":453,"title":{},"body":{"injectables/PrecoService.html":{}}}],["descricao",{"_index":565,"title":{},"body":{"injectables/UtilService.html":{}}}],["description",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"index.html":{},"properties.html":{}}}],["detalhada",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{}}}],["detalhado",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["detalhados",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["development",{"_index":638,"title":{},"body":{"index.html":{}}}],["disponiveis",{"_index":573,"title":{},"body":{"injectables/UtilService.html":{}}}],["disponíveis",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/UtilService.html":{}}}],["disponível",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"injectables/UtilService.html":{}}}],["documentation",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["domínio",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["e",{"_index":440,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["e2e",{"_index":649,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":625,"title":{},"body":{"index.html":{}}}],["elisa",{"_index":697,"title":{},"body":{"properties.html":{}}}],["endtime",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{}}}],["entidades",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["entities",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{},"overview.html":{}}}],["entities/combustivel.entity",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/CombustivelService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["entities/posto.entity",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["entities/preco",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["entity",{"_index":185,"title":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{},"coverage.html":{}}}],["entity('combustivel",{"_index":209,"title":{},"body":{"entities/Combustivel.html":{}}}],["entity('posto",{"_index":301,"title":{},"body":{"entities/Posto.html":{}}}],["entity('preco_coletado",{"_index":354,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["entity{.ts,.js",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["es",{"_index":690,"title":{},"body":{"properties.html":{}}}],["estado",{"_index":277,"title":{},"body":{"entities/Posto.html":{},"injectables/PrecoService.html":{}}}],["estão",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":634,"title":{},"body":{"index.html":{}}}],["exec",{"_index":327,"title":{},"body":{"injectables/PostoService.html":{}}}],["export",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["exports",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["false",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["ferreira",{"_index":699,"title":{},"body":{"properties.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["filter((layer",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["filtra",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["framework",{"_index":623,"title":{},"body":{"index.html":{}}}],["function",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":617,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["geral",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/database",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/database')@healthcheck",{"_index":233,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/rotas",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["get('bairros",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["get('datas",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["get('maior",{"_index":371,"title":{},"body":{"controllers/PrecoController.html":{}}}],["get('media",{"_index":375,"title":{},"body":{"controllers/PrecoController.html":{}}}],["get('menor",{"_index":386,"title":{},"body":{"controllers/PrecoController.html":{}}}],["get('relatorio",{"_index":309,"title":{},"body":{"controllers/PostoController.html":{}}}],["get('utils",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@healthcheck",{"_index":235,"title":{},"body":{"controllers/HealthController.html":{}}}],["getall",{"_index":416,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["getall(page",{"_index":424,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getallcombustiveis",{"_index":213,"title":{},"body":{"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{}}}],["getallpostos",{"_index":304,"title":{},"body":{"controllers/PostoController.html":{},"injectables/PostoService.html":{}}}],["getbairros",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getbairrosdisponiveis",{"_index":556,"title":{},"body":{"injectables/UtilService.html":{}}}],["getdatas",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmaiorpreco",{"_index":363,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmaiorpreco(bairro",{"_index":370,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmaiorprecocombustivel",{"_index":417,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getmaiorprecocombustivel(bairro",{"_index":428,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getmediabairro",{"_index":364,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["getmediabairro(@query('bairro",{"_index":409,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmediabairro(bairro",{"_index":374,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["getmediacombustivel",{"_index":365,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["getmediacombustivel(@query('mes",{"_index":411,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmediacombustivel(mes",{"_index":377,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["getmediamensal",{"_index":366,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["getmediapreco",{"_index":367,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmediapreco(bairro",{"_index":383,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmediaprecocombustivel",{"_index":418,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getmediaprecocombustivel(bairro",{"_index":433,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getmenorpreco",{"_index":368,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmenorpreco(bairro",{"_index":385,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmenorprecocombustivel",{"_index":419,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getmenorprecocombustivel(bairro",{"_index":435,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getmesesanosdisponiveis",{"_index":557,"title":{},"body":{"injectables/UtilService.html":{}}}],["getprecos",{"_index":369,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getprecos(page",{"_index":388,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getrawmany",{"_index":495,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["getrelatoriopostos",{"_index":305,"title":{},"body":{"controllers/PostoController.html":{},"injectables/PostoService.html":{}}}],["getrelatoriopostos(datainicio",{"_index":307,"title":{},"body":{"controllers/PostoController.html":{},"injectables/PostoService.html":{}}}],["getroutes",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["getroutes(@req",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["getroutes(request",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":619,"title":{"index.html":{}},"body":{}}],["getutils",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["graph",{"_index":681,"title":{},"body":{"modules.html":{}}}],["groupby(\"to_char(pc.datacoleta",{"_index":501,"title":{},"body":{"injectables/PrecoService.html":{}}}],["groupby('po.id_posto",{"_index":548,"title":{},"body":{"injectables/PrecoService.html":{}}}],["groupby('po.nomefantasia",{"_index":485,"title":{},"body":{"injectables/PrecoService.html":{}}}],["groupedresults",{"_index":527,"title":{},"body":{"injectables/PrecoService.html":{}}}],["grow",{"_index":656,"title":{},"body":{"index.html":{}}}],["harmmer",{"_index":698,"title":{},"body":{"properties.html":{}}}],["health",{"_index":230,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheck",{"_index":237,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":238,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":228,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":120,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":183,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":667,"title":{},"body":{"index.html":{}}}],["host",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["host}${layer.route.path",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["httpadapterhost",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["httpmodule",{"_index":269,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://github.com/elisaharmmer",{"_index":700,"title":{},"body":{"properties.html":{}}}],["https://github.com/elisaharmmer/fuel",{"_index":694,"title":{},"body":{"properties.html":{}}}],["https://github.com/nicolasaigner",{"_index":703,"title":{},"body":{"properties.html":{}}}],["https://nestjs.com",{"_index":674,"title":{},"body":{"index.html":{}}}],["httpserver",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["httpserver?._events?.request?._router",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["id",{"_index":188,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["id_combustivel",{"_index":193,"title":{},"body":{"entities/Combustivel.html":{}}}],["id_posto",{"_index":291,"title":{},"body":{"entities/Posto.html":{}}}],["id_preco",{"_index":339,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["identifier",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["imports",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["injectable",{"_index":179,"title":{"injectables/AppService.html":{},"injectables/CombustivelService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CombustivelService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["injectables",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"injectables/CombustivelService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"overview.html":{}}}],["injectrepository",{"_index":225,"title":{},"body":{"injectables/CombustivelService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["injectrepository(combustivel",{"_index":226,"title":{},"body":{"injectables/CombustivelService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["injectrepository(posto",{"_index":324,"title":{},"body":{"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["injectrepository(precocoletado",{"_index":438,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["innerjoin(combustivel",{"_index":479,"title":{},"body":{"injectables/PrecoService.html":{}}}],["innerjoin(precocoletado",{"_index":475,"title":{},"body":{"injectables/PrecoService.html":{}}}],["installation",{"_index":633,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":636,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":663,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":351,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["kamil",{"_index":671,"title":{},"body":{"index.html":{}}}],["layer.route",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["legend",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["length",{"_index":197,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["lessthanorequal",{"_index":437,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["lessthanorequal(today",{"_index":451,"title":{},"body":{"injectables/PrecoService.html":{}}}],["license",{"_index":677,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":653,"title":{},"body":{"index.html":{}}}],["limit",{"_index":389,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["limite",{"_index":396,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["limitnumber",{"_index":401,"title":{},"body":{"controllers/PrecoController.html":{}}}],["lista",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["literal",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["logger",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["logradouro",{"_index":278,"title":{},"body":{"entities/Posto.html":{},"injectables/PrecoService.html":{}}}],["logs",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{}}}],["maior_preco",{"_index":552,"title":{},"body":{"injectables/PrecoService.html":{}}}],["manytoone",{"_index":350,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["manytoone(undefined",{"_index":333,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["map((layer",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["matching",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["max(pc.datacoleta",{"_index":547,"title":{},"body":{"injectables/PrecoService.html":{}}}],["max(pc2.\"datacoleta",{"_index":515,"title":{},"body":{"injectables/PrecoService.html":{}}}],["media_preco",{"_index":546,"title":{},"body":{"injectables/PrecoService.html":{}}}],["menor_preco",{"_index":470,"title":{},"body":{"injectables/PrecoService.html":{}}}],["mensal",{"_index":381,"title":{},"body":{"controllers/PrecoController.html":{}}}],["mes",{"_index":380,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["mes_coleta",{"_index":474,"title":{},"body":{"injectables/PrecoService.html":{}}}],["message",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["metadata",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["miscellaneous",{"_index":616,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":652,"title":{},"body":{"index.html":{}}}],["mm",{"_index":473,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["mode",{"_index":642,"title":{},"body":{"index.html":{}}}],["module",{"_index":108,"title":{"modules/AppModule.html":{},"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["modules",{"_index":110,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/health/health.module",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":666,"title":{},"body":{"index.html":{}}}],["mssql",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":672,"title":{},"body":{"index.html":{}}}],["método",{"_index":439,"title":{},"body":{"injectables/PrecoService.html":{}}}],["mês",{"_index":571,"title":{},"body":{"injectables/UtilService.html":{}}}],["na",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["name",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"entities/Combustivel.html":{},"injectables/CombustivelService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["nenhuma",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["nest",{"_index":630,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":676,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":270,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":240,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"injectables/CombustivelService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["new",{"_index":446,"title":{},"body":{"injectables/PrecoService.html":{},"coverage.html":{}}}],["node.js",{"_index":622,"title":{},"body":{"index.html":{}}}],["nome",{"_index":189,"title":{},"body":{"entities/Combustivel.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["nome_combustivel",{"_index":468,"title":{},"body":{"injectables/PrecoService.html":{}}}],["nome_posto",{"_index":460,"title":{},"body":{"injectables/PrecoService.html":{}}}],["nomefantasia",{"_index":279,"title":{},"body":{"entities/Posto.html":{}}}],["npm",{"_index":635,"title":{},"body":{"index.html":{}}}],["null",{"_index":564,"title":{},"body":{"injectables/UtilService.html":{}}}],["number",{"_index":191,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["number(limit",{"_index":402,"title":{},"body":{"controllers/PrecoController.html":{}}}],["number(page",{"_index":399,"title":{},"body":{"controllers/PrecoController.html":{}}}],["numeric",{"_index":344,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["numero",{"_index":280,"title":{},"body":{"entities/Posto.html":{},"injectables/PrecoService.html":{}}}],["nícolas",{"_index":701,"title":{},"body":{"properties.html":{}}}],["o",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{}}}],["object.keys(layer.route.methods)[0].touppercase",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["object.values(groupedresults",{"_index":544,"title":{},"body":{"injectables/PrecoService.html":{}}}],["ok",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["onetomany",{"_index":206,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{}}}],["onetomany(undefined",{"_index":201,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{}}}],["open",{"_index":654,"title":{},"body":{"index.html":{}}}],["optional",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/CombustivelService.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["ordenação",{"_index":441,"title":{},"body":{"injectables/PrecoService.html":{}}}],["order",{"_index":452,"title":{},"body":{"injectables/PrecoService.html":{}}}],["orderby('ano",{"_index":577,"title":{},"body":{"injectables/UtilService.html":{}}}],["orderby('maior_preco",{"_index":553,"title":{},"body":{"injectables/PrecoService.html":{}}}],["orderby('media_preco",{"_index":549,"title":{},"body":{"injectables/PrecoService.html":{}}}],["orderby('menor_preco",{"_index":521,"title":{},"body":{"injectables/PrecoService.html":{}}}],["orderby('mes_coleta",{"_index":494,"title":{},"body":{"injectables/PrecoService.html":{}}}],["orderby('po.bairro",{"_index":579,"title":{},"body":{"injectables/UtilService.html":{}}}],["os",{"_index":568,"title":{},"body":{"injectables/UtilService.html":{},"properties.html":{}}}],["out",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":682,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":597,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padrão",{"_index":456,"title":{},"body":{"injectables/PrecoService.html":{}}}],["page",{"_index":391,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["pagenumber",{"_index":398,"title":{},"body":{"controllers/PrecoController.html":{}}}],["paginação",{"_index":394,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["para",{"_index":357,"title":{},"body":{"entities/PrecoColetado.html":{},"properties.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/CombustivelService.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["parametros",{"_index":563,"title":{},"body":{"injectables/UtilService.html":{}}}],["password",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["pc",{"_index":476,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pc.\"combustivelid",{"_index":504,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pc.combustivelid",{"_index":481,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pc.datacoleta",{"_index":512,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pc.postoid",{"_index":478,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pc2",{"_index":517,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pc2.\"combustivelid",{"_index":520,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pc2.\"postoid",{"_index":518,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pg",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["platform",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["please",{"_index":664,"title":{},"body":{"index.html":{}}}],["po.\"id_posto",{"_index":519,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.bairro",{"_index":463,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["po.cep",{"_index":466,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.cidade",{"_index":464,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.estado",{"_index":465,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.id_posto",{"_index":477,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.logradouro",{"_index":461,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.nomefantasia",{"_index":459,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.numero",{"_index":462,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pode",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["por",{"_index":442,"title":{},"body":{"injectables/PrecoService.html":{}}}],["port",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["postgres",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["posto",{"_index":139,"title":{"entities/Posto.html":{}},"body":{"modules/AppModule.html":{},"entities/Posto.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["posto.entity",{"_index":352,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["posto.precoscoletados",{"_index":355,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["posto.precoscoletados)@joincolumn({name",{"_index":341,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["postocontroller",{"_index":128,"title":{"controllers/PostoController.html":{}},"body":{"modules/AppModule.html":{},"controllers/PostoController.html":{},"coverage.html":{}}}],["postoid",{"_index":342,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["postokey",{"_index":530,"title":{},"body":{"injectables/PrecoService.html":{}}}],["postorepository",{"_index":321,"title":{},"body":{"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["postos",{"_index":303,"title":{},"body":{"controllers/PostoController.html":{},"properties.html":{}}}],["postoservice",{"_index":122,"title":{"injectables/PostoService.html":{}},"body":{"modules/AppModule.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"coverage.html":{},"overview.html":{}}}],["precision",{"_index":345,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["preco",{"_index":208,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{}}}],["preco_medio",{"_index":500,"title":{},"body":{"injectables/PrecoService.html":{}}}],["precocoletado",{"_index":147,"title":{"entities/PrecoColetado.html":{}},"body":{"modules/AppModule.html":{},"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["precocoletado.combustivel",{"_index":202,"title":{},"body":{"entities/Combustivel.html":{}}}],["precocoletado.posto",{"_index":298,"title":{},"body":{"entities/Posto.html":{}}}],["precocontroller",{"_index":130,"title":{"controllers/PrecoController.html":{}},"body":{"modules/AppModule.html":{},"controllers/PrecoController.html":{},"coverage.html":{}}}],["precorepository",{"_index":423,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["precos",{"_index":362,"title":{},"body":{"controllers/PrecoController.html":{}}}],["precoscoletados",{"_index":190,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{}}}],["precoservice",{"_index":123,"title":{"injectables/PrecoService.html":{}},"body":{"modules/AppModule.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"coverage.html":{},"overview.html":{}}}],["prefix",{"_index":211,"title":{},"body":{"controllers/CombustivelController.html":{},"controllers/HealthController.html":{},"controllers/PostoController.html":{},"controllers/PrecoController.html":{}}}],["primarygeneratedcolumn",{"_index":204,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["primarygeneratedcolumn({name",{"_index":192,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["private",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["process.env.postgres_database",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_host",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_password",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_user",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":644,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":621,"title":{},"body":{"index.html":{}}}],["project",{"_index":655,"title":{},"body":{"index.html":{}}}],["promise",{"_index":224,"title":{},"body":{"injectables/CombustivelService.html":{},"injectables/PostoService.html":{}}}],["properties",{"_index":187,"title":{"properties.html":{}},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{},"properties.html":{}}}],["providers",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["public.\"preco_coletado",{"_index":516,"title":{},"body":{"injectables/PrecoService.html":{}}}],["página",{"_index":455,"title":{},"body":{"injectables/PrecoService.html":{}}}],["que",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["query",{"_index":312,"title":{},"body":{"controllers/PostoController.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["query('ano",{"_index":412,"title":{},"body":{"controllers/PrecoController.html":{}}}],["query('bairro",{"_index":404,"title":{},"body":{"controllers/PrecoController.html":{}}}],["query('combustivel",{"_index":405,"title":{},"body":{"controllers/PrecoController.html":{}}}],["query('datafim",{"_index":316,"title":{},"body":{"controllers/PostoController.html":{}}}],["query('datainicio",{"_index":315,"title":{},"body":{"controllers/PostoController.html":{}}}],["query('limit",{"_index":395,"title":{},"body":{"controllers/PrecoController.html":{}}}],["query('page",{"_index":393,"title":{},"body":{"controllers/PrecoController.html":{}}}],["query.getrawmany",{"_index":509,"title":{},"body":{"injectables/PrecoService.html":{}}}],["query.groupby('co.\"nome",{"_index":508,"title":{},"body":{"injectables/PrecoService.html":{}}}],["query.where('to_char(pc.\"datacoleta",{"_index":506,"title":{},"body":{"injectables/PrecoService.html":{}}}],["rawresults",{"_index":510,"title":{},"body":{"injectables/PrecoService.html":{}}}],["rawresults.andwhere('co.nome",{"_index":524,"title":{},"body":{"injectables/PrecoService.html":{}}}],["rawresults.andwhere('po.bairro",{"_index":523,"title":{},"body":{"injectables/PrecoService.html":{}}}],["rawresults.getrawmany",{"_index":525,"title":{},"body":{"injectables/PrecoService.html":{}}}],["razaosocial",{"_index":281,"title":{},"body":{"entities/Posto.html":{}}}],["read",{"_index":665,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{}}}],["referenciar",{"_index":358,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["reflect",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":450,"title":{},"body":{"injectables/PrecoService.html":{}}}],["repository",{"_index":220,"title":{},"body":{"injectables/CombustivelService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"index.html":{},"properties.html":{}}}],["req",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["request.protocol}://${request.get('host",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsetime",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["result",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["result.info",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["resultados",{"_index":397,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["results",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["results.reduce((acc",{"_index":528,"title":{},"body":{"injectables/PrecoService.html":{}}}],["retorna",{"_index":566,"title":{},"body":{"injectables/UtilService.html":{}}}],["retornar",{"_index":687,"title":{},"body":{"properties.html":{}}}],["return",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["returns",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["rota",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"injectables/UtilService.html":{}}}],["rotas",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["round(avg(pc.preco",{"_index":545,"title":{},"body":{"injectables/PrecoService.html":{}}}],["round(max(pc.preco",{"_index":551,"title":{},"body":{"injectables/PrecoService.html":{}}}],["round(min(pc.preco",{"_index":469,"title":{},"body":{"injectables/PrecoService.html":{}}}],["round(pc.preco",{"_index":511,"title":{},"body":{"injectables/PrecoService.html":{}}}],["router",{"_index":64,"title":{},"body":{"controllers/AppController.html":{}}}],["router.stack",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["routes",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":639,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":626,"title":{},"body":{"index.html":{}}}],["scale",{"_index":346,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["se",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["select",{"_index":458,"title":{},"body":{"injectables/PrecoService.html":{}}}],["select(\"to_char(pc.datacoleta",{"_index":497,"title":{},"body":{"injectables/PrecoService.html":{}}}],["select('co.\"nome",{"_index":502,"title":{},"body":{"injectables/PrecoService.html":{}}}],["select('distinct",{"_index":574,"title":{},"body":{"injectables/UtilService.html":{}}}],["ser",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["server",{"_index":627,"title":{},"body":{"index.html":{}}}],["services/combustivel.service",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"controllers/CombustivelController.html":{}}}],["services/posto.service",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"controllers/PostoController.html":{}}}],["services/preco.service",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"controllers/PrecoController.html":{}}}],["services/util.service",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["side",{"_index":628,"title":{},"body":{"index.html":{}}}],["skip",{"_index":447,"title":{},"body":{"injectables/PrecoService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"index.html":{}}}],["sp_resumopostoseprecos",{"_index":328,"title":{},"body":{"injectables/PostoService.html":{}}}],["sponsors",{"_index":658,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:16",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:24",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:52",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:57",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:62",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":182,"title":{},"body":{"injectables/AppService.html":{}}}],["src/controllers/combustivel/combustivel.controller.ts",{"_index":210,"title":{},"body":{"controllers/CombustivelController.html":{},"coverage.html":{}}}],["src/controllers/combustivel/combustivel.controller.ts:9",{"_index":214,"title":{},"body":{"controllers/CombustivelController.html":{}}}],["src/controllers/health/health.controller.ts",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/controllers/health/health.controller.ts:18",{"_index":236,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/controllers/health/health.controller.ts:38",{"_index":234,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/controllers/posto/posto.controller.ts",{"_index":302,"title":{},"body":{"controllers/PostoController.html":{},"coverage.html":{}}}],["src/controllers/posto/posto.controller.ts:14",{"_index":310,"title":{},"body":{"controllers/PostoController.html":{}}}],["src/controllers/posto/posto.controller.ts:9",{"_index":306,"title":{},"body":{"controllers/PostoController.html":{}}}],["src/controllers/preco/preco.controller.ts",{"_index":361,"title":{},"body":{"controllers/PrecoController.html":{},"coverage.html":{}}}],["src/controllers/preco/preco.controller.ts:20",{"_index":387,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/controllers/preco/preco.controller.ts:28",{"_index":384,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/controllers/preco/preco.controller.ts:36",{"_index":372,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/controllers/preco/preco.controller.ts:44",{"_index":376,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/controllers/preco/preco.controller.ts:49",{"_index":379,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/controllers/preco/preco.controller.ts:54",{"_index":382,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/controllers/preco/preco.controller.ts:9",{"_index":390,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/entities/combustivel.entity.ts",{"_index":186,"title":{},"body":{"entities/Combustivel.html":{},"coverage.html":{}}}],["src/entities/combustivel.entity.ts:10",{"_index":200,"title":{},"body":{"entities/Combustivel.html":{}}}],["src/entities/combustivel.entity.ts:13",{"_index":203,"title":{},"body":{"entities/Combustivel.html":{}}}],["src/entities/combustivel.entity.ts:7",{"_index":194,"title":{},"body":{"entities/Combustivel.html":{}}}],["src/entities/posto.entity.ts",{"_index":271,"title":{},"body":{"entities/Posto.html":{},"coverage.html":{}}}],["src/entities/posto.entity.ts:10",{"_index":288,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:13",{"_index":300,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:16",{"_index":295,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:19",{"_index":283,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:22",{"_index":294,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:25",{"_index":297,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:28",{"_index":282,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:31",{"_index":286,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:34",{"_index":290,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:37",{"_index":285,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:40",{"_index":299,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:7",{"_index":292,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/preco",{"_index":329,"title":{},"body":{"entities/PrecoColetado.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":590,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/health/health.module.ts",{"_index":266,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/services/combustivel.service.ts",{"_index":218,"title":{},"body":{"injectables/CombustivelService.html":{},"coverage.html":{}}}],["src/services/combustivel.service.ts:13",{"_index":223,"title":{},"body":{"injectables/CombustivelService.html":{}}}],["src/services/combustivel.service.ts:7",{"_index":221,"title":{},"body":{"injectables/CombustivelService.html":{}}}],["src/services/posto.service.ts",{"_index":318,"title":{},"body":{"injectables/PostoService.html":{},"coverage.html":{}}}],["src/services/posto.service.ts:13",{"_index":322,"title":{},"body":{"injectables/PostoService.html":{}}}],["src/services/posto.service.ts:17",{"_index":323,"title":{},"body":{"injectables/PostoService.html":{}}}],["src/services/posto.service.ts:7",{"_index":320,"title":{},"body":{"injectables/PostoService.html":{}}}],["src/services/preco.service.ts",{"_index":415,"title":{},"body":{"injectables/PrecoService.html":{},"coverage.html":{}}}],["src/services/preco.service.ts:149",{"_index":434,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:18",{"_index":425,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:207",{"_index":429,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:31",{"_index":430,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:63",{"_index":432,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:76",{"_index":431,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:9",{"_index":422,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:92",{"_index":436,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/util.service.ts",{"_index":555,"title":{},"body":{"injectables/UtilService.html":{},"coverage.html":{}}}],["src/services/util.service.ts:16",{"_index":559,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/services/util.service.ts:38",{"_index":561,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/services/util.service.ts:47",{"_index":560,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/services/util.service.ts:9",{"_index":558,"title":{},"body":{"injectables/UtilService.html":{}}}],["start",{"_index":640,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":643,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":645,"title":{},"body":{"index.html":{}}}],["started",{"_index":620,"title":{"index.html":{}},"body":{}}],["starter",{"_index":632,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["starttime}ms",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["statements",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{}}}],["stay",{"_index":668,"title":{},"body":{"index.html":{}}}],["string",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["support",{"_index":659,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":679,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":454,"title":{},"body":{"injectables/PrecoService.html":{}}}],["terminusmodule",{"_index":267,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":648,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":651,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":650,"title":{},"body":{"index.html":{}}}],["tests",{"_index":647,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":657,"title":{},"body":{"index.html":{}}}],["then((result",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.appservice.gethello",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["this.combustivelrepository.find",{"_index":227,"title":{},"body":{"injectables/CombustivelService.html":{}}}],["this.combustivelservice.getallcombustiveis",{"_index":217,"title":{},"body":{"controllers/CombustivelController.html":{}}}],["this.db.pingcheck('database",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpadapterhost.httpadapter.gethttpserver",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["this.postorepository.createquerybuilder('po",{"_index":457,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["this.postorepository.find",{"_index":325,"title":{},"body":{"injectables/PostoService.html":{}}}],["this.postorepository.query",{"_index":326,"title":{},"body":{"injectables/PostoService.html":{}}}],["this.postoservice.getallpostos",{"_index":314,"title":{},"body":{"controllers/PostoController.html":{}}}],["this.postoservice.getrelatoriopostos(datainicio",{"_index":317,"title":{},"body":{"controllers/PostoController.html":{}}}],["this.precorepository.createquerybuilder('pc",{"_index":496,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["this.precorepository.find",{"_index":449,"title":{},"body":{"injectables/PrecoService.html":{}}}],["this.precoservice.getall(pagenumber",{"_index":403,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.precoservice.getmaiorprecocombustivel(bairro",{"_index":408,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.precoservice.getmediabairro(bairro",{"_index":410,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.precoservice.getmediacombustivel(mes",{"_index":413,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.precoservice.getmediamensal",{"_index":414,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.precoservice.getmediaprecocombustivel(bairro",{"_index":407,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.precoservice.getmenorprecocombustivel(bairro",{"_index":406,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.utilservice.getall",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["this.utilservice.getbairrosdisponiveis",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["this.utilservice.getmesesanosdisponiveis",{"_index":104,"title":{},"body":{"controllers/AppController.html":{}}}],["to_char(pc.\"datacoleta",{"_index":575,"title":{},"body":{"injectables/UtilService.html":{}}}],["to_char(pc.datacoleta",{"_index":471,"title":{},"body":{"injectables/PrecoService.html":{}}}],["todas",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"injectables/UtilService.html":{}}}],["today",{"_index":445,"title":{},"body":{"injectables/PrecoService.html":{}}}],["todos",{"_index":567,"title":{},"body":{"injectables/UtilService.html":{}}}],["touch",{"_index":669,"title":{},"body":{"index.html":{}}}],["tracker",{"_index":695,"title":{},"body":{"properties.html":{}}}],["true",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"entities/Combustivel.html":{}}}],["twitter",{"_index":675,"title":{},"body":{"index.html":{}}}],["type",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"entities/Combustivel.html":{},"injectables/CombustivelService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["typeorm",{"_index":207,"title":{},"body":{"entities/Combustivel.html":{},"injectables/CombustivelService.html":{},"entities/Posto.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":239,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["typeormmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forfeature([posto",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forroot",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":631,"title":{},"body":{"index.html":{}}}],["unidademedida",{"_index":332,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["unique",{"_index":199,"title":{},"body":{"entities/Combustivel.html":{}}}],["unit",{"_index":646,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["unlicensed",{"_index":693,"title":{},"body":{"properties.html":{}}}],["username",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["utilservice",{"_index":47,"title":{"injectables/UtilService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/UtilService.html":{},"coverage.html":{},"overview.html":{}}}],["value",{"_index":427,"title":{},"body":{"injectables/PrecoService.html":{}}}],["varchar",{"_index":196,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["velha",{"_index":689,"title":{},"body":{"properties.html":{}}}],["vercel",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["verifica",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{}}}],["verificação",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["version",{"_index":685,"title":{},"body":{"properties.html":{}}}],["vila",{"_index":688,"title":{},"body":{"properties.html":{}}}],["vv",{"_index":696,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":641,"title":{},"body":{"index.html":{}}}],["website",{"_index":673,"title":{},"body":{"index.html":{}}}],["where('pc.datacoleta",{"_index":514,"title":{},"body":{"injectables/PrecoService.html":{}}}],["where('po.bairro",{"_index":483,"title":{},"body":{"injectables/PrecoService.html":{}}}],["world",{"_index":184,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":373,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["you'd",{"_index":662,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":472,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["zoom",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getBairros\n                            \n                            \n                                    \n                                    Async\n                                getDatas\n                            \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                getRoutes\n                            \n                            \n                                    \n                                    Async\n                                getUtils\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getBairros\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBairros()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('bairros')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getDatas\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDatas()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('datas')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoutes(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/rotas')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { description: string; routes: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getUtils\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUtils()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('utils')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { HttpAdapterHost } from '@nestjs/core';\nimport { Request } from 'express';\nimport { UtilService } from './services/util.service';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly utilService: UtilService,\n    private readonly httpAdapterHost: HttpAdapterHost,\n  ) {}\n\n  @Get()\n  getHello(): { message: string; ok: boolean } {\n    return {\n      message: this.appService.getHello(),\n      ok: true,\n    };\n  }\n\n  @Get('/rotas')\n  getRoutes(@Req() request: Request) {\n    const httpServer = this.httpAdapterHost.httpAdapter.getHttpServer();\n    const router = httpServer?._events?.request?._router;\n    if (!router) {\n      console.error('Router not available on this platform.');\n      return {\n        description:\n          'Nenhuma rota disponível no ambiente atual. Pode ser Vercel.',\n        routes: [],\n      };\n    }\n\n    const host = `${request.protocol}://${request.get('host')}`;\n    const routes = router.stack\n      .filter((layer) => layer.route) // Filtra apenas as rotas\n      .map((layer) => ({\n        method: Object.keys(layer.route.methods)[0].toUpperCase(),\n        path: `${host}${layer.route.path}`, // Adiciona o domínio completo ao caminho\n      }));\n\n    return {\n      description:\n        'Lista de todas as rotas disponíveis na API com domínio completo',\n      routes,\n    };\n  }\n\n  @Get('utils')\n  async getUtils() {\n    return this.utilService.getAll();\n  }\n\n  @Get('datas')\n  async getDatas() {\n    return this.utilService.getMesesAnosDisponiveis();\n  }\n\n  @Get('bairros')\n  async getBairros() {\n    return this.utilService.getBairrosDisponiveis();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCombustivelService\n\nCombustivelService\n\nAppModule -->\n\nCombustivelService->AppModule\n\n\n\n\n\nPostoService\n\nPostoService\n\nAppModule -->\n\nPostoService->AppModule\n\n\n\n\n\nPrecoService\n\nPrecoService\n\nAppModule -->\n\nPrecoService->AppModule\n\n\n\n\n\nUtilService\n\nUtilService\n\nAppModule -->\n\nUtilService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            CombustivelService\n                        \n                        \n                            PostoService\n                        \n                        \n                            PrecoService\n                        \n                        \n                            UtilService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            PostoController\n                        \n                        \n                            CombustivelController\n                        \n                        \n                            PrecoController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PostoController } from './controllers/posto/posto.controller';\nimport { PostoService } from './services/posto.service';\nimport { Posto } from './entities/posto.entity';\nimport { CombustivelController } from './controllers/combustivel/combustivel.controller';\nimport { PrecoController } from './controllers/preco/preco.controller';\nimport { CombustivelService } from './services/combustivel.service';\nimport { PrecoService } from './services/preco.service';\nimport { Combustivel } from './entities/combustivel.entity';\nimport { PrecoColetado } from './entities/preco-coletado.entity';\nimport { HealthModule } from './modules/health/health.module';\nimport { UtilService } from './services/util.service';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.POSTGRES_HOST,\n      port: 5432,\n      username: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD,\n      database: process.env.POSTGRES_DATABASE,\n      entities: [__dirname + '/**/*.entity{.ts,.js}'], // Certifique-se de que as entidades estão no caminho correto\n      synchronize: false,\n      logging: true,\n      logger: 'debug',\n    }),\n    TypeOrmModule.forFeature([Posto, Combustivel, PrecoColetado]),\n    HealthModule,\n  ],\n  controllers: [\n    AppController,\n    PostoController,\n    CombustivelController,\n    PrecoController,\n  ],\n  providers: [AppService, PostoService, CombustivelService, PrecoService, UtilService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Combustivel.html":{"url":"entities/Combustivel.html","title":"entity - Combustivel","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Combustivel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/combustivel.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nome\n                            \n                            \n                                    \n                                precosColetados\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({name: 'ID_Combustivel'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/combustivel.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, unique: true, name: 'Nome'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/combustivel.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        precosColetados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PrecoColetado[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, precoColetado => precoColetado.combustivel)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/combustivel.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToMany } from 'typeorm';\nimport { PrecoColetado } from './preco-coletado.entity';\n\n@Entity('COMBUSTIVEL')\nexport class Combustivel {\n  @PrimaryGeneratedColumn({ name: 'ID_Combustivel' })\n  id: number;\n\n  @Column({ type: 'varchar', length: 100, unique: true, name: 'Nome' })\n  nome: string;\n\n  @OneToMany(() => PrecoColetado, (precoColetado) => precoColetado.combustivel)\n  precosColetados: PrecoColetado[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CombustivelController.html":{"url":"controllers/CombustivelController.html","title":"controller - CombustivelController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CombustivelController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/combustivel/combustivel.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                combustiveis\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getAllCombustiveis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAllCombustiveis\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllCombustiveis()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/combustivel/combustivel.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { CombustivelService } from '../../services/combustivel.service';\n\n@Controller('combustiveis')\nexport class CombustivelController {\n  constructor(private readonly combustivelService: CombustivelService) {}\n\n  @Get()\n  getAllCombustiveis() {\n    return this.combustivelService.getAllCombustiveis();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CombustivelService.html":{"url":"injectables/CombustivelService.html","title":"injectable - CombustivelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CombustivelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/combustivel.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllCombustiveis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(combustivelRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/services/combustivel.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        combustivelRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCombustiveis\n                        \n                    \n                \n            \n            \n                \ngetAllCombustiveis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/combustivel.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Combustivel } from '../entities/combustivel.entity';\n\n@Injectable()\nexport class CombustivelService {\n  constructor(\n    @InjectRepository(Combustivel)\n    private readonly combustivelRepository: Repository,\n  ) {}\n\n  getAllCombustiveis(): Promise {\n    return this.combustivelRepository.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                checkDatabase\n                            \n                            \n                                    \n                                    \n                                checkGeneral\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        checkDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkDatabase()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/database')@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/health/health.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        checkGeneral\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkGeneral()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/health/health.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: TypeOrmHealthIndicator,\n  ) {}\n\n  // Verifica o status geral da API com logs detalhados\n  @Get()\n  @HealthCheck()\n  checkGeneral() {\n    const startTime = Date.now();\n    return this.health\n      .check([() => this.db.pingCheck('database')])\n      .then((result) => {\n        const endTime = Date.now();\n        return {\n          ...result,\n          info: {\n            ...result.info,\n            responseTime: `${endTime - startTime}ms`,\n            description: 'Status geral da API',\n          },\n        };\n      });\n  }\n\n  // Verifica o status detalhado do banco de dados com logs\n  @Get('/database')\n  @HealthCheck()\n  checkDatabase() {\n    const startTime = Date.now();\n    return this.health\n      .check([() => this.db.pingCheck('database')])\n      .then((result) => {\n        const endTime = Date.now();\n        return {\n          ...result,\n          info: {\n            ...result.info,\n            responseTime: `${endTime - startTime}ms`,\n            description: 'Verificação detalhada do banco de dados',\n          },\n        };\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { TypeOrmHealthIndicator } from '@nestjs/terminus';\nimport { HealthController } from '../../controllers/health/health.controller';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n  providers: [TypeOrmHealthIndicator],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Posto.html":{"url":"entities/Posto.html","title":"entity - Posto","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Posto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/posto.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                bairro\n                            \n                            \n                                    \n                                bandeira\n                            \n                            \n                                    \n                                cep\n                            \n                            \n                                    \n                                cidade\n                            \n                            \n                                    \n                                cnpj\n                            \n                            \n                                    \n                                estado\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                logradouro\n                            \n                            \n                                    \n                                nomeFantasia\n                            \n                            \n                                    \n                                numero\n                            \n                            \n                                    \n                                precosColetados\n                            \n                            \n                                    \n                                razaoSocial\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bairro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, name: 'Bairro'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bandeira\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, name: 'Bandeira'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 10, name: 'CEP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, name: 'Cidade'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cnpj\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 14, name: 'CNPJ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 50, name: 'Estado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({name: 'ID_Posto'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logradouro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, name: 'Logradouro'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nomeFantasia\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, name: 'NomeFantasia'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 20, name: 'Numero'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        precosColetados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PrecoColetado[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, precoColetado => precoColetado.posto)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        razaoSocial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, name: 'RazaoSocial'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToMany } from 'typeorm';\nimport { PrecoColetado } from './preco-coletado.entity';\n\n@Entity('POSTO')\nexport class Posto {\n  @PrimaryGeneratedColumn({ name: 'ID_Posto' })\n  id: number;\n\n  @Column({ type: 'varchar', length: 14, name: 'CNPJ' })\n  cnpj: string;\n\n  @Column({ type: 'varchar', length: 255, name: 'RazaoSocial' })\n  razaoSocial: string;\n\n  @Column({ type: 'varchar', length: 255, name: 'NomeFantasia' })\n  nomeFantasia: string;\n\n  @Column({ type: 'varchar', length: 100, name: 'Bandeira' })\n  bandeira: string;\n\n  @Column({ type: 'varchar', length: 255, name: 'Logradouro' })\n  logradouro: string;\n\n  @Column({ type: 'varchar', length: 20, name: 'Numero' })\n  numero: string;\n\n  @Column({ type: 'varchar', length: 100, name: 'Bairro' })\n  bairro: string;\n\n  @Column({ type: 'varchar', length: 100, name: 'Cidade' })\n  cidade: string;\n\n  @Column({ type: 'varchar', length: 50, name: 'Estado' })\n  estado: string;\n\n  @Column({ type: 'varchar', length: 10, name: 'CEP' })\n  cep: string;\n\n  @OneToMany(() => PrecoColetado, (precoColetado) => precoColetado.posto)\n  precosColetados: PrecoColetado[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostoController.html":{"url":"controllers/PostoController.html","title":"controller - PostoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/posto/posto.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                postos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getAllPostos\n                            \n                            \n                                    \n                                getRelatorioPostos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAllPostos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllPostos()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/posto/posto.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getRelatorioPostos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRelatorioPostos(dataInicio: string, dataFim: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('relatorio')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/posto/posto.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataInicio\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dataFim\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { PostoService } from '../../services/posto.service';\n\n@Controller('postos')\nexport class PostoController {\n  constructor(private readonly postoService: PostoService) {}\n\n  @Get()\n  getAllPostos() {\n    return this.postoService.getAllPostos();\n  }\n\n  @Get('relatorio')\n  getRelatorioPostos(\n    @Query('dataInicio') dataInicio: string,\n    @Query('dataFim') dataFim: string,\n  ) {\n    return this.postoService.getRelatorioPostos(dataInicio, dataFim);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostoService.html":{"url":"injectables/PostoService.html","title":"injectable - PostoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/posto.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllPostos\n                            \n                            \n                                getRelatorioPostos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/services/posto.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllPostos\n                        \n                    \n                \n            \n            \n                \ngetAllPostos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/posto.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRelatorioPostos\n                        \n                    \n                \n            \n            \n                \ngetRelatorioPostos(dataInicio: string, dataFim: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/posto.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataInicio\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dataFim\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Posto } from '../entities/posto.entity';\n\n@Injectable()\nexport class PostoService {\n  constructor(\n    @InjectRepository(Posto)\n    private readonly postoRepository: Repository,\n  ) {}\n\n  getAllPostos(): Promise {\n    return this.postoRepository.find();\n  }\n\n  getRelatorioPostos(dataInicio: string, dataFim: string): Promise {\n    return this.postoRepository.query(\n      `EXEC sp_ResumoPostosEPrecos @DataInicio = '${dataInicio}', @DataFim = '${dataFim}'`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PrecoColetado.html":{"url":"entities/PrecoColetado.html","title":"entity - PrecoColetado","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PrecoColetado\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/preco-coletado.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                combustivel\n                            \n                            \n                                    \n                                dataColeta\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                posto\n                            \n                            \n                                    \n                                preco\n                            \n                            \n                                    \n                                unidadeMedida\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        combustivel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Combustivel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, combustivel => combustivel.precosColetados)@JoinColumn({name: 'CombustivelID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/preco-coletado.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dataColeta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date', name: 'DataColeta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/preco-coletado.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({name: 'ID_Preco'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/preco-coletado.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        posto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Posto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, posto => posto.precosColetados)@JoinColumn({name: 'PostoID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/preco-coletado.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'numeric', precision: 10, scale: 3, name: 'Preco'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/preco-coletado.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unidadeMedida\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 10, name: 'UnidadeMedida'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/preco-coletado.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Posto } from './posto.entity';\nimport { Combustivel } from './combustivel.entity';\n\n@Entity('PRECO_COLETADO')\nexport class PrecoColetado {\n  @PrimaryGeneratedColumn({ name: 'ID_Preco' })\n  id: number;\n\n  @Column({ type: 'numeric', precision: 10, scale: 3, name: 'Preco' })\n  preco: number;\n\n  @Column({ type: 'varchar', length: 10, name: 'UnidadeMedida' })\n  unidadeMedida: string;\n\n  @Column({ type: 'date', name: 'DataColeta' })\n  dataColeta: Date;\n\n  @ManyToOne(() => Posto, (posto) => posto.precosColetados)\n  @JoinColumn({ name: 'PostoID' })  // Alterado para referenciar corretamente PostoID\n  posto: Posto;\n\n  @ManyToOne(() => Combustivel, (combustivel) => combustivel.precosColetados)\n  @JoinColumn({ name: 'CombustivelID' })\n  combustivel: Combustivel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PrecoController.html":{"url":"controllers/PrecoController.html","title":"controller - PrecoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PrecoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/preco/preco.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                precos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getMaiorPreco\n                            \n                            \n                                    \n                                    Async\n                                getMediaBairro\n                            \n                            \n                                    \n                                    Async\n                                getMediaCombustivel\n                            \n                            \n                                    \n                                    Async\n                                getMediaMensal\n                            \n                            \n                                    \n                                    Async\n                                getMediaPreco\n                            \n                            \n                                    \n                                    Async\n                                getMenorPreco\n                            \n                            \n                                    \n                                    Async\n                                getPrecos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMaiorPreco\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMaiorPreco(bairro?: string, combustivel?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('maior-preco')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMediaBairro\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaBairro(bairro: string, combustivel: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('media-bairro')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMediaCombustivel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaCombustivel(mes?: string, ano?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('media-combustivel')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mes\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                ano\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMediaMensal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaMensal()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('media-mensal')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMediaPreco\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaPreco(bairro?: string, combustivel?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('media-preco')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMenorPreco\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMenorPreco(bairro?: string, combustivel?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('menor-preco')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getPrecos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPrecos(page?: number, limit?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { PrecoService } from '../../services/preco.service';\n\n@Controller('precos')\nexport class PrecoController {\n  constructor(private readonly precoService: PrecoService) {}\n\n  @Get()\n  async getPrecos(\n    @Query('page') page?: number, // Paginação\n    @Query('limit') limit?: number, // Limite de resultados\n  ) {\n    const pageNumber = page ? Number(page) : 1;\n    const limitNumber = limit ? Number(limit) : 50;\n\n    return this.precoService.getAll(pageNumber, limitNumber);\n  }\n\n  @Get('menor-preco')\n  async getMenorPreco(\n    @Query('bairro') bairro?: string,\n    @Query('combustivel') combustivel?: string,\n  ) {\n    return this.precoService.getMenorPrecoCombustivel(bairro, combustivel);\n  }\n\n  @Get('media-preco')\n  async getMediaPreco(\n    @Query('bairro') bairro?: string,\n    @Query('combustivel') combustivel?: string,\n  ) {\n    return this.precoService.getMediaPrecoCombustivel(bairro, combustivel);\n  }\n\n  @Get('maior-preco')\n  async getMaiorPreco(\n    @Query('bairro') bairro?: string,\n    @Query('combustivel') combustivel?: string,\n  ) {\n    return this.precoService.getMaiorPrecoCombustivel(bairro, combustivel);\n  }\n\n  @Get('media-bairro')\n  async getMediaBairro(@Query('bairro') bairro: string, @Query('combustivel') combustivel: string) {\n    return this.precoService.getMediaBairro(bairro, combustivel);\n  }\n\n  @Get('media-combustivel')\n  async getMediaCombustivel(@Query('mes') mes?: string, @Query('ano') ano?: string) {\n    return this.precoService.getMediaCombustivel(mes, ano);\n  }\n\n  @Get('media-mensal')\n  async getMediaMensal() {\n    return this.precoService.getMediaMensal();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrecoService.html":{"url":"injectables/PrecoService.html","title":"injectable - PrecoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrecoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/preco.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getMaiorPrecoCombustivel\n                            \n                            \n                                    Async\n                                getMediaBairro\n                            \n                            \n                                    Async\n                                getMediaCombustivel\n                            \n                            \n                                    Async\n                                getMediaMensal\n                            \n                            \n                                    Async\n                                getMediaPrecoCombustivel\n                            \n                            \n                                    Async\n                                getMenorPrecoCombustivel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(precoRepository: Repository, postoRepository: Repository, combustivelRepository: Repository, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/services/preco.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        precoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        postoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        combustivelRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(page: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    50\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMaiorPrecoCombustivel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMaiorPrecoCombustivel(bairro?: string, combustivel?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMediaBairro\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaBairro(bairro: string, combustivel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMediaCombustivel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaCombustivel(mes?: string, ano?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mes\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                ano\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMediaMensal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaMensal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMediaPrecoCombustivel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaPrecoCombustivel(bairro?: string, combustivel?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMenorPrecoCombustivel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMenorPrecoCombustivel(bairro?: string, combustivel?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, LessThanOrEqual, DataSource } from 'typeorm';\nimport { PrecoColetado } from '../entities/preco-coletado.entity';\nimport { Posto } from '../entities/posto.entity';\nimport { Combustivel } from '../entities/combustivel.entity';\n\n@Injectable()\nexport class PrecoService {\n  constructor(\n    @InjectRepository(PrecoColetado) private precoRepository: Repository,\n    @InjectRepository(Posto) private postoRepository: Repository,\n    @InjectRepository(Combustivel) private combustivelRepository: Repository,\n    private dataSource: DataSource\n  ) {}\n\n  // Método getAll com paginação e ordenação por data decrescente\n  async getAll(page = 1, limit = 50) {\n    const today = new Date();\n    const skip = (page - 1) * limit;\n\n    return await this.precoRepository.find({\n      relations: ['posto', 'combustivel'],\n      where: { dataColeta: LessThanOrEqual(today) },\n      order: { dataColeta: 'DESC' },\n      skip,\n      take: limit,  // Limite de resultados por página (50 por padrão)\n    });\n  }\n\n  async getMediaBairro(bairro: string, combustivel: string) {\n\n      return await this.postoRepository.createQueryBuilder('po')\n        .select([\n          'po.NomeFantasia AS nome_posto',\n          'po.Logradouro AS logradouro',\n          'po.Numero AS numero',\n          'po.Bairro AS bairro',\n          'po.Cidade AS cidade',\n          'po.Estado AS estado',\n          'po.CEP AS cep',\n          'co.Nome AS nome_combustivel',\n          'ROUND(MIN(pc.Preco), 3) AS menor_preco',\n          \"TO_CHAR(pc.DataColeta, 'YYYY-MM') AS mes_coleta\"\n        ])\n        .innerJoin(PrecoColetado, 'pc', 'po.ID_Posto = pc.PostoID')\n        .innerJoin(Combustivel, 'co', 'pc.CombustivelID = co.ID_Combustivel')\n        .where('po.Bairro = :bairro', { bairro: bairro })\n        .andWhere('co.Nome = :nome_combustivel', { nome_combustivel: combustivel })\n        .groupBy('po.NomeFantasia')\n        .addGroupBy('po.Logradouro')\n        .addGroupBy('po.Numero')\n        .addGroupBy('po.Bairro')\n        .addGroupBy('po.Cidade')\n        .addGroupBy('po.Estado')\n        .addGroupBy('po.CEP')\n        .addGroupBy('co.Nome')\n        .addGroupBy(\"TO_CHAR(pc.DataColeta, 'YYYY-MM')\")\n        .orderBy('mes_coleta', 'DESC')\n        .getRawMany();\n  }\n\n  async getMediaMensal() {\n\n    return await this.precoRepository.createQueryBuilder('pc')\n      .select(\"TO_CHAR(pc.DataColeta, 'YYYY-MM')\", 'mes_coleta')\n      .addSelect('co.Nome', 'nome_combustivel')\n      .addSelect('ROUND(AVG(pc.Preco), 3)', 'preco_medio')\n      .innerJoin(Combustivel, 'co', 'pc.CombustivelID = co.ID_Combustivel')\n      .groupBy(\"TO_CHAR(pc.DataColeta, 'YYYY-MM')\")\n      .addGroupBy('co.Nome')\n      .orderBy('mes_coleta', 'DESC')\n      .getRawMany();\n  }\n\n  async getMediaCombustivel(mes?: string, ano?: string) {\n    const query = this.precoRepository.createQueryBuilder('pc')\n      .select('co.\"Nome\"', 'nome_combustivel')\n      .addSelect('ROUND(AVG(pc.\"Preco\"), 3)', 'preco_medio')\n      .innerJoin(Combustivel, 'co', 'pc.\"CombustivelID\" = co.\"ID_Combustivel\"');\n\n    if (mes && ano) {\n      query.where('TO_CHAR(pc.\"DataColeta\", \\'MM\\') = :mes', { mes })\n        .andWhere('TO_CHAR(pc.\"DataColeta\", \\'YYYY\\') = :ano', { ano });\n    }\n\n    query.groupBy('co.\"Nome\"');\n\n    return await query.getRawMany();\n  }\n\n  async getMenorPrecoCombustivel(bairro?: string, combustivel?: string) {\n    const rawResults = await this.postoRepository.createQueryBuilder('po')\n      .select([\n        'po.NomeFantasia AS nome_posto',\n        'po.Logradouro AS logradouro',\n        'po.Numero AS numero',\n        'po.Bairro AS bairro',\n        'po.Cidade AS cidade',\n        'po.Estado AS estado',\n        'po.CEP AS cep',\n        'co.Nome AS nome_combustivel',\n        'ROUND(pc.Preco, 3) AS menor_preco',\n        'pc.DataColeta AS data_coleta'\n      ])\n      .innerJoin(PrecoColetado, 'pc', 'po.ID_Posto = pc.PostoID')\n      .innerJoin(Combustivel, 'co', 'pc.CombustivelID = co.ID_Combustivel')\n      .where('pc.DataColeta = (SELECT MAX(pc2.\"DataColeta\") FROM public.\"PRECO_COLETADO\" pc2 WHERE pc2.\"PostoID\" = po.\"ID_Posto\" AND pc2.\"CombustivelID\" = co.\"ID_Combustivel\")')\n      .orderBy('menor_preco', 'ASC');\n\n    if (bairro) {\n      rawResults.andWhere('po.Bairro = :bairro', { bairro });\n    }\n\n    if (combustivel) {\n      rawResults.andWhere('co.Nome = :nome', { nome: combustivel });\n    }\n\n    const results = await rawResults.getRawMany();\n\n    // Agrupar resultados por posto\n    const groupedResults = results.reduce((acc, curr) => {\n      const postoKey = `${curr.nome_posto}-${curr.logradouro}`;\n\n      if (!acc[postoKey]) {\n        acc[postoKey] = {\n          nome_posto: curr.nome_posto,\n          logradouro: curr.logradouro,\n          numero: curr.numero,\n          bairro: curr.bairro,\n          cidade: curr.cidade,\n          estado: curr.estado,\n          cep: curr.cep,\n          combustiveis: [],\n        };\n      }\n\n      acc[postoKey].combustiveis.push({\n        nome_combustivel: curr.nome_combustivel,\n        menor_preco: curr.menor_preco,\n        data_coleta: curr.data_coleta,\n      });\n\n      return acc;\n    }, {});\n    return Object.values(groupedResults);\n  }\n\n  async getMediaPrecoCombustivel(bairro?: string, combustivel?: string) {\n    const rawResults = await this.postoRepository.createQueryBuilder('po')\n      .select([\n        'po.NomeFantasia AS nome_posto',\n        'po.Logradouro AS logradouro',\n        'po.Numero AS numero',\n        'po.Bairro AS bairro',\n        'po.Cidade AS cidade',\n        'po.Estado AS estado',\n        'po.CEP AS cep',\n        'co.Nome AS nome_combustivel',\n        'ROUND(AVG(pc.Preco), 3) AS media_preco',\n        'MAX(pc.DataColeta) AS data_coleta'\n      ])\n      .innerJoin(PrecoColetado, 'pc', 'po.ID_Posto = pc.PostoID')\n      .innerJoin(Combustivel, 'co', 'pc.CombustivelID = co.ID_Combustivel')\n      .groupBy('po.ID_Posto, po.NomeFantasia, po.Logradouro, po.Numero, po.Bairro, po.Cidade, po.Estado, po.CEP, co.Nome')\n      .orderBy('media_preco', 'ASC');\n\n    if (bairro) {\n      rawResults.andWhere('po.Bairro = :bairro', { bairro });\n    }\n\n    if (combustivel) {\n      rawResults.andWhere('co.Nome = :nome', { nome: combustivel });\n    }\n\n    const results = await rawResults.getRawMany();\n\n    // Agrupar resultados por posto\n    const groupedResults = results.reduce((acc, curr) => {\n      const postoKey = `${curr.nome_posto}-${curr.logradouro}`;\n\n      if (!acc[postoKey]) {\n        acc[postoKey] = {\n          nome_posto: curr.nome_posto,\n          logradouro: curr.logradouro,\n          numero: curr.numero,\n          bairro: curr.bairro,\n          cidade: curr.cidade,\n          estado: curr.estado,\n          cep: curr.cep,\n          combustiveis: [],\n        };\n      }\n\n      acc[postoKey].combustiveis.push({\n        nome_combustivel: curr.nome_combustivel,\n        media_preco: curr.media_preco,\n        data_coleta: curr.data_coleta,\n      });\n\n      return acc;\n    }, {});\n\n    return Object.values(groupedResults);\n  }\n\n  async getMaiorPrecoCombustivel(bairro?: string, combustivel?: string) {\n    const rawResults = await this.postoRepository.createQueryBuilder('po')\n      .select([\n        'po.NomeFantasia AS nome_posto',\n        'po.Logradouro AS logradouro',\n        'po.Numero AS numero',\n        'po.Bairro AS bairro',\n        'po.Cidade AS cidade',\n        'po.Estado AS estado',\n        'po.CEP AS cep',\n        'co.Nome AS nome_combustivel',\n        'ROUND(MAX(pc.Preco), 3) AS maior_preco',\n        'MAX(pc.DataColeta) AS data_coleta'\n      ])\n      .innerJoin(PrecoColetado, 'pc', 'po.ID_Posto = pc.PostoID')\n      .innerJoin(Combustivel, 'co', 'pc.CombustivelID = co.ID_Combustivel')\n      .groupBy('po.ID_Posto, po.NomeFantasia, po.Logradouro, po.Numero, po.Bairro, po.Cidade, po.Estado, po.CEP, co.Nome')\n      .orderBy('maior_preco', 'DESC');\n\n    if (bairro) {\n      rawResults.andWhere('po.Bairro = :bairro', { bairro });\n    }\n\n    if (combustivel) {\n      rawResults.andWhere('co.Nome = :nome', { nome: combustivel });\n    }\n\n    const results = await rawResults.getRawMany();\n\n    // Agrupar resultados por posto\n    const groupedResults = results.reduce((acc, curr) => {\n      const postoKey = `${curr.nome_posto}-${curr.logradouro}`;\n\n      if (!acc[postoKey]) {\n        acc[postoKey] = {\n          nome_posto: curr.nome_posto,\n          logradouro: curr.logradouro,\n          numero: curr.numero,\n          bairro: curr.bairro,\n          cidade: curr.cidade,\n          estado: curr.estado,\n          cep: curr.cep,\n          combustiveis: [],\n        };\n      }\n\n      acc[postoKey].combustiveis.push({\n        nome_combustivel: curr.nome_combustivel,\n        maior_preco: curr.maior_preco,\n        data_coleta: curr.data_coleta,\n      });\n\n      return acc;\n    }, {});\n\n    return Object.values(groupedResults);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilService.html":{"url":"injectables/UtilService.html","title":"injectable - UtilService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/util.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getBairrosDisponiveis\n                            \n                            \n                                    Async\n                                getMesesAnosDisponiveis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(precoRepository: Repository, postoRepository: Repository, combustivelRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/services/util.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        precoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        postoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        combustivelRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/util.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBairrosDisponiveis\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBairrosDisponiveis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/util.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMesesAnosDisponiveis\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMesesAnosDisponiveis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/util.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, LessThanOrEqual, DataSource } from 'typeorm';\nimport { PrecoColetado } from '../entities/preco-coletado.entity';\nimport { Posto } from '../entities/posto.entity';\nimport { Combustivel } from '../entities/combustivel.entity';\n\n@Injectable()\nexport class UtilService {\n  constructor(\n    @InjectRepository(PrecoColetado) private precoRepository: Repository,\n    @InjectRepository(Posto) private postoRepository: Repository,\n    @InjectRepository(Combustivel) private combustivelRepository: Repository,\n  ) {}\n\n  async getAll() {\n    return [\n      {\n        nome: 'combustivies',\n        rota: '/combustiveis',\n        parametros: null,\n        descricao: 'Retorna todos os combustíveis disponíveis'\n      },\n      {\n        nome: 'datas',\n        rota: '/datas',\n        parametros: null,\n        descricao: 'Retorna todas as datas com mês e ano disponível'\n      },{\n        nome: 'bairros',\n        rota: '/bairros',\n        parametros: null,\n        descricao: 'Retorna todos os bairros disponiveis'\n      },\n    ];\n  }\n\n  async getMesesAnosDisponiveis() {\n    return await this.precoRepository.createQueryBuilder('pc')\n      .select('DISTINCT TO_CHAR(pc.\"DataColeta\", \\'MM\\')', 'mes')\n      .addSelect('TO_CHAR(pc.\"DataColeta\", \\'YYYY\\')', 'ano')\n      .orderBy('ano', 'ASC')\n      .addOrderBy('mes', 'ASC')\n      .getRawMany();\n  }\n\n  async getBairrosDisponiveis() {\n    return await this.postoRepository.createQueryBuilder('po')\n      .select('DISTINCT po.Bairro', 'bairro')\n      .orderBy('po.Bairro', 'ASC')\n      .getRawMany();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/controllers/combustivel/combustivel.controller.ts\n            \n            controller\n            CombustivelController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/controllers/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/controllers/posto/posto.controller.ts\n            \n            controller\n            PostoController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/controllers/preco/preco.controller.ts\n            \n            controller\n            PrecoController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/entities/combustivel.entity.ts\n            \n            entity\n            Combustivel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/posto.entity.ts\n            \n            entity\n            Posto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/preco-coletado.entity.ts\n            \n            entity\n            PrecoColetado\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/combustivel.service.ts\n            \n            injectable\n            CombustivelService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/posto.service.ts\n            \n            injectable\n            PostoService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/preco.service.ts\n            \n            injectable\n            PrecoService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/services/util.service.ts\n            \n            injectable\n            UtilService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.0.3\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            axios : ^1.7.7\n        \n            mssql : ^10.0.4\n        \n            pg : ^8.12.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCombustivelService\n\nCombustivelService\n\nAppModule -->\n\nCombustivelService->AppModule\n\n\n\n\n\nPostoService\n\nPostoService\n\nAppModule -->\n\nPostoService->AppModule\n\n\n\n\n\nPrecoService\n\nPrecoService\n\nAppModule -->\n\nPrecoService->AppModule\n\n\n\n\n\nUtilService\n\nUtilService\n\nAppModule -->\n\nUtilService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : API para retornar os dados de postos combustíveis de Vila Velha - ES do Ano de 2022 até 2024\n        \n            License : UNLICENSED\n        \n            Repository : https://github.com/elisaharmmer/Fuel-Tracker-VV\n        \n            Author : Elisa Harmmer Ferreira (https://github.com/elisaharmmer) / Nícolas Aigner (https://github.com/nicolasaigner)\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
