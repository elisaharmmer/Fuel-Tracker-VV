var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.636,1,1.771]],["body/controllers/AppController.html",[0,0.702,1,1.955,2,0.744,3,0.484,4,0.232,5,0.232,6,1.772,7,0.274,8,0.79,9,2.456,10,4.225,11,4.225,12,2.625,13,3.207,14,4.225,15,1.552,16,0.043,17,3.207,18,0.767,19,2.165,20,1.112,21,2.056,22,3.207,23,2.165,24,2.165,25,5.294,26,2.165,27,1.103,28,0.79,29,0.74,30,1.103,31,2.165,32,2.165,33,3.207,34,2.165,35,2.75,36,0.885,37,4.725,38,3.207,39,2.165,40,0.62,41,2.165,42,0.368,43,1.83,44,1.772,45,3.821,46,1.772,47,1.772,48,1.83,49,1.772,50,2.165,51,2.165,52,1.319,53,3.821,54,0.274,55,0.274,56,0.926,57,1.635,58,1.465,59,2.165,60,3.207,61,3.207,62,2.165,63,2.566,64,3.207,65,3.207,66,3.821,67,3.207,68,2.625,69,3.207,70,2.165,71,3.207,72,3.207,73,3.207,74,3.207,75,3.821,76,3.207,77,3.207,78,3.207,79,3.207,80,2.165,81,2.165,82,2.165,83,3.207,84,2.165,85,2.165,86,2.165,87,2.165,88,2.165,89,2.625,90,2.165,91,2.165,92,1.164,93,2.165,94,1.319,95,2.165,96,2.165,97,1.772,98,2.165,99,2.165,100,1.772,101,1.772,102,2.165,103,2.165,104,2.165,105,2.165,106,2.165,107,2.165,108,2.165,109,1.513,110,3.207,111,3.207,112,2.165,113,1.772,114,2.165,115,0.744,116,1.772,117,1.772,118,2.165,119,1.513,120,1.036,121,2.165,122,2.165,123,2.165,124,0.023,125,0.023]],["title/modules/AppModule.html",[126,1.563,127,1.771]],["body/modules/AppModule.html",[1,2.568,2,1.25,3,0.326,4,0.275,5,0.275,16,0.043,29,0.498,40,0.728,42,0.437,43,2.401,44,2.105,48,2.401,49,2.105,54,0.326,55,0.326,68,2.105,94,2.215,113,2.105,115,0.885,124,0.026,125,0.026,126,2.268,127,3.499,128,1.384,129,1.568,130,2.105,131,2.105,132,1.568,133,2.945,134,2.105,135,2.105,136,2.105,137,2.105,138,2.698,139,2.401,140,2.401,141,2.401,142,2.401,143,2.974,144,2.105,145,2.105,146,2.572,147,2.568,148,2.568,149,2.568,150,2.568,151,2.974,152,2.572,153,1.101,154,2.572,155,2.105,156,2.572,157,2.572,158,2.105,159,0.793,160,1.568,161,2.572,162,2.572,163,2.105,164,2.105,165,1.003,166,1.384,167,1.12,168,1.384,169,1.101,170,2.572,171,2.105,172,2.572,173,2.572,174,2.572,175,2.572,176,2.572,177,2.572,178,2.572,179,2.572,180,2.572,181,2.572,182,2.572,183,2.572,184,2.572,185,2.572,186,1.384,187,2.572,188,2.572,189,2.572,190,2.572,191,2.572,192,2.572,193,2.572,194,2.572,195,2.572,196,2.572,197,2.572,198,2.572,199,2.572,200,2.572]],["title/injectables/AppService.html",[43,1.391,201,0.636]],["body/injectables/AppService.html",[3,0.526,4,0.444,5,0.444,7,0.526,8,1.224,12,4.511,16,0.042,18,0.705,20,1.022,36,1.371,40,0.526,42,0.705,43,2.379,54,0.526,55,0.526,92,1.022,124,0.036,125,0.036,201,1.088,202,1.776,203,3.397,204,4.15,205,4.15,206,4.15]],["title/entities/Combustivel.html",[165,0.802,207,1.243]],["body/entities/Combustivel.html",[3,0.442,4,0.373,5,0.373,7,0.442,15,1.691,16,0.043,18,0.835,28,1.211,29,1.004,36,1.231,40,0.565,54,0.442,55,0.442,94,2.718,124,0.032,125,0.032,165,1.231,167,1.69,169,1.491,186,1.875,207,1.491,208,2.852,209,2.4,210,2.997,211,3.744,212,4.024,213,1.533,214,2.435,215,4.459,216,3.485,217,2.435,218,3.116,219,3.116,220,3.649,221,4.459,222,3.485,223,2.852,224,4.459,225,3.485,226,3.116,227,3.116,228,3.649,229,1.198,230,1.491,231,3.485]],["title/controllers/CombustivelController.html",[0,0.636,148,1.771]],["body/controllers/CombustivelController.html",[0,0.879,2,1.38,3,0.509,4,0.429,5,0.429,7,0.509,8,1.199,15,1.38,16,0.043,18,0.682,20,0.988,40,0.617,42,0.682,54,0.509,55,0.509,58,1.538,92,0.988,124,0.035,125,0.035,139,2.51,148,2.967,163,3.283,232,3.283,233,2.159,234,2.159,235,4.46,236,4.012,237,4.012,238,2.445,239,4.012]],["title/injectables/CombustivelService.html",[139,1.391,201,0.636]],["body/injectables/CombustivelService.html",[3,0.476,4,0.401,5,0.401,7,0.476,8,1.151,16,0.043,18,0.794,20,0.924,27,1.29,28,0.924,29,0.726,30,1.29,40,0.675,42,0.637,54,0.476,55,0.476,56,1.999,57,1.605,58,1.438,92,0.924,124,0.034,125,0.034,139,2.236,153,1.605,165,1.035,166,2.019,201,1.023,202,1.605,229,1.29,235,4.357,240,3.07,241,3.751,242,2.278,243,3.751,244,3.264,245,3.751,246,3.264,247,2.019,248,2.621,249,3.751]],["title/controllers/HealthController.html",[0,0.636,250,1.771]],["body/controllers/HealthController.html",[0,0.662,2,1.04,3,0.582,4,0.324,5,0.324,7,0.383,8,1.001,15,1.397,16,0.043,18,0.69,20,1.001,35,2.476,40,0.515,42,0.514,54,0.383,55,0.383,56,1.294,57,1.739,63,2.349,92,1.209,109,2.839,115,1.397,119,2.839,120,1.945,124,0.029,125,0.029,233,1.627,250,2.476,251,2.475,252,4.063,253,4.905,254,4.905,255,3.024,256,3.024,257,3.024,258,3.024,259,4.588,260,4.063,261,3.325,262,2.113,263,3.024,264,3.024,265,4.063,266,4.588,267,4.063,268,4.063,269,4.063,270,3.024,271,4.063,272,4.905,273,4.063,274,4.063,275,4.063,276,4.063,277,4.905,278,3.325,279,4.063,280,4.063,281,4.063,282,3.024,283,3.325,284,2.839,285,3.024,286,3.024,287,3.024]],["title/modules/HealthModule.html",[126,1.563,138,1.563]],["body/modules/HealthModule.html",[2,1.674,3,0.509,4,0.429,5,0.429,16,0.043,40,0.708,42,0.682,54,0.509,55,0.509,124,0.035,125,0.035,126,2.62,128,2.159,133,2.804,138,2.62,151,3.283,250,3.195,261,3.984,262,3.402,288,4.012,289,4.868,290,4.012,291,4.868,292,3.283]],["title/controllers/InsightsController.html",[0,0.636,150,1.771]],["body/controllers/InsightsController.html",[0,0.539,2,0.847,3,0.312,4,0.263,5,0.263,7,0.312,8,0.868,15,1.7,16,0.043,18,0.84,20,1.218,27,1.544,28,1.106,29,0.869,30,1.544,36,1.364,40,0.447,42,0.418,54,0.312,55,0.312,58,0.944,92,1.218,115,1.415,120,1.179,124,0.025,125,0.025,140,1.97,150,2.147,159,1.524,171,2.015,213,1.822,230,1.921,233,1.325,234,1.896,238,1.501,293,2.015,294,2.462,295,3.675,296,3.367,297,2.883,298,2.883,299,3.675,300,2.883,301,3.523,302,2.462,303,2.015,304,3.675,305,3.523,306,3.523,307,3.012,308,2.462,309,2.883,310,2.015,311,3.523,312,3.523,313,2.462,314,3.138,315,2.015,316,3.523,317,3.523,318,2.462,319,2.147,320,3.523,321,2.462,322,2.015,323,3.523,324,2.737,325,3.367,326,3.523,327,2.462,328,1.501,329,2.015,330,2.462,331,1.325,332,3.675,333,2.015,334,2.462,335,1.721,336,2.015,337,2.015,338,2.015,339,2.462,340,1.501,341,2.015,342,2.015,343,1.896,344,2.015,345,2.462,346,2.462,347,1.687,348,2.015,349,2.015,350,2.462,351,2.015,352,2.015,353,2.015,354,2.462,355,2.015,356,2.015,357,2.015,358,2.015,359,2.462,360,2.462,361,1.721,362,2.015,363,2.883,364,1.501,365,2.015,366,2.462,367,2.462]],["title/injectables/InsightsService.html",[140,1.391,201,0.636]],["body/injectables/InsightsService.html",[3,0.221,4,0.187,5,0.187,7,0.221,8,0.671,9,2.596,16,0.043,18,0.771,20,1.071,27,1.41,28,1.01,29,0.794,30,1.41,36,1.199,40,0.479,42,0.297,52,3.007,54,0.221,55,0.221,56,1.165,57,0.747,58,0.669,63,1.304,92,1.071,115,1.495,120,0.836,124,0.02,125,0.02,140,1.304,153,0.747,159,1.55,165,1.296,167,0.538,168,0.939,169,0.747,201,0.596,202,0.747,213,1.659,229,0.6,230,1.433,242,1.619,246,3.568,247,0.939,295,3.095,296,2.229,297,2.229,298,2.229,299,3.095,300,2.229,303,2.229,304,3.095,307,1.66,309,2.229,310,2.229,314,2.866,315,2.229,319,1.66,322,2.229,324,1.66,325,1.429,331,2.339,332,3.095,333,1.429,334,1.903,335,1.22,336,1.429,340,2.305,341,1.429,342,1.429,343,1.466,344,1.429,347,1.811,348,1.429,349,1.429,351,1.429,352,1.429,353,1.429,355,1.429,356,1.429,357,1.429,358,1.429,361,1.22,362,1.429,363,2.229,364,1.064,365,1.429,368,1.429,369,1.746,370,1.746,371,2.723,372,1.746,373,1.746,374,1.746,375,1.746,376,1.746,377,1.746,378,1.22,379,1.746,380,2.041,381,4.539,382,3.172,383,3.557,384,3.715,385,2.723,386,3.095,387,3.357,388,3.843,389,1.746,390,1.746,391,3.715,392,3.095,393,1.746,394,3.357,395,1.429,396,3.172,397,3.357,398,3.172,399,2.74,400,3.782,401,3.095,402,3.715,403,2.041,404,1.22,405,3.843,406,1.746,407,1.746,408,2.723,409,2.74,410,1.746,411,1.746,412,1.746,413,1.746,414,1.746,415,1.746,416,1.746,417,1.746,418,1.746,419,1.746,420,1.746,421,1.746,422,1.746,423,2.723,424,1.746,425,1.746,426,3.348,427,1.746,428,1.746,429,2.723,430,1.903,431,2.723]],["title/entities/Posto.html",[159,0.896,207,1.243]],["body/entities/Posto.html",[3,0.279,4,0.236,5,0.236,7,0.279,15,1.85,16,0.043,18,0.914,28,1.404,29,1.107,36,1.567,40,0.412,54,0.279,55,0.279,124,0.023,125,0.023,159,1.002,167,1.467,169,0.943,186,1.186,207,0.943,209,1.749,210,2.354,212,3.161,213,1.118,214,1.54,217,3.663,218,3.967,219,3.967,220,3.893,223,1.804,226,2.272,227,3.715,228,2.66,229,0.758,230,0.943,432,1.804,433,2.446,434,3.72,435,3.177,436,3.177,437,3.72,438,3.177,439,3.177,440,4.546,441,3.177,442,4.546,443,2.204,444,2.204,445,2.66,446,2.204,447,2.204,448,3.251,449,2.204,450,2.272,451,2.204,452,3.251,453,2.204,454,4.756,455,2.204,456,2.204,457,3.251,458,2.204,459,3.251,460,2.204,461,2.204,462,2.204]],["title/controllers/PostoController.html",[0,0.636,147,1.771]],["body/controllers/PostoController.html",[0,0.74,2,1.162,3,0.428,4,0.362,5,0.362,7,0.428,8,1.077,15,1.666,16,0.043,18,0.823,20,1.194,27,1.503,28,1.077,29,0.846,30,1.503,36,1.5,40,0.554,42,0.574,54,0.428,55,0.428,58,1.295,92,1.194,124,0.031,125,0.031,141,2.32,147,2.664,158,2.765,210,2.664,213,1.666,233,1.818,238,2.059,324,2.059,328,2.059,329,2.765,337,2.765,338,2.765,463,2.765,464,4.193,465,4.371,466,3.966,467,3.378,468,3.378,469,4.371,470,3.378,471,2.765,472,4.193,473,4.371,474,3.378,475,3.577,476,3.378,477,3.378,478,3.378,479,3.378,480,3.378]],["title/injectables/PostoService.html",[141,1.391,201,0.636]],["body/injectables/PostoService.html",[3,0.249,4,0.21,5,0.21,7,0.249,8,0.735,9,2.182,16,0.043,18,0.684,20,0.888,21,1.058,27,1.24,28,0.888,29,0.698,30,1.24,36,1.258,40,0.578,42,0.334,52,1.198,54,0.249,55,0.249,56,1.277,57,0.841,58,0.754,63,2.182,92,1.067,94,1.819,109,2.085,115,0.676,124,0.021,125,0.021,141,1.429,153,0.841,159,1.112,160,1.198,165,0.824,166,1.058,167,0.606,168,1.058,169,0.841,201,0.653,202,0.841,213,1.24,229,0.676,230,1.95,234,1.606,242,1.723,246,2.814,247,1.058,278,2.442,283,1.609,284,2.085,307,1.198,319,2.198,331,1.058,334,1.374,335,1.374,340,1.198,343,1.058,347,0.941,380,1.819,382,2.814,383,1.609,384,1.609,387,1.609,388,1.609,391,2.442,392,2.442,394,1.609,395,1.609,396,2.085,397,1.609,398,1.374,399,1.609,401,1.609,403,2.198,404,3.185,405,1.609,433,1.058,434,1.609,435,1.374,436,1.374,437,1.609,438,1.374,439,1.374,441,1.374,464,3.295,466,2.442,471,2.442,472,3.543,475,2.951,481,1.609,482,2.984,483,1.966,484,1.966,485,2.085,486,1.966,487,2.984,488,1.966,489,1.966,490,1.374,491,3.606,492,1.966,493,2.442,494,2.984,495,4.026,496,3.606,497,1.966,498,3.606,499,1.966,500,3.606,501,1.966,502,3.606,503,1.966,504,3.606,505,1.966,506,3.606,507,1.966,508,3.606,509,1.966,510,3.606,511,4.329,512,1.966,513,1.966,514,2.984,515,1.966,516,2.984,517,1.966,518,2.984,519,1.966,520,1.966,521,1.966,522,2.984,523,2.984,524,1.966,525,1.966,526,1.966,527,1.966,528,2.085,529,1.609,530,1.374,531,1.966,532,1.374,533,1.966,534,2.984,535,1.966,536,1.966,537,1.966,538,1.966,539,1.966,540,1.966,541,1.966,542,1.966,543,1.966,544,1.966,545,1.966,546,1.609,547,1.966,548,1.966,549,1.966,550,1.609,551,1.609,552,1.966,553,1.966,554,1.966,555,1.966,556,1.966,557,1.966,558,1.966,559,1.966,560,2.984,561,1.966,562,1.966,563,1.966,564,1.966,565,1.966,566,1.966,567,1.966,568,1.966,569,1.966,570,1.966,571,1.966,572,1.966,573,1.966,574,2.984,575,1.966,576,1.966,577,1.966]],["title/entities/PrecoColetado.html",[167,0.896,207,1.243]],["body/entities/PrecoColetado.html",[3,0.358,4,0.302,5,0.302,7,0.358,15,1.776,16,0.043,18,0.877,28,1.347,29,1.058,36,1.07,40,0.562,54,0.358,55,0.358,124,0.028,125,0.028,159,1.685,165,1.509,167,1.196,186,1.52,207,1.208,209,2.087,210,2.7,213,1.64,214,1.973,217,3.096,218,2.71,219,2.71,226,2.71,227,3.333,229,0.971,230,2.139,314,2.71,319,2.364,347,1.857,445,3.903,578,4.329,579,2.311,580,4.091,581,4.998,582,3.878,583,2.824,584,2.824,585,3.903,586,2.824,587,3.878,588,2.824,589,2.824,590,2.824,591,3.878,592,3.878,593,3.878,594,2.824,595,2.824,596,4.43,597,4.43,598,2.824,599,2.824,600,2.824,601,2.824,602,2.824]],["title/controllers/PrecoController.html",[0,0.636,149,1.771]],["body/controllers/PrecoController.html",[0,0.472,2,0.741,3,0.273,4,0.231,5,0.231,7,0.273,8,0.787,9,2.721,15,1.679,16,0.043,18,0.83,20,1.203,21,2.628,27,1.622,28,1.162,29,0.913,30,1.622,36,1.608,40,0.405,42,0.366,54,0.273,55,0.273,58,0.826,63,1.53,92,1.203,115,0.741,124,0.023,125,0.023,142,1.824,149,1.948,164,1.763,165,1.547,213,1.622,230,2.018,233,1.159,238,1.313,328,1.313,331,1.159,430,2.946,433,2.805,450,1.505,603,1.763,604,2.154,605,3.81,606,2.616,607,2.616,608,3.45,609,3.81,610,3.81,611,3.81,612,2.154,613,3.196,614,2.154,615,4.266,616,1.763,617,5.015,618,2.154,619,1.763,620,2.569,621,2.154,622,2.233,623,3.196,624,2.154,625,2.154,626,2.154,627,2.154,628,3.196,629,2.154,630,2.154,631,2.154,632,3.118,633,2.154,634,2.154,635,1.763,636,2.154,637,1.763,638,1.763,639,2.154,640,2.154,641,3.196,642,2.154,643,2.154,644,3.81,645,4.215,646,2.154,647,2.154,648,2.154,649,2.154,650,2.154,651,2.154,652,2.154,653,2.154,654,2.154]],["title/injectables/PrecoService.html",[142,1.391,201,0.636]],["body/injectables/PrecoService.html",[3,0.148,4,0.125,5,0.125,7,0.148,8,0.483,9,2.459,16,0.043,18,0.683,20,0.944,21,2.062,27,1.317,28,0.944,29,0.742,30,1.317,36,1.494,40,0.457,42,0.198,54,0.148,55,0.148,56,0.839,57,1.275,63,2.302,92,1.066,115,0.401,120,0.558,124,0.024,125,0.014,142,0.939,153,0.499,159,1.025,160,0.71,165,1.417,166,0.627,167,0.359,168,0.627,169,0.499,201,0.43,202,0.499,211,2.517,213,1.025,229,0.401,234,1.367,242,1.851,244,1.775,247,0.627,248,0.814,307,2.195,328,0.71,331,1.367,347,1.725,364,0.71,378,0.814,380,2.636,382,2.323,386,1.605,396,2.082,398,0.814,402,0.954,403,1.196,404,2.517,409,2.438,430,2.323,433,2.805,435,2.677,436,2.677,438,2.677,439,2.677,441,2.677,450,1.775,485,1.775,490,0.814,493,2.079,528,1.371,529,2.079,532,0.814,546,0.954,580,1.605,585,0.954,606,1.605,607,1.605,608,2.438,615,3.292,616,1.605,619,1.605,620,2.195,622,2.082,632,1.605,635,0.954,637,0.954,638,2.438,655,0.954,656,2.079,657,1.962,658,1.962,659,1.962,660,0.954,661,3.135,662,1.165,663,1.605,664,1.962,665,1.165,666,1.165,667,1.165,668,1.962,669,1.165,670,1.165,671,1.165,672,1.165,673,1.962,674,1.165,675,1.962,676,1.165,677,0.954,678,1.165,679,1.165,680,1.165,681,1.165,682,1.165,683,1.962,684,1.165,685,1.165,686,1.165,687,1.165,688,1.165,689,1.165,690,2.438,691,3.602,692,3.831,693,3.602,694,3.602,695,2.948,696,3.602,697,3.602,698,3.602,699,3.602,700,4.447,701,1.165,702,2.54,703,1.165,704,2.72,705,2.72,706,1.962,707,2.979,708,2.979,709,2.979,710,3.602,711,3.602,712,3.324,713,3.324,714,1.165,715,1.165,716,1.165,717,1.165,718,1.165,719,1.165,720,1.165,721,1.165,722,1.165,723,1.962,724,1.165,725,1.962,726,1.605,727,1.165,728,1.165,729,1.165,730,1.165,731,1.165,732,1.165,733,1.962,734,1.165,735,1.165,736,1.165,737,1.165,738,1.165,739,1.165,740,1.165,741,1.165,742,1.165,743,1.165,744,1.165,745,1.165,746,1.165,747,2.54,748,2.54,749,2.54,750,2.54,751,2.54,752,2.54,753,2.54,754,3.602,755,3.602,756,3.602,757,2.54,758,2.54,759,2.54,760,2.54,761,2.54,762,2.54,763,2.54,764,1.165,765,2.54,766,2.54,767,2.54,768,1.165,769,1.962,770,1.962,771,1.962,772,1.165,773,1.165,774,1.165,775,1.962,776,1.165,777,1.165]],["title/injectables/UtilService.html",[48,1.391,201,0.636]],["body/injectables/UtilService.html",[3,0.35,4,0.295,5,0.295,7,0.35,8,0.94,9,2.604,16,0.043,18,0.802,20,1.078,21,2.355,27,0.949,28,0.68,29,0.534,30,0.949,40,0.65,42,0.469,48,1.828,54,0.35,55,0.35,56,1.633,57,1.873,92,1.078,100,3.582,101,2.258,116,2.258,117,2.258,120,1.321,124,0.027,125,0.027,153,1.181,159,0.851,160,1.682,165,0.762,166,1.485,167,0.851,168,1.485,169,1.181,201,0.836,202,1.181,211,3.058,229,0.949,234,1.485,242,2.356,244,3.058,247,1.485,248,1.928,343,1.485,364,1.682,378,1.928,380,2.326,403,2.667,433,1.485,485,3.058,490,1.928,528,2.667,530,2.667,551,3.582,620,2.326,622,1.928,656,3.865,660,2.258,661,2.258,663,3.124,677,2.258,690,2.258,695,2.258,704,2.258,705,2.258,726,2.258,778,2.258,779,4.722,780,4.722,781,2.759,782,2.759,783,2.759,784,2.759,785,2.759,786,4.376,787,4.376,788,4.376,789,3.817,790,4.376,791,2.759,792,4.376,793,2.759,794,3.817,795,2.759,796,2.759,797,2.759,798,2.759,799,2.759]],["title/coverage.html",[800,2.763]],["body/coverage.html",[0,1.192,1,2.069,5,0.363,6,2.779,16,0.043,29,0.657,43,1.626,48,1.626,124,0.031,125,0.031,132,2.069,139,1.626,140,1.626,141,1.626,142,1.626,147,2.069,148,2.069,149,2.069,150,2.069,159,1.047,165,0.937,167,1.047,201,1.192,203,2.779,207,2.079,208,2.779,232,2.779,240,2.779,250,2.069,251,2.779,293,2.779,368,2.779,432,2.779,463,2.779,481,2.779,532,2.373,550,4.818,578,2.779,579,2.779,603,2.779,655,2.779,778,2.779,800,2.373,801,3.395,802,3.395,803,3.395,804,3.395,805,4.385,806,4.385,807,3.395,808,3.395,809,4.385,810,5.133,811,2.779,812,3.395,813,4.385,814,3.395,815,3.395,816,3.395]],["title/dependencies.html",[129,2.128,817,1.99]],["body/dependencies.html",[16,0.043,42,0.69,46,3.324,47,3.324,124,0.035,125,0.035,129,2.475,153,1.738,155,3.324,229,1.397,262,2.838,292,3.324,818,4.061,819,5.269,820,4.061,821,4.061,822,4.061,823,4.061,824,4.061,825,4.061,826,4.061,827,4.061,828,4.061,829,4.061,830,4.061,831,4.061,832,4.061,833,4.061,834,4.061,835,4.061]],["title/miscellaneous/functions.html",[836,1.99,837,2.857]],["body/miscellaneous/functions.html",[7,0.575,16,0.038,124,0.038,125,0.038,132,3.363,811,3.71,836,3.71,837,3.71,838,4.533]],["title/index.html",[7,0.308,839,2.431,840,2.431]],["body/index.html",[4,0.374,16,0.042,35,2.129,52,2.129,124,0.032,125,0.032,242,1.495,800,2.442,841,3.494,842,3.494,843,4.466,844,3.494,845,3.494,846,3.494,847,3.494,848,3.494,849,3.494,850,4.923,851,3.494,852,3.494,853,3.494,854,4.923,855,5.575,856,3.494,857,3.494,858,3.494,859,5.484,860,3.494,861,3.494,862,4.466,863,3.494,864,3.494,865,3.494,866,3.494,867,4.466,868,4.466,869,3.494,870,3.494,871,3.494,872,4.466,873,4.466,874,3.494,875,3.494,876,3.494,877,3.494,878,3.494,879,2.859,880,3.494,881,3.494,882,3.494,883,3.494,884,3.494,885,3.494,886,3.494,887,3.494,888,3.494,889,2.859,890,3.494,891,3.494,892,3.494,893,3.494,894,3.494,895,3.494,896,2.859]],["title/modules.html",[128,2.128]],["body/modules.html",[16,0.037,97,3.685,124,0.037,125,0.037,127,2.744,128,2.423,138,2.423,879,3.685,897,4.502,898,4.502,899,5.213,900,4.502]],["title/overview.html",[901,3.236]],["body/overview.html",[2,1.297,16,0.041,43,2.442,48,2.442,124,0.034,125,0.034,126,2.03,127,3.627,128,2.03,129,2.299,130,3.087,131,3.087,132,2.299,133,2.636,134,3.087,135,3.087,136,3.087,137,3.087,138,2.745,139,2.442,140,2.442,141,2.442,142,2.442,143,3.836,144,3.087,145,3.087,186,2.03,202,1.614,340,2.299,347,1.806,361,3.276,901,3.087]],["title/properties.html",[209,1.879,817,1.99]],["body/properties.html",[16,0.042,35,2.49,89,3.344,115,1.817,119,2.855,124,0.035,125,0.035,209,2.199,242,1.749,284,2.855,324,2.49,343,2.199,530,2.855,620,2.49,889,3.344,896,3.344,902,4.086,903,4.086,904,4.086,905,4.086,906,4.086,907,4.086,908,4.086,909,4.086,910,4.086,911,4.086,912,4.086,913,4.086,914,4.086,915,4.086,916,4.086,917,4.086,918,4.086,919,4.086,920,4.086]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":550,"title":{},"body":{"injectables/PostoService.html":{},"coverage.html":{}}}],["0.2.0",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":331,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["1.0.0",{"_index":902,"title":{},"body":{"properties.html":{}}}],["1.7.7",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":445,"title":{},"body":{"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["10.0.0",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["10.0.4",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":220,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{}}}],["14",{"_index":448,"title":{},"body":{"entities/Posto.html":{}}}],["2",{"_index":340,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"overview.html":{}}}],["20",{"_index":457,"title":{},"body":{"entities/Posto.html":{}}}],["2022",{"_index":908,"title":{},"body":{"properties.html":{}}}],["2024",{"_index":909,"title":{},"body":{"properties.html":{}}}],["255",{"_index":454,"title":{},"body":{"entities/Posto.html":{}}}],["3",{"_index":347,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"injectables/PrecoService.html":{},"overview.html":{}}}],["3.0.3",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":351,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["4.00",{"_index":412,"title":{},"body":{"injectables/InsightsService.html":{}}}],["4.50",{"_index":413,"title":{},"body":{"injectables/InsightsService.html":{}}}],["4.51",{"_index":416,"title":{},"body":{"injectables/InsightsService.html":{}}}],["5",{"_index":355,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["5.00",{"_index":417,"title":{},"body":{"injectables/InsightsService.html":{}}}],["5.01",{"_index":420,"title":{},"body":{"injectables/InsightsService.html":{}}}],["5.50",{"_index":421,"title":{},"body":{"injectables/InsightsService.html":{}}}],["50",{"_index":450,"title":{},"body":{"entities/Posto.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["5432",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":361,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"overview.html":{}}}],["7.8.1",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["8.12.0",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["acc",{"_index":766,"title":{},"body":{"injectables/PrecoService.html":{}}}],["acc[postokey",{"_index":756,"title":{},"body":{"injectables/PrecoService.html":{}}}],["acc[postokey].combustiveis.push",{"_index":762,"title":{},"body":{"injectables/PrecoService.html":{}}}],["acima",{"_index":424,"title":{},"body":{"injectables/InsightsService.html":{}}}],["addgroupby(\"to_char(pc.datacoleta",{"_index":724,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('co.nome",{"_index":723,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('po.bairro",{"_index":719,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('po.cep",{"_index":722,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('po.cidade",{"_index":720,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('po.estado",{"_index":721,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('po.logradouro",{"_index":717,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addgroupby('po.numero",{"_index":718,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addorderby('c.\"nome",{"_index":527,"title":{},"body":{"injectables/PostoService.html":{}}}],["addorderby('mes",{"_index":798,"title":{},"body":{"injectables/UtilService.html":{}}}],["addselect('co.nome",{"_index":728,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addselect('round(avg(pc.\"preco",{"_index":732,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addselect('round(avg(pc.preco",{"_index":729,"title":{},"body":{"injectables/PrecoService.html":{}}}],["addselect('to_char(pc.\"datacoleta",{"_index":796,"title":{},"body":{"injectables/UtilService.html":{}}}],["adiciona",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["agrupar",{"_index":529,"title":{},"body":{"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["aigner",{"_index":919,"title":{},"body":{"properties.html":{}}}],["alguma",{"_index":553,"title":{},"body":{"injectables/PostoService.html":{}}}],["amazing",{"_index":880,"title":{},"body":{"index.html":{}}}],["ambiente",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["andwhere('co.nome",{"_index":715,"title":{},"body":{"injectables/PrecoService.html":{}}}],["andwhere('to_char(pc.\"datacoleta",{"_index":735,"title":{},"body":{"injectables/PrecoService.html":{}}}],["ano",{"_index":620,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"properties.html":{}}}],["ao",{"_index":112,"title":{},"body":{"controllers/AppController.html":{}}}],["apenas",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["api",{"_index":119,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"properties.html":{}}}],["app",{"_index":857,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":849,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":127,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":43,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["apropriada",{"_index":555,"title":{},"body":{"injectables/PostoService.html":{}}}],["arquivo",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["array",{"_index":540,"title":{},"body":{"injectables/PostoService.html":{}}}],["array.from(postosmap.values",{"_index":541,"title":{},"body":{"injectables/PostoService.html":{}}}],["asc",{"_index":403,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["atual",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["author",{"_index":889,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"modules.html":{}}}],["await",{"_index":380,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["axios",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":881,"title":{},"body":{"index.html":{}}}],["bairro",{"_index":433,"title":{},"body":{"entities/Posto.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["bairros",{"_index":792,"title":{},"body":{"injectables/UtilService.html":{}}}],["banco",{"_index":283,"title":{},"body":{"controllers/HealthController.html":{},"injectables/PostoService.html":{}}}],["bandeira",{"_index":434,"title":{},"body":{"entities/Posto.html":{},"injectables/PostoService.html":{}}}],["baratos",{"_index":325,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["between",{"_index":400,"title":{},"body":{"injectables/InsightsService.html":{}}}],["boolean",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["bootstrap",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":899,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":897,"title":{},"body":{"modules.html":{}}}],["building",{"_index":844,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":492,"title":{},"body":{"injectables/PostoService.html":{}}}],["c",{"_index":392,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["c.\"id_combustivel",{"_index":394,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["c.\"nome",{"_index":384,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["c.nome",{"_index":544,"title":{},"body":{"injectables/PostoService.html":{}}}],["cada",{"_index":344,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["caminho",{"_index":113,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["caros",{"_index":365,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["caros/:combustivelid",{"_index":326,"title":{},"body":{"controllers/InsightsController.html":{}}}],["case",{"_index":411,"title":{},"body":{"injectables/InsightsService.html":{}}}],["caso",{"_index":556,"title":{},"body":{"injectables/PostoService.html":{}}}],["cep",{"_index":435,"title":{},"body":{"entities/Posto.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["certifique",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["cheapest",{"_index":429,"title":{},"body":{"injectables/InsightsService.html":{}}}],["check",{"_index":274,"title":{},"body":{"controllers/HealthController.html":{}}}],["checkdatabase",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["checkgeneral",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{}}}],["cidade",{"_index":436,"title":{},"body":{"entities/Posto.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["class",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["cluster_appmodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cnpj",{"_index":437,"title":{},"body":{"entities/Posto.html":{},"injectables/PostoService.html":{}}}],["co",{"_index":711,"title":{},"body":{"injectables/PrecoService.html":{}}}],["co.\"id_combustivel",{"_index":733,"title":{},"body":{"injectables/PrecoService.html":{}}}],["co.id_combustivel",{"_index":713,"title":{},"body":{"injectables/PrecoService.html":{}}}],["co.nome",{"_index":699,"title":{},"body":{"injectables/PrecoService.html":{}}}],["coletado.entity",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"entities/Combustivel.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["coletado.entity.ts",{"_index":579,"title":{},"body":{"entities/PrecoColetado.html":{},"coverage.html":{}}}],["coletado.entity.ts:14",{"_index":588,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["coletado.entity.ts:17",{"_index":594,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["coletado.entity.ts:20",{"_index":595,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["coletado.entity.ts:23",{"_index":586,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["coletado.entity.ts:27",{"_index":590,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["coletado.entity.ts:31",{"_index":584,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["column",{"_index":227,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["column({type",{"_index":217,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["com",{"_index":120,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["combustiveis",{"_index":234,"title":{},"body":{"controllers/CombustivelController.html":{},"controllers/InsightsController.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["combustivel",{"_index":165,"title":{"entities/Combustivel.html":{}},"body":{"modules/AppModule.html":{},"entities/Combustivel.html":{},"injectables/CombustivelService.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["combustivel.entity",{"_index":599,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["combustivel.precoscoletados",{"_index":602,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["combustivel.precoscoletados)@joincolumn({name",{"_index":583,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["combustivel_nome",{"_index":511,"title":{},"body":{"injectables/PostoService.html":{}}}],["combustivelcontroller",{"_index":148,"title":{"controllers/CombustivelController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CombustivelController.html":{},"coverage.html":{}}}],["combustivelid",{"_index":314,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/PrecoColetado.html":{}}}],["combustivelrepository",{"_index":244,"title":{},"body":{"injectables/CombustivelService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["combustivelservice",{"_index":139,"title":{"injectables/CombustivelService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"coverage.html":{},"overview.html":{}}}],["combustivies",{"_index":785,"title":{},"body":{"injectables/UtilService.html":{}}}],["combustíveis",{"_index":343,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/UtilService.html":{},"properties.html":{}}}],["comparação",{"_index":352,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["comparefuelprices",{"_index":295,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["completo",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["configmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error('router",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["constructor(combustivelrepository",{"_index":241,"title":{},"body":{"injectables/CombustivelService.html":{}}}],["constructor(postorepository",{"_index":483,"title":{},"body":{"injectables/PostoService.html":{}}}],["constructor(precocoletadorepository",{"_index":369,"title":{},"body":{"injectables/InsightsService.html":{}}}],["constructor(precorepository",{"_index":660,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["constructor(private",{"_index":238,"title":{},"body":{"controllers/CombustivelController.html":{},"controllers/InsightsController.html":{},"controllers/PostoController.html":{},"controllers/PrecoController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CombustivelController.html":{},"controllers/HealthController.html":{},"controllers/InsightsController.html":{},"controllers/PostoController.html":{},"controllers/PrecoController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CombustivelController.html":{},"controllers/HealthController.html":{},"controllers/InsightsController.html":{},"controllers/PostoController.html":{},"controllers/PrecoController.html":{},"coverage.html":{}}}],["controller('combustiveis",{"_index":237,"title":{},"body":{"controllers/CombustivelController.html":{}}}],["controller('health",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('insights",{"_index":330,"title":{},"body":{"controllers/InsightsController.html":{}}}],["controller('postos",{"_index":476,"title":{},"body":{"controllers/PostoController.html":{}}}],["controller('precos",{"_index":633,"title":{},"body":{"controllers/PrecoController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CombustivelController.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/InsightsController.html":{},"controllers/PostoController.html":{},"controllers/PrecoController.html":{},"overview.html":{}}}],["controllers/combustivel/combustivel.controller",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/health/health.controller",{"_index":290,"title":{},"body":{"modules/HealthModule.html":{}}}],["controllers/insights/insights.controller",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/posto/posto.controller",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/preco/preco.controller",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["converter",{"_index":538,"title":{},"body":{"injectables/PostoService.html":{}}}],["correto",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["count",{"_index":427,"title":{},"body":{"injectables/InsightsService.html":{}}}],["coverage",{"_index":800,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["curr",{"_index":752,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.bairro",{"_index":758,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.cep",{"_index":761,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.cidade",{"_index":759,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.data_coleta",{"_index":765,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.estado",{"_index":760,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.logradouro",{"_index":755,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.maior_preco",{"_index":777,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.media_preco",{"_index":773,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.menor_preco",{"_index":764,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.nome_combustivel",{"_index":763,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.nome_posto",{"_index":754,"title":{},"body":{"injectables/PrecoService.html":{}}}],["curr.numero",{"_index":757,"title":{},"body":{"injectables/PrecoService.html":{}}}],["da",{"_index":268,"title":{},"body":{"controllers/HealthController.html":{}}}],["dados",{"_index":284,"title":{},"body":{"controllers/HealthController.html":{},"injectables/PostoService.html":{},"properties.html":{}}}],["data",{"_index":680,"title":{},"body":{"injectables/PrecoService.html":{}}}],["data_coleta",{"_index":404,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["database",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["datacoleta",{"_index":580,"title":{},"body":{"entities/PrecoColetado.html":{},"injectables/PrecoService.html":{}}}],["datafim",{"_index":472,"title":{},"body":{"controllers/PostoController.html":{},"injectables/PostoService.html":{}}}],["datainicio",{"_index":475,"title":{},"body":{"controllers/PostoController.html":{},"injectables/PostoService.html":{}}}],["datas",{"_index":790,"title":{},"body":{"injectables/UtilService.html":{}}}],["datasource",{"_index":661,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["date",{"_index":585,"title":{},"body":{"entities/PrecoColetado.html":{},"injectables/PrecoService.html":{}}}],["date.now",{"_index":272,"title":{},"body":{"controllers/HealthController.html":{}}}],["db",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["de",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"properties.html":{}}}],["debug",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"controllers/HealthController.html":{},"controllers/InsightsController.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{}}}],["decrescente",{"_index":681,"title":{},"body":{"injectables/PrecoService.html":{}}}],["default",{"_index":666,"title":{},"body":{"injectables/PrecoService.html":{}}}],["defined",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["dependencies",{"_index":129,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":409,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PrecoService.html":{}}}],["descricao",{"_index":787,"title":{},"body":{"injectables/UtilService.html":{}}}],["description",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"index.html":{},"properties.html":{}}}],["detalhada",{"_index":287,"title":{},"body":{"controllers/HealthController.html":{}}}],["detalhado",{"_index":282,"title":{},"body":{"controllers/HealthController.html":{}}}],["detalhados",{"_index":270,"title":{},"body":{"controllers/HealthController.html":{}}}],["development",{"_index":858,"title":{},"body":{"index.html":{}}}],["dinâmica",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["disponiveis",{"_index":793,"title":{},"body":{"injectables/UtilService.html":{}}}],["disponíveis",{"_index":117,"title":{},"body":{"controllers/AppController.html":{},"injectables/UtilService.html":{}}}],["disponível",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"injectables/UtilService.html":{}}}],["distribuição",{"_index":356,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["documentation",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["domínio",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["dos",{"_index":342,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["e",{"_index":364,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["e2e",{"_index":869,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":845,"title":{},"body":{"index.html":{}}}],["elisa",{"_index":914,"title":{},"body":{"properties.html":{}}}],["em",{"_index":334,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["encontrado",{"_index":559,"title":{},"body":{"injectables/PostoService.html":{}}}],["end",{"_index":425,"title":{},"body":{"injectables/InsightsService.html":{}}}],["enddate",{"_index":304,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["endtime",{"_index":277,"title":{},"body":{"controllers/HealthController.html":{}}}],["entidades",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["entities",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{},"overview.html":{}}}],["entities/combustivel.entity",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"injectables/CombustivelService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["entities/posto.entity",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["entities/preco",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["entity",{"_index":207,"title":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{},"coverage.html":{}}}],["entity('combustivel",{"_index":231,"title":{},"body":{"entities/Combustivel.html":{}}}],["entity('posto",{"_index":462,"title":{},"body":{"entities/Posto.html":{}}}],["entity('preco_coletado",{"_index":600,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["entity{.ts,.js",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["entre",{"_index":353,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["es",{"_index":907,"title":{},"body":{"properties.html":{}}}],["estado",{"_index":438,"title":{},"body":{"entities/Posto.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["estão",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["evolução",{"_index":341,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["example",{"_index":854,"title":{},"body":{"index.html":{}}}],["expensive",{"_index":431,"title":{},"body":{"injectables/InsightsService.html":{}}}],["export",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["exports",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["faixa",{"_index":358,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["faixa_preco",{"_index":426,"title":{},"body":{"injectables/InsightsService.html":{}}}],["false",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["ferreira",{"_index":916,"title":{},"body":{"properties.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["filter((layer",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["filtra",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["framework",{"_index":843,"title":{},"body":{"index.html":{}}}],["from(precocoletado",{"_index":519,"title":{},"body":{"injectables/PostoService.html":{}}}],["fs",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["function",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":837,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["geral",{"_index":267,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/database",{"_index":285,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/database')@healthcheck",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/rotas",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["get(':id",{"_index":469,"title":{},"body":{"controllers/PostoController.html":{}}}],["get('bairros",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["get('comparar",{"_index":301,"title":{},"body":{"controllers/InsightsController.html":{}}}],["get('datas",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["get('distribuicao",{"_index":311,"title":{},"body":{"controllers/InsightsController.html":{}}}],["get('evolucao",{"_index":316,"title":{},"body":{"controllers/InsightsController.html":{}}}],["get('maior",{"_index":613,"title":{},"body":{"controllers/PrecoController.html":{}}}],["get('media",{"_index":617,"title":{},"body":{"controllers/PrecoController.html":{}}}],["get('menor",{"_index":628,"title":{},"body":{"controllers/PrecoController.html":{}}}],["get('preco",{"_index":305,"title":{},"body":{"controllers/InsightsController.html":{}}}],["get('relatorio",{"_index":473,"title":{},"body":{"controllers/PostoController.html":{}}}],["get('top3",{"_index":323,"title":{},"body":{"controllers/InsightsController.html":{}}}],["get('utils",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["get('variacao",{"_index":320,"title":{},"body":{"controllers/InsightsController.html":{}}}],["get()@healthcheck",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["getall",{"_index":656,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["getall(page",{"_index":664,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getallcombustiveis",{"_index":235,"title":{},"body":{"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{}}}],["getallpostos",{"_index":464,"title":{},"body":{"controllers/PostoController.html":{},"injectables/PostoService.html":{}}}],["getaveragepricebyposto",{"_index":296,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["getaveragepricebyposto(startdate",{"_index":303,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["getbairros",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getbairrosdisponiveis",{"_index":779,"title":{},"body":{"injectables/UtilService.html":{}}}],["getdatas",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello(@req",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello(request",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["getmaiorpreco",{"_index":605,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmaiorpreco(bairro",{"_index":612,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmaiorprecocombustivel",{"_index":657,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getmaiorprecocombustivel(bairro",{"_index":668,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getmediabairro",{"_index":606,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["getmediabairro(@query('bairro",{"_index":649,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmediabairro(bairro",{"_index":616,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["getmediacombustivel",{"_index":607,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["getmediacombustivel(@query('mes",{"_index":651,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmediacombustivel(mes",{"_index":619,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["getmediamensal",{"_index":608,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["getmediapreco",{"_index":609,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmediapreco(bairro",{"_index":625,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmediaprecocombustivel",{"_index":658,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getmediaprecocombustivel(bairro",{"_index":673,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getmenorpreco",{"_index":610,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmenorpreco(bairro",{"_index":627,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getmenorprecocombustivel",{"_index":659,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getmenorprecocombustivel(bairro",{"_index":675,"title":{},"body":{"injectables/PrecoService.html":{}}}],["getmesesanosdisponiveis",{"_index":780,"title":{},"body":{"injectables/UtilService.html":{}}}],["getoneposto",{"_index":482,"title":{},"body":{"injectables/PostoService.html":{}}}],["getoneposto(postoid",{"_index":487,"title":{},"body":{"injectables/PostoService.html":{}}}],["getposto",{"_index":465,"title":{},"body":{"controllers/PostoController.html":{}}}],["getposto(@param('id",{"_index":478,"title":{},"body":{"controllers/PostoController.html":{}}}],["getposto(id",{"_index":468,"title":{},"body":{"controllers/PostoController.html":{}}}],["getprecos",{"_index":611,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getprecos(page",{"_index":630,"title":{},"body":{"controllers/PrecoController.html":{}}}],["getpricedistribution",{"_index":297,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["getpricedistribution(@param('combustivelid",{"_index":359,"title":{},"body":{"controllers/InsightsController.html":{}}}],["getpricedistribution(combustivelid",{"_index":310,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["getpriceevolutionbyposto",{"_index":298,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["getpriceevolutionbyposto(@param('postoid",{"_index":345,"title":{},"body":{"controllers/InsightsController.html":{}}}],["getpriceevolutionbyposto(postoid",{"_index":315,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["getpricevariationbyposto",{"_index":299,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["getrawmany",{"_index":528,"title":{},"body":{"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["getrelatoriopostos",{"_index":466,"title":{},"body":{"controllers/PostoController.html":{},"injectables/PostoService.html":{}}}],["getrelatoriopostos(datainicio",{"_index":471,"title":{},"body":{"controllers/PostoController.html":{},"injectables/PostoService.html":{}}}],["getroutes",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["getroutes(@req",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["getroutes(request",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":839,"title":{"index.html":{}},"body":{}}],["gettop3postoscheapestandexpensive",{"_index":300,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["gettop3postoscheapestandexpensive(@param('combustivelid",{"_index":366,"title":{},"body":{"controllers/InsightsController.html":{}}}],["gettop3postoscheapestandexpensive(combustivelid",{"_index":322,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["getutils",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["graph",{"_index":900,"title":{},"body":{"modules.html":{}}}],["group",{"_index":401,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["groupby(\"to_char(pc.datacoleta",{"_index":730,"title":{},"body":{"injectables/PrecoService.html":{}}}],["groupby('po.id_posto",{"_index":771,"title":{},"body":{"injectables/PrecoService.html":{}}}],["groupby('po.nomefantasia",{"_index":716,"title":{},"body":{"injectables/PrecoService.html":{}}}],["groupedresults",{"_index":750,"title":{},"body":{"injectables/PrecoService.html":{}}}],["grow",{"_index":876,"title":{},"body":{"index.html":{}}}],["gráfico",{"_index":410,"title":{},"body":{"injectables/InsightsService.html":{}}}],["harmmer",{"_index":915,"title":{},"body":{"properties.html":{}}}],["health",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheck",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":250,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":138,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":205,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":886,"title":{},"body":{"index.html":{}}}],["host",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["host}${layer.route.path",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["httpadapterhost",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["httpmodule",{"_index":291,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://github.com/elisaharmmer",{"_index":917,"title":{},"body":{"properties.html":{}}}],["https://github.com/elisaharmmer/fuel",{"_index":911,"title":{},"body":{"properties.html":{}}}],["https://github.com/nicolasaigner",{"_index":920,"title":{},"body":{"properties.html":{}}}],["https://nestjs.com",{"_index":893,"title":{},"body":{"index.html":{}}}],["httpserver",{"_index":64,"title":{},"body":{"controllers/AppController.html":{}}}],["httpserver?._events?.request?._router",{"_index":67,"title":{},"body":{"controllers/AppController.html":{}}}],["id",{"_index":210,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"entities/PrecoColetado.html":{}}}],["id_combustivel",{"_index":215,"title":{},"body":{"entities/Combustivel.html":{}}}],["id_posto",{"_index":452,"title":{},"body":{"entities/Posto.html":{}}}],["id_preco",{"_index":587,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["identifier",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["imports",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["injectable",{"_index":201,"title":{"injectables/AppService.html":{},"injectables/CombustivelService.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CombustivelService.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["injectables",{"_index":202,"title":{},"body":{"injectables/AppService.html":{},"injectables/CombustivelService.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"overview.html":{}}}],["injectrepository",{"_index":247,"title":{},"body":{"injectables/CombustivelService.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["injectrepository(combustivel",{"_index":248,"title":{},"body":{"injectables/CombustivelService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["injectrepository(posto",{"_index":490,"title":{},"body":{"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["injectrepository(precocoletado",{"_index":378,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["innerjoin(combustivel",{"_index":710,"title":{},"body":{"injectables/PrecoService.html":{}}}],["innerjoin(precocoletado",{"_index":707,"title":{},"body":{"injectables/PrecoService.html":{}}}],["insights",{"_index":294,"title":{},"body":{"controllers/InsightsController.html":{}}}],["insightscontroller",{"_index":150,"title":{"controllers/InsightsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/InsightsController.html":{},"coverage.html":{}}}],["insightsservice",{"_index":140,"title":{"injectables/InsightsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"coverage.html":{},"overview.html":{}}}],["installation",{"_index":853,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":856,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"index.html":{}}}],["join(__dirname",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["joincolumn",{"_index":597,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["json.parse(readfilesync(packagejsonpath",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["kamil",{"_index":890,"title":{},"body":{"index.html":{}}}],["layer.route",{"_index":72,"title":{},"body":{"controllers/AppController.html":{}}}],["left",{"_index":395,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["leftjoin",{"_index":513,"title":{},"body":{"injectables/PostoService.html":{}}}],["leftjoin(combustivel",{"_index":512,"title":{},"body":{"injectables/PostoService.html":{}}}],["leftjoinandselect('p.precoscoletados",{"_index":542,"title":{},"body":{"injectables/PostoService.html":{}}}],["leftjoinandselect('pc.combustivel",{"_index":543,"title":{},"body":{"injectables/PostoService.html":{}}}],["legend",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["leitura",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["length",{"_index":219,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["lessthanorequal",{"_index":677,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["lessthanorequal(today",{"_index":686,"title":{},"body":{"injectables/PrecoService.html":{}}}],["license",{"_index":896,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":873,"title":{},"body":{"index.html":{}}}],["limit",{"_index":430,"title":{},"body":{"injectables/InsightsService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["limite",{"_index":637,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["limitnumber",{"_index":641,"title":{},"body":{"controllers/PrecoController.html":{}}}],["lista",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["literal",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["logger",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["logradouro",{"_index":439,"title":{},"body":{"entities/Posto.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["logs",{"_index":269,"title":{},"body":{"controllers/HealthController.html":{}}}],["maior",{"_index":348,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["maior_preco",{"_index":775,"title":{},"body":{"injectables/PrecoService.html":{}}}],["mais",{"_index":363,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["manytoone",{"_index":596,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["manytoone(undefined",{"_index":582,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["map",{"_index":533,"title":{},"body":{"injectables/PostoService.html":{}}}],["map((layer",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["mapa",{"_index":539,"title":{},"body":{"injectables/PostoService.html":{}}}],["matching",{"_index":125,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["max(pc.\"preco",{"_index":406,"title":{},"body":{"injectables/InsightsService.html":{}}}],["max(pc.datacoleta",{"_index":770,"title":{},"body":{"injectables/PrecoService.html":{}}}],["max(pc2.\"datacoleta",{"_index":740,"title":{},"body":{"injectables/PrecoService.html":{}}}],["max(pc_sub.\"datacoleta",{"_index":524,"title":{},"body":{"injectables/PostoService.html":{}}}],["media_preco",{"_index":769,"title":{},"body":{"injectables/PrecoService.html":{}}}],["medio",{"_index":306,"title":{},"body":{"controllers/InsightsController.html":{}}}],["menor_preco",{"_index":702,"title":{},"body":{"injectables/PrecoService.html":{}}}],["mensal",{"_index":623,"title":{},"body":{"controllers/PrecoController.html":{}}}],["mes",{"_index":622,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["mes_coleta",{"_index":706,"title":{},"body":{"injectables/PrecoService.html":{}}}],["message",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["metadata",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["min(pc.\"preco",{"_index":407,"title":{},"body":{"injectables/InsightsService.html":{}}}],["miscellaneous",{"_index":836,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":872,"title":{},"body":{"index.html":{}}}],["mm",{"_index":705,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["mode",{"_index":862,"title":{},"body":{"index.html":{}}}],["module",{"_index":126,"title":{"modules/AppModule.html":{},"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["modules",{"_index":128,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/health/health.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":885,"title":{},"body":{"index.html":{}}}],["mssql",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":891,"title":{},"body":{"index.html":{}}}],["médio",{"_index":333,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["método",{"_index":678,"title":{},"body":{"injectables/PrecoService.html":{}}}],["mês",{"_index":791,"title":{},"body":{"injectables/UtilService.html":{}}}],["na",{"_index":118,"title":{},"body":{"controllers/AppController.html":{}}}],["name",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"entities/Combustivel.html":{},"injectables/CombustivelService.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["nenhuma",{"_index":99,"title":{},"body":{"controllers/AppController.html":{}}}],["nest",{"_index":850,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":895,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":292,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"injectables/CombustivelService.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["new",{"_index":532,"title":{},"body":{"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"coverage.html":{}}}],["node.js",{"_index":842,"title":{},"body":{"index.html":{}}}],["nome",{"_index":211,"title":{},"body":{"entities/Combustivel.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["nome_combustivel",{"_index":700,"title":{},"body":{"injectables/PrecoService.html":{}}}],["nome_fantasia",{"_index":565,"title":{},"body":{"injectables/PostoService.html":{}}}],["nome_posto",{"_index":692,"title":{},"body":{"injectables/PrecoService.html":{}}}],["nomefantasia",{"_index":440,"title":{},"body":{"entities/Posto.html":{}}}],["npm",{"_index":855,"title":{},"body":{"index.html":{}}}],["null",{"_index":551,"title":{},"body":{"injectables/PostoService.html":{},"injectables/UtilService.html":{}}}],["number",{"_index":213,"title":{},"body":{"entities/Combustivel.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["number(limit",{"_index":642,"title":{},"body":{"controllers/PrecoController.html":{}}}],["number(page",{"_index":640,"title":{},"body":{"controllers/PrecoController.html":{}}}],["numeric",{"_index":591,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["numero",{"_index":441,"title":{},"body":{"entities/Posto.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["não",{"_index":557,"title":{},"body":{"injectables/PostoService.html":{}}}],["nícolas",{"_index":918,"title":{},"body":{"properties.html":{}}}],["o",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"injectables/PostoService.html":{}}}],["object.keys(layer.route.methods)[0].touppercase",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["object.values(groupedresults",{"_index":767,"title":{},"body":{"injectables/PrecoService.html":{}}}],["ok",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["onetomany",{"_index":228,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{}}}],["onetomany(undefined",{"_index":223,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{}}}],["open",{"_index":874,"title":{},"body":{"index.html":{}}}],["optional",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/CombustivelService.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["ordenação",{"_index":679,"title":{},"body":{"injectables/PrecoService.html":{}}}],["order",{"_index":402,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PrecoService.html":{}}}],["orderby('ano",{"_index":797,"title":{},"body":{"injectables/UtilService.html":{}}}],["orderby('maior_preco",{"_index":776,"title":{},"body":{"injectables/PrecoService.html":{}}}],["orderby('media_preco",{"_index":772,"title":{},"body":{"injectables/PrecoService.html":{}}}],["orderby('menor_preco",{"_index":746,"title":{},"body":{"injectables/PrecoService.html":{}}}],["orderby('mes_coleta",{"_index":725,"title":{},"body":{"injectables/PrecoService.html":{}}}],["orderby('p.\"id_posto",{"_index":526,"title":{},"body":{"injectables/PostoService.html":{}}}],["orderby('pc.datacoleta",{"_index":548,"title":{},"body":{"injectables/PostoService.html":{}}}],["orderby('po.bairro",{"_index":799,"title":{},"body":{"injectables/UtilService.html":{}}}],["os",{"_index":530,"title":{},"body":{"injectables/PostoService.html":{},"injectables/UtilService.html":{},"properties.html":{}}}],["ou",{"_index":552,"title":{},"body":{"injectables/PostoService.html":{}}}],["out",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":901,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":387,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["p.\"bairro",{"_index":503,"title":{},"body":{"injectables/PostoService.html":{}}}],["p.\"bandeira",{"_index":497,"title":{},"body":{"injectables/PostoService.html":{}}}],["p.\"cep",{"_index":509,"title":{},"body":{"injectables/PostoService.html":{}}}],["p.\"cidade",{"_index":505,"title":{},"body":{"injectables/PostoService.html":{}}}],["p.\"estado",{"_index":507,"title":{},"body":{"injectables/PostoService.html":{}}}],["p.\"id_posto",{"_index":391,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["p.\"logradouro",{"_index":499,"title":{},"body":{"injectables/PostoService.html":{}}}],["p.\"nomefantasia",{"_index":383,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["p.\"numero",{"_index":501,"title":{},"body":{"injectables/PostoService.html":{}}}],["package",{"_index":817,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["packagejson",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["packagejson.description",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["packagejson.version",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["packagejsonpath",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["padrão",{"_index":689,"title":{},"body":{"injectables/PrecoService.html":{}}}],["page",{"_index":632,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["pagenumber",{"_index":639,"title":{},"body":{"controllers/PrecoController.html":{}}}],["paginação",{"_index":635,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["para",{"_index":903,"title":{},"body":{"properties.html":{}}}],["param",{"_index":329,"title":{},"body":{"controllers/InsightsController.html":{},"controllers/PostoController.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/CombustivelService.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["parametros",{"_index":786,"title":{},"body":{"injectables/UtilService.html":{}}}],["password",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["pc",{"_index":396,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["pc.\"combustivelid",{"_index":398,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["pc.\"datacoleta",{"_index":399,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["pc.\"postoid",{"_index":397,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["pc.\"preco",{"_index":405,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["pc.combustivelid",{"_index":712,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pc.datacoleta",{"_index":546,"title":{},"body":{"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["pc.postoid",{"_index":709,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pc.preco",{"_index":545,"title":{},"body":{"injectables/PostoService.html":{}}}],["pc2",{"_index":742,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pc2.\"combustivelid",{"_index":745,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pc2.\"postoid",{"_index":743,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pc_inner",{"_index":520,"title":{},"body":{"injectables/PostoService.html":{}}}],["pc_inner.\"combustivelid",{"_index":516,"title":{},"body":{"injectables/PostoService.html":{}}}],["pc_inner.\"datacoleta",{"_index":518,"title":{},"body":{"injectables/PostoService.html":{}}}],["pc_inner.\"postoid",{"_index":515,"title":{},"body":{"injectables/PostoService.html":{}}}],["pc_inner.\"preco",{"_index":517,"title":{},"body":{"injectables/PostoService.html":{}}}],["pc_sub",{"_index":525,"title":{},"body":{"injectables/PostoService.html":{}}}],["pc_sub.\"combustivelid",{"_index":523,"title":{},"body":{"injectables/PostoService.html":{}}}],["pc_sub.\"postoid",{"_index":522,"title":{},"body":{"injectables/PostoService.html":{}}}],["pcv",{"_index":389,"title":{},"body":{"injectables/InsightsService.html":{}}}],["pcv.\"combustivelid",{"_index":393,"title":{},"body":{"injectables/InsightsService.html":{}}}],["pcv.\"postoid",{"_index":390,"title":{},"body":{"injectables/InsightsService.html":{}}}],["período",{"_index":336,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["pg",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["platform",{"_index":98,"title":{},"body":{"controllers/AppController.html":{}}}],["please",{"_index":883,"title":{},"body":{"index.html":{}}}],["po.\"id_posto",{"_index":744,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.bairro",{"_index":695,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["po.cep",{"_index":698,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.cidade",{"_index":696,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.estado",{"_index":697,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.id_posto",{"_index":708,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.logradouro",{"_index":693,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.nomefantasia",{"_index":691,"title":{},"body":{"injectables/PrecoService.html":{}}}],["po.numero",{"_index":694,"title":{},"body":{"injectables/PrecoService.html":{}}}],["pode",{"_index":104,"title":{},"body":{"controllers/AppController.html":{}}}],["por",{"_index":307,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["port",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["postgres",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["posto",{"_index":159,"title":{"entities/Posto.html":{}},"body":{"modules/AppModule.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["posto.entity",{"_index":598,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["posto.precoscoletados",{"_index":601,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["posto.precoscoletados)@joincolumn({name",{"_index":589,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["posto_bairro",{"_index":504,"title":{},"body":{"injectables/PostoService.html":{}}}],["posto_bandeira",{"_index":498,"title":{},"body":{"injectables/PostoService.html":{}}}],["posto_cep",{"_index":510,"title":{},"body":{"injectables/PostoService.html":{}}}],["posto_cidade",{"_index":506,"title":{},"body":{"injectables/PostoService.html":{}}}],["posto_estado",{"_index":508,"title":{},"body":{"injectables/PostoService.html":{}}}],["posto_id",{"_index":495,"title":{},"body":{"injectables/PostoService.html":{}}}],["posto_logradouro",{"_index":500,"title":{},"body":{"injectables/PostoService.html":{}}}],["posto_nome",{"_index":496,"title":{},"body":{"injectables/PostoService.html":{}}}],["posto_numero",{"_index":502,"title":{},"body":{"injectables/PostoService.html":{}}}],["postocontroller",{"_index":147,"title":{"controllers/PostoController.html":{}},"body":{"modules/AppModule.html":{},"controllers/PostoController.html":{},"coverage.html":{}}}],["postodetails",{"_index":560,"title":{},"body":{"injectables/PostoService.html":{}}}],["postodetails.combustiveis[combustivel_nome",{"_index":574,"title":{},"body":{"injectables/PostoService.html":{}}}],["postodetails.combustiveis[combustivel_nome].push",{"_index":575,"title":{},"body":{"injectables/PostoService.html":{}}}],["postoid",{"_index":319,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{}}}],["postokey",{"_index":753,"title":{},"body":{"injectables/PrecoService.html":{}}}],["postorepository",{"_index":485,"title":{},"body":{"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["postos",{"_index":324,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"controllers/PostoController.html":{},"properties.html":{}}}],["postoservice",{"_index":141,"title":{"injectables/PostoService.html":{}},"body":{"modules/AppModule.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"coverage.html":{},"overview.html":{}}}],["postosmap",{"_index":531,"title":{},"body":{"injectables/PostoService.html":{}}}],["postosmap.get(posto_id).combustiveis.push",{"_index":537,"title":{},"body":{"injectables/PostoService.html":{}}}],["postosmap.has(posto_id",{"_index":535,"title":{},"body":{"injectables/PostoService.html":{}}}],["postosmap.set(posto_id",{"_index":536,"title":{},"body":{"injectables/PostoService.html":{}}}],["precision",{"_index":592,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["preco",{"_index":230,"title":{},"body":{"entities/Combustivel.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{}}}],["preco/:combustivelid",{"_index":312,"title":{},"body":{"controllers/InsightsController.html":{}}}],["preco/:postoid",{"_index":317,"title":{},"body":{"controllers/InsightsController.html":{}}}],["preco_coletado",{"_index":388,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["preco_medio",{"_index":386,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PrecoService.html":{}}}],["precocoletado",{"_index":167,"title":{"entities/PrecoColetado.html":{}},"body":{"modules/AppModule.html":{},"entities/Combustivel.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["precocoletado.combustivel",{"_index":224,"title":{},"body":{"entities/Combustivel.html":{}}}],["precocoletado.posto",{"_index":459,"title":{},"body":{"entities/Posto.html":{}}}],["precocoletadorepository",{"_index":371,"title":{},"body":{"injectables/InsightsService.html":{}}}],["precocontroller",{"_index":149,"title":{"controllers/PrecoController.html":{}},"body":{"modules/AppModule.html":{},"controllers/PrecoController.html":{},"coverage.html":{}}}],["precorepository",{"_index":663,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["precos",{"_index":604,"title":{},"body":{"controllers/PrecoController.html":{}}}],["precoscoletados",{"_index":212,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{}}}],["precoservice",{"_index":142,"title":{"injectables/PrecoService.html":{}},"body":{"modules/AppModule.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"coverage.html":{},"overview.html":{}}}],["prefix",{"_index":233,"title":{},"body":{"controllers/CombustivelController.html":{},"controllers/HealthController.html":{},"controllers/InsightsController.html":{},"controllers/PostoController.html":{},"controllers/PrecoController.html":{}}}],["preço",{"_index":332,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["preços",{"_index":357,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["primarygeneratedcolumn",{"_index":226,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["primarygeneratedcolumn({name",{"_index":214,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["private",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["process.env.postgres_database",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_host",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_password",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_user",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":864,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":841,"title":{},"body":{"index.html":{}}}],["project",{"_index":875,"title":{},"body":{"index.html":{}}}],["promise",{"_index":246,"title":{},"body":{"injectables/CombustivelService.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["properties",{"_index":209,"title":{"properties.html":{}},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{},"properties.html":{}}}],["providers",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["public.\"preco_coletado",{"_index":741,"title":{},"body":{"injectables/PrecoService.html":{}}}],["página",{"_index":688,"title":{},"body":{"injectables/PrecoService.html":{}}}],["qb",{"_index":514,"title":{},"body":{"injectables/PostoService.html":{}}}],["quantidade_postos",{"_index":428,"title":{},"body":{"injectables/InsightsService.html":{}}}],["que",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["query",{"_index":328,"title":{},"body":{"controllers/InsightsController.html":{},"controllers/PostoController.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["query('ano",{"_index":652,"title":{},"body":{"controllers/PrecoController.html":{}}}],["query('bairro",{"_index":644,"title":{},"body":{"controllers/PrecoController.html":{}}}],["query('combustivel",{"_index":645,"title":{},"body":{"controllers/PrecoController.html":{}}}],["query('datafim",{"_index":338,"title":{},"body":{"controllers/InsightsController.html":{},"controllers/PostoController.html":{}}}],["query('datainicio",{"_index":337,"title":{},"body":{"controllers/InsightsController.html":{},"controllers/PostoController.html":{}}}],["query('limit",{"_index":636,"title":{},"body":{"controllers/PrecoController.html":{}}}],["query('page",{"_index":634,"title":{},"body":{"controllers/PrecoController.html":{}}}],["query.getrawmany",{"_index":737,"title":{},"body":{"injectables/PrecoService.html":{}}}],["query.groupby('co.\"nome",{"_index":736,"title":{},"body":{"injectables/PrecoService.html":{}}}],["query.where('to_char(pc.\"datacoleta",{"_index":734,"title":{},"body":{"injectables/PrecoService.html":{}}}],["r$4.00",{"_index":414,"title":{},"body":{"injectables/InsightsService.html":{}}}],["r$4.50",{"_index":415,"title":{},"body":{"injectables/InsightsService.html":{}}}],["r$4.51",{"_index":418,"title":{},"body":{"injectables/InsightsService.html":{}}}],["r$5.00",{"_index":419,"title":{},"body":{"injectables/InsightsService.html":{}}}],["r$5.01",{"_index":422,"title":{},"body":{"injectables/InsightsService.html":{}}}],["r$5.50",{"_index":423,"title":{},"body":{"injectables/InsightsService.html":{}}}],["rawresults",{"_index":493,"title":{},"body":{"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["rawresults.andwhere('co.nome",{"_index":748,"title":{},"body":{"injectables/PrecoService.html":{}}}],["rawresults.andwhere('po.bairro",{"_index":747,"title":{},"body":{"injectables/PrecoService.html":{}}}],["rawresults.foreach(result",{"_index":534,"title":{},"body":{"injectables/PostoService.html":{}}}],["rawresults.getrawmany",{"_index":749,"title":{},"body":{"injectables/PrecoService.html":{}}}],["rawresults.length",{"_index":549,"title":{},"body":{"injectables/PostoService.html":{}}}],["rawresults[0].p_bairro",{"_index":570,"title":{},"body":{"injectables/PostoService.html":{}}}],["rawresults[0].p_bandeira",{"_index":567,"title":{},"body":{"injectables/PostoService.html":{}}}],["rawresults[0].p_cep",{"_index":573,"title":{},"body":{"injectables/PostoService.html":{}}}],["rawresults[0].p_cidade",{"_index":571,"title":{},"body":{"injectables/PostoService.html":{}}}],["rawresults[0].p_cnpj",{"_index":562,"title":{},"body":{"injectables/PostoService.html":{}}}],["rawresults[0].p_estado",{"_index":572,"title":{},"body":{"injectables/PostoService.html":{}}}],["rawresults[0].p_id_posto",{"_index":561,"title":{},"body":{"injectables/PostoService.html":{}}}],["rawresults[0].p_logradouro",{"_index":568,"title":{},"body":{"injectables/PostoService.html":{}}}],["rawresults[0].p_nomefantasia",{"_index":566,"title":{},"body":{"injectables/PostoService.html":{}}}],["rawresults[0].p_numero",{"_index":569,"title":{},"body":{"injectables/PostoService.html":{}}}],["rawresults[0].p_razaosocial",{"_index":564,"title":{},"body":{"injectables/PostoService.html":{}}}],["razao_social",{"_index":563,"title":{},"body":{"injectables/PostoService.html":{}}}],["razaosocial",{"_index":442,"title":{},"body":{"entities/Posto.html":{}}}],["read",{"_index":884,"title":{},"body":{"index.html":{}}}],["readfilesync",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["readonly",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{}}}],["reflect",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":685,"title":{},"body":{"injectables/PrecoService.html":{}}}],["repository",{"_index":242,"title":{},"body":{"injectables/CombustivelService.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"index.html":{},"properties.html":{}}}],["req",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["request.protocol}://${request.get('host",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsetime",{"_index":280,"title":{},"body":{"controllers/HealthController.html":{}}}],["resposta",{"_index":554,"title":{},"body":{"injectables/PostoService.html":{}}}],["result",{"_index":278,"title":{},"body":{"controllers/HealthController.html":{},"injectables/PostoService.html":{}}}],["result.info",{"_index":279,"title":{},"body":{"controllers/HealthController.html":{}}}],["resultados",{"_index":638,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["results",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["results.reduce((acc",{"_index":751,"title":{},"body":{"injectables/PrecoService.html":{}}}],["retorna",{"_index":788,"title":{},"body":{"injectables/UtilService.html":{}}}],["retornar",{"_index":904,"title":{},"body":{"properties.html":{}}}],["return",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["returns",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["rota",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"injectables/UtilService.html":{}}}],["rotas",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["round(avg(pc.\"preco",{"_index":385,"title":{},"body":{"injectables/InsightsService.html":{}}}],["round(avg(pc.preco",{"_index":768,"title":{},"body":{"injectables/PrecoService.html":{}}}],["round(max(pc.preco",{"_index":774,"title":{},"body":{"injectables/PrecoService.html":{}}}],["round(min(pc.preco",{"_index":701,"title":{},"body":{"injectables/PrecoService.html":{}}}],["round(pc.preco",{"_index":738,"title":{},"body":{"injectables/PrecoService.html":{}}}],["router",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["router.stack",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["router?.stack",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["routes",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":859,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":846,"title":{},"body":{"index.html":{}}}],["scale",{"_index":593,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["se",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["seja",{"_index":558,"title":{},"body":{"injectables/PostoService.html":{}}}],["select",{"_index":382,"title":{},"body":{"injectables/InsightsService.html":{},"injectables/PostoService.html":{},"injectables/PrecoService.html":{}}}],["select(\"to_char(pc.datacoleta",{"_index":727,"title":{},"body":{"injectables/PrecoService.html":{}}}],["select('co.\"nome",{"_index":731,"title":{},"body":{"injectables/PrecoService.html":{}}}],["select('distinct",{"_index":794,"title":{},"body":{"injectables/UtilService.html":{}}}],["ser",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["server",{"_index":847,"title":{},"body":{"index.html":{}}}],["services/combustivel.service",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"controllers/CombustivelController.html":{}}}],["services/insights.service",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"controllers/InsightsController.html":{}}}],["services/posto.service",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"controllers/PostoController.html":{}}}],["services/preco.service",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"controllers/PrecoController.html":{}}}],["services/util.service",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["side",{"_index":848,"title":{},"body":{"index.html":{}}}],["skip",{"_index":683,"title":{},"body":{"injectables/PrecoService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/CombustivelController.html":{},"injectables/CombustivelService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"index.html":{}}}],["sp_resumopostoseprecos",{"_index":577,"title":{},"body":{"injectables/PostoService.html":{}}}],["sponsors",{"_index":878,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":838,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:18",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:47",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:75",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:80",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:85",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":203,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":204,"title":{},"body":{"injectables/AppService.html":{}}}],["src/controllers/combustivel/combustivel.controller.ts",{"_index":232,"title":{},"body":{"controllers/CombustivelController.html":{},"coverage.html":{}}}],["src/controllers/combustivel/combustivel.controller.ts:9",{"_index":236,"title":{},"body":{"controllers/CombustivelController.html":{}}}],["src/controllers/health/health.controller.ts",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/controllers/health/health.controller.ts:18",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/controllers/health/health.controller.ts:38",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/controllers/insights/insights.controller.ts",{"_index":293,"title":{},"body":{"controllers/InsightsController.html":{},"coverage.html":{}}}],["src/controllers/insights/insights.controller.ts:11",{"_index":308,"title":{},"body":{"controllers/InsightsController.html":{}}}],["src/controllers/insights/insights.controller.ts:20",{"_index":318,"title":{},"body":{"controllers/InsightsController.html":{}}}],["src/controllers/insights/insights.controller.ts:26",{"_index":321,"title":{},"body":{"controllers/InsightsController.html":{}}}],["src/controllers/insights/insights.controller.ts:32",{"_index":302,"title":{},"body":{"controllers/InsightsController.html":{}}}],["src/controllers/insights/insights.controller.ts:38",{"_index":313,"title":{},"body":{"controllers/InsightsController.html":{}}}],["src/controllers/insights/insights.controller.ts:44",{"_index":327,"title":{},"body":{"controllers/InsightsController.html":{}}}],["src/controllers/posto/posto.controller.ts",{"_index":463,"title":{},"body":{"controllers/PostoController.html":{},"coverage.html":{}}}],["src/controllers/posto/posto.controller.ts:14",{"_index":470,"title":{},"body":{"controllers/PostoController.html":{}}}],["src/controllers/posto/posto.controller.ts:19",{"_index":474,"title":{},"body":{"controllers/PostoController.html":{}}}],["src/controllers/posto/posto.controller.ts:9",{"_index":467,"title":{},"body":{"controllers/PostoController.html":{}}}],["src/controllers/preco/preco.controller.ts",{"_index":603,"title":{},"body":{"controllers/PrecoController.html":{},"coverage.html":{}}}],["src/controllers/preco/preco.controller.ts:20",{"_index":629,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/controllers/preco/preco.controller.ts:28",{"_index":626,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/controllers/preco/preco.controller.ts:36",{"_index":614,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/controllers/preco/preco.controller.ts:44",{"_index":618,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/controllers/preco/preco.controller.ts:49",{"_index":621,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/controllers/preco/preco.controller.ts:54",{"_index":624,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/controllers/preco/preco.controller.ts:9",{"_index":631,"title":{},"body":{"controllers/PrecoController.html":{}}}],["src/entities/combustivel.entity.ts",{"_index":208,"title":{},"body":{"entities/Combustivel.html":{},"coverage.html":{}}}],["src/entities/combustivel.entity.ts:10",{"_index":222,"title":{},"body":{"entities/Combustivel.html":{}}}],["src/entities/combustivel.entity.ts:13",{"_index":225,"title":{},"body":{"entities/Combustivel.html":{}}}],["src/entities/combustivel.entity.ts:7",{"_index":216,"title":{},"body":{"entities/Combustivel.html":{}}}],["src/entities/posto.entity.ts",{"_index":432,"title":{},"body":{"entities/Posto.html":{},"coverage.html":{}}}],["src/entities/posto.entity.ts:10",{"_index":449,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:13",{"_index":461,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:16",{"_index":456,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:19",{"_index":444,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:22",{"_index":455,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:25",{"_index":458,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:28",{"_index":443,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:31",{"_index":447,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:34",{"_index":451,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:37",{"_index":446,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:40",{"_index":460,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/posto.entity.ts:7",{"_index":453,"title":{},"body":{"entities/Posto.html":{}}}],["src/entities/preco",{"_index":578,"title":{},"body":{"entities/PrecoColetado.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":811,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/health/health.module.ts",{"_index":288,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/services/combustivel.service.ts",{"_index":240,"title":{},"body":{"injectables/CombustivelService.html":{},"coverage.html":{}}}],["src/services/combustivel.service.ts:13",{"_index":245,"title":{},"body":{"injectables/CombustivelService.html":{}}}],["src/services/combustivel.service.ts:7",{"_index":243,"title":{},"body":{"injectables/CombustivelService.html":{}}}],["src/services/insights.service.ts",{"_index":368,"title":{},"body":{"injectables/InsightsService.html":{},"coverage.html":{}}}],["src/services/insights.service.ts:14",{"_index":373,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/services/insights.service.ts:32",{"_index":375,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/services/insights.service.ts:47",{"_index":376,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/services/insights.service.ts:62",{"_index":372,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/services/insights.service.ts:7",{"_index":370,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/services/insights.service.ts:75",{"_index":374,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/services/insights.service.ts:93",{"_index":377,"title":{},"body":{"injectables/InsightsService.html":{}}}],["src/services/posto.service.ts",{"_index":481,"title":{},"body":{"injectables/PostoService.html":{},"coverage.html":{}}}],["src/services/posto.service.ts:105",{"_index":488,"title":{},"body":{"injectables/PostoService.html":{}}}],["src/services/posto.service.ts:14",{"_index":486,"title":{},"body":{"injectables/PostoService.html":{}}}],["src/services/posto.service.ts:155",{"_index":489,"title":{},"body":{"injectables/PostoService.html":{}}}],["src/services/posto.service.ts:9",{"_index":484,"title":{},"body":{"injectables/PostoService.html":{}}}],["src/services/preco.service.ts",{"_index":655,"title":{},"body":{"injectables/PrecoService.html":{},"coverage.html":{}}}],["src/services/preco.service.ts:149",{"_index":674,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:18",{"_index":665,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:207",{"_index":669,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:31",{"_index":670,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:63",{"_index":672,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:76",{"_index":671,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:9",{"_index":662,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/preco.service.ts:92",{"_index":676,"title":{},"body":{"injectables/PrecoService.html":{}}}],["src/services/util.service.ts",{"_index":778,"title":{},"body":{"injectables/UtilService.html":{},"coverage.html":{}}}],["src/services/util.service.ts:16",{"_index":782,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/services/util.service.ts:38",{"_index":784,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/services/util.service.ts:47",{"_index":783,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/services/util.service.ts:9",{"_index":781,"title":{},"body":{"injectables/UtilService.html":{}}}],["start",{"_index":860,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":863,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":865,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":309,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["started",{"_index":840,"title":{"index.html":{}},"body":{}}],["starter",{"_index":852,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":271,"title":{},"body":{"controllers/HealthController.html":{}}}],["starttime}ms",{"_index":281,"title":{},"body":{"controllers/HealthController.html":{}}}],["statements",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":266,"title":{},"body":{"controllers/HealthController.html":{}}}],["stay",{"_index":887,"title":{},"body":{"index.html":{}}}],["step",{"_index":491,"title":{},"body":{"injectables/PostoService.html":{}}}],["string",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Combustivel.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["support",{"_index":879,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":898,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":687,"title":{},"body":{"injectables/PrecoService.html":{}}}],["tempo",{"_index":379,"title":{},"body":{"injectables/InsightsService.html":{}}}],["terminusmodule",{"_index":289,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":868,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":871,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":870,"title":{},"body":{"index.html":{}}}],["tests",{"_index":867,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":877,"title":{},"body":{"index.html":{}}}],["then((result",{"_index":276,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.appservice.gethello",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["this.combustivelrepository.find",{"_index":249,"title":{},"body":{"injectables/CombustivelService.html":{}}}],["this.combustivelservice.getallcombustiveis",{"_index":239,"title":{},"body":{"controllers/CombustivelController.html":{}}}],["this.db.pingcheck('database",{"_index":275,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health",{"_index":273,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpadapterhost.httpadapter.gethttpserver",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["this.insightsservice.comparefuelprices",{"_index":354,"title":{},"body":{"controllers/InsightsController.html":{}}}],["this.insightsservice.getaveragepricebyposto(startdate",{"_index":339,"title":{},"body":{"controllers/InsightsController.html":{}}}],["this.insightsservice.getpricedistribution(combustivelid",{"_index":360,"title":{},"body":{"controllers/InsightsController.html":{}}}],["this.insightsservice.getpriceevolutionbyposto(postoid",{"_index":346,"title":{},"body":{"controllers/InsightsController.html":{}}}],["this.insightsservice.getpricevariationbyposto",{"_index":350,"title":{},"body":{"controllers/InsightsController.html":{}}}],["this.insightsservice.gettop3postoscheapestandexpensive(combustivelid",{"_index":367,"title":{},"body":{"controllers/InsightsController.html":{}}}],["this.postorepository.createquerybuilder('p",{"_index":494,"title":{},"body":{"injectables/PostoService.html":{}}}],["this.postorepository.createquerybuilder('po",{"_index":690,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["this.postorepository.query(`exec",{"_index":576,"title":{},"body":{"injectables/PostoService.html":{}}}],["this.postoservice.getallpostos",{"_index":477,"title":{},"body":{"controllers/PostoController.html":{}}}],["this.postoservice.getoneposto(id",{"_index":479,"title":{},"body":{"controllers/PostoController.html":{}}}],["this.postoservice.getrelatoriopostos(datainicio",{"_index":480,"title":{},"body":{"controllers/PostoController.html":{}}}],["this.precocoletadorepository.query",{"_index":381,"title":{},"body":{"injectables/InsightsService.html":{}}}],["this.precorepository.createquerybuilder('pc",{"_index":726,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["this.precorepository.find",{"_index":684,"title":{},"body":{"injectables/PrecoService.html":{}}}],["this.precoservice.getall(pagenumber",{"_index":643,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.precoservice.getmaiorprecocombustivel(bairro",{"_index":648,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.precoservice.getmediabairro(bairro",{"_index":650,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.precoservice.getmediacombustivel(mes",{"_index":653,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.precoservice.getmediamensal",{"_index":654,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.precoservice.getmediaprecocombustivel(bairro",{"_index":647,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.precoservice.getmenorprecocombustivel(bairro",{"_index":646,"title":{},"body":{"controllers/PrecoController.html":{}}}],["this.utilservice.getall",{"_index":121,"title":{},"body":{"controllers/AppController.html":{}}}],["this.utilservice.getbairrosdisponiveis",{"_index":123,"title":{},"body":{"controllers/AppController.html":{}}}],["this.utilservice.getmesesanosdisponiveis",{"_index":122,"title":{},"body":{"controllers/AppController.html":{}}}],["to_char(pc.\"datacoleta",{"_index":795,"title":{},"body":{"injectables/UtilService.html":{}}}],["to_char(pc.datacoleta",{"_index":703,"title":{},"body":{"injectables/PrecoService.html":{}}}],["todas",{"_index":116,"title":{},"body":{"controllers/AppController.html":{},"injectables/UtilService.html":{}}}],["today",{"_index":682,"title":{},"body":{"injectables/PrecoService.html":{}}}],["todos",{"_index":789,"title":{},"body":{"injectables/UtilService.html":{}}}],["top",{"_index":362,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["touch",{"_index":888,"title":{},"body":{"index.html":{}}}],["tracker",{"_index":912,"title":{},"body":{"properties.html":{}}}],["true",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"entities/Combustivel.html":{},"injectables/PostoService.html":{}}}],["twitter",{"_index":894,"title":{},"body":{"index.html":{}}}],["type",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"entities/Combustivel.html":{},"injectables/CombustivelService.html":{},"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"controllers/PostoController.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["typeorm",{"_index":229,"title":{},"body":{"entities/Combustivel.html":{},"injectables/CombustivelService.html":{},"injectables/InsightsService.html":{},"entities/Posto.html":{},"injectables/PostoService.html":{},"entities/PrecoColetado.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["typeormmodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forfeature([posto",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forroot",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":851,"title":{},"body":{"index.html":{}}}],["um",{"_index":335,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{},"injectables/PostoService.html":{}}}],["unidademedida",{"_index":581,"title":{},"body":{"entities/PrecoColetado.html":{}}}],["unique",{"_index":221,"title":{},"body":{"entities/Combustivel.html":{}}}],["unit",{"_index":866,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/PostoService.html":{},"controllers/PrecoController.html":{},"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["unlicensed",{"_index":910,"title":{},"body":{"properties.html":{}}}],["username",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["utf8",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["utilservice",{"_index":48,"title":{"injectables/UtilService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/UtilService.html":{},"coverage.html":{},"overview.html":{}}}],["value",{"_index":667,"title":{},"body":{"injectables/PrecoService.html":{}}}],["varchar",{"_index":218,"title":{},"body":{"entities/Combustivel.html":{},"entities/Posto.html":{},"entities/PrecoColetado.html":{}}}],["variacao",{"_index":408,"title":{},"body":{"injectables/InsightsService.html":{}}}],["variação",{"_index":349,"title":{},"body":{"controllers/InsightsController.html":{},"injectables/InsightsService.html":{}}}],["velha",{"_index":906,"title":{},"body":{"properties.html":{}}}],["vercel",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["verifica",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{}}}],["verificação",{"_index":286,"title":{},"body":{"controllers/HealthController.html":{}}}],["version",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"properties.html":{}}}],["vila",{"_index":905,"title":{},"body":{"properties.html":{}}}],["vv",{"_index":913,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":861,"title":{},"body":{"index.html":{}}}],["website",{"_index":892,"title":{},"body":{"index.html":{}}}],["where('p.id_posto",{"_index":547,"title":{},"body":{"injectables/PostoService.html":{}}}],["where('pc.datacoleta",{"_index":739,"title":{},"body":{"injectables/PrecoService.html":{}}}],["where('po.bairro",{"_index":714,"title":{},"body":{"injectables/PrecoService.html":{}}}],["where(`(pc_inner.\"postoid",{"_index":521,"title":{},"body":{"injectables/PostoService.html":{}}}],["world",{"_index":206,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":615,"title":{},"body":{"controllers/PrecoController.html":{},"injectables/PrecoService.html":{}}}],["you'd",{"_index":882,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":704,"title":{},"body":{"injectables/PrecoService.html":{},"injectables/UtilService.html":{}}}],["zoom",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getBairros\n                            \n                            \n                                    \n                                    Async\n                                getDatas\n                            \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                getRoutes\n                            \n                            \n                                    \n                                    Async\n                                getUtils\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getBairros\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBairros()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('bairros')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getDatas\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDatas()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('datas')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoutes(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/rotas')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { description: string; routes: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getUtils\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUtils()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('utils')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { HttpAdapterHost } from '@nestjs/core';\nimport { Request } from 'express';\nimport { UtilService } from './services/util.service';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\n@Controller()\nexport class AppController {\n  constructor(\n      private readonly appService: AppService,\n      private readonly utilService: UtilService,\n      private readonly httpAdapterHost: HttpAdapterHost,\n  ) {}\n\n  @Get()\n  getHello(@Req() request: Request): { message: string; ok: boolean; info: any } {\n    const httpServer = this.httpAdapterHost.httpAdapter.getHttpServer();\n    const router = httpServer?._events?.request?._router;\n    const host = `${request.protocol}://${request.get('host')}`;\n    const routes = router?.stack\n        .filter((layer) => layer.route) // Filtra apenas as rotas\n        .map((layer) => ({\n          method: Object.keys(layer.route.methods)[0].toUpperCase(),\n          path: `${host}${layer.route.path}`,\n        })) || [];\n\n    // Leitura dinâmica do arquivo package.json\n    const packageJsonPath = join(__dirname, '../package.json');\n    const packageJson = JSON.parse(readFileSync(packageJsonPath, 'utf8'));\n    const version = packageJson.version;\n    const description = packageJson.description;\n\n    return {\n      message: this.appService.getHello(),\n      ok: true,\n      info: {\n        description,\n        version,\n        routes,\n      },\n    };\n  }\n\n  @Get('/rotas')\n  getRoutes(@Req() request: Request) {\n    const httpServer = this.httpAdapterHost.httpAdapter.getHttpServer();\n    const router = httpServer?._events?.request?._router;\n    if (!router) {\n      console.error('Router not available on this platform.');\n      return {\n        description:\n            'Nenhuma rota disponível no ambiente atual. Pode ser Vercel.',\n        routes: [],\n      };\n    }\n\n    const host = `${request.protocol}://${request.get('host')}`;\n    const routes = router.stack\n        .filter((layer) => layer.route) // Filtra apenas as rotas\n        .map((layer) => ({\n          method: Object.keys(layer.route.methods)[0].toUpperCase(),\n          path: `${host}${layer.route.path}`, // Adiciona o domínio completo ao caminho\n        }));\n\n    return {\n      description:\n          'Lista de todas as rotas disponíveis na API com domínio completo',\n      routes,\n    };\n  }\n\n  @Get('utils')\n  async getUtils() {\n    return this.utilService.getAll();\n  }\n\n  @Get('datas')\n  async getDatas() {\n    return this.utilService.getMesesAnosDisponiveis();\n  }\n\n  @Get('bairros')\n  async getBairros() {\n    return this.utilService.getBairrosDisponiveis();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCombustivelService\n\nCombustivelService\n\nAppModule -->\n\nCombustivelService->AppModule\n\n\n\n\n\nInsightsService\n\nInsightsService\n\nAppModule -->\n\nInsightsService->AppModule\n\n\n\n\n\nPostoService\n\nPostoService\n\nAppModule -->\n\nPostoService->AppModule\n\n\n\n\n\nPrecoService\n\nPrecoService\n\nAppModule -->\n\nPrecoService->AppModule\n\n\n\n\n\nUtilService\n\nUtilService\n\nAppModule -->\n\nUtilService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            CombustivelService\n                        \n                        \n                            InsightsService\n                        \n                        \n                            PostoService\n                        \n                        \n                            PrecoService\n                        \n                        \n                            UtilService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            PostoController\n                        \n                        \n                            CombustivelController\n                        \n                        \n                            PrecoController\n                        \n                        \n                            InsightsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PostoController } from './controllers/posto/posto.controller';\nimport { PostoService } from './services/posto.service';\nimport { Posto } from './entities/posto.entity';\nimport { CombustivelController } from './controllers/combustivel/combustivel.controller';\nimport { PrecoController } from './controllers/preco/preco.controller';\nimport { CombustivelService } from './services/combustivel.service';\nimport { PrecoService } from './services/preco.service';\nimport { Combustivel } from './entities/combustivel.entity';\nimport { PrecoColetado } from './entities/preco-coletado.entity';\nimport { HealthModule } from './modules/health/health.module';\nimport { UtilService } from './services/util.service';\nimport {InsightsService} from \"./services/insights.service\";\nimport {InsightsController} from \"./controllers/insights/insights.controller\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.POSTGRES_HOST,\n      port: 5432,\n      username: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD,\n      database: process.env.POSTGRES_DATABASE,\n      entities: [__dirname + '/**/*.entity{.ts,.js}'], // Certifique-se de que as entidades estão no caminho correto\n      synchronize: false,\n      logging: true,\n      logger: 'debug',\n    }),\n    TypeOrmModule.forFeature([Posto, Combustivel, PrecoColetado]),\n    HealthModule,\n  ],\n  controllers: [\n    AppController,\n    PostoController,\n    CombustivelController,\n    PrecoController,\n      InsightsController,\n  ],\n  providers: [AppService, PostoService, CombustivelService, PrecoService, UtilService, InsightsService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Combustivel.html":{"url":"entities/Combustivel.html","title":"entity - Combustivel","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Combustivel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/combustivel.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nome\n                            \n                            \n                                    \n                                precosColetados\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({name: 'ID_Combustivel'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/combustivel.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, unique: true, name: 'Nome'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/combustivel.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        precosColetados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PrecoColetado[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, precoColetado => precoColetado.combustivel)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/combustivel.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToMany } from 'typeorm';\nimport { PrecoColetado } from './preco-coletado.entity';\n\n@Entity('COMBUSTIVEL')\nexport class Combustivel {\n  @PrimaryGeneratedColumn({ name: 'ID_Combustivel' })\n  id: number;\n\n  @Column({ type: 'varchar', length: 100, unique: true, name: 'Nome' })\n  nome: string;\n\n  @OneToMany(() => PrecoColetado, (precoColetado) => precoColetado.combustivel)\n  precosColetados: PrecoColetado[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CombustivelController.html":{"url":"controllers/CombustivelController.html","title":"controller - CombustivelController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CombustivelController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/combustivel/combustivel.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                combustiveis\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getAllCombustiveis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAllCombustiveis\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllCombustiveis()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/combustivel/combustivel.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { CombustivelService } from '../../services/combustivel.service';\n\n@Controller('combustiveis')\nexport class CombustivelController {\n  constructor(private readonly combustivelService: CombustivelService) {}\n\n  @Get()\n  getAllCombustiveis() {\n    return this.combustivelService.getAllCombustiveis();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CombustivelService.html":{"url":"injectables/CombustivelService.html","title":"injectable - CombustivelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CombustivelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/combustivel.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllCombustiveis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(combustivelRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/services/combustivel.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        combustivelRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCombustiveis\n                        \n                    \n                \n            \n            \n                \ngetAllCombustiveis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/combustivel.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Combustivel } from '../entities/combustivel.entity';\n\n@Injectable()\nexport class CombustivelService {\n  constructor(\n    @InjectRepository(Combustivel)\n    private readonly combustivelRepository: Repository,\n  ) {}\n\n  getAllCombustiveis(): Promise {\n    return this.combustivelRepository.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                checkDatabase\n                            \n                            \n                                    \n                                    \n                                checkGeneral\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        checkDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkDatabase()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/database')@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/health/health.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        checkGeneral\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkGeneral()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/health/health.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: TypeOrmHealthIndicator,\n  ) {}\n\n  // Verifica o status geral da API com logs detalhados\n  @Get()\n  @HealthCheck()\n  checkGeneral() {\n    const startTime = Date.now();\n    return this.health\n      .check([() => this.db.pingCheck('database')])\n      .then((result) => {\n        const endTime = Date.now();\n        return {\n          ...result,\n          info: {\n            ...result.info,\n            responseTime: `${endTime - startTime}ms`,\n            description: 'Status geral da API',\n          },\n        };\n      });\n  }\n\n  // Verifica o status detalhado do banco de dados com logs\n  @Get('/database')\n  @HealthCheck()\n  checkDatabase() {\n    const startTime = Date.now();\n    return this.health\n      .check([() => this.db.pingCheck('database')])\n      .then((result) => {\n        const endTime = Date.now();\n        return {\n          ...result,\n          info: {\n            ...result.info,\n            responseTime: `${endTime - startTime}ms`,\n            description: 'Verificação detalhada do banco de dados',\n          },\n        };\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { TypeOrmHealthIndicator } from '@nestjs/terminus';\nimport { HealthController } from '../../controllers/health/health.controller';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n  providers: [TypeOrmHealthIndicator],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InsightsController.html":{"url":"controllers/InsightsController.html","title":"controller - InsightsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InsightsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/insights/insights.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                insights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                compareFuelPrices\n                            \n                            \n                                    \n                                getAveragePriceByPosto\n                            \n                            \n                                    \n                                getPriceDistribution\n                            \n                            \n                                    \n                                getPriceEvolutionByPosto\n                            \n                            \n                                    \n                                getPriceVariationByPosto\n                            \n                            \n                                    \n                                getTop3PostosCheapestAndExpensive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        compareFuelPrices\n                        \n                    \n                \n            \n            \n                \n                        \n                    compareFuelPrices()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('comparar-preco-combustiveis')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/insights/insights.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAveragePriceByPosto\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAveragePriceByPosto(startDate: string, endDate: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('preco-medio-por-posto')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/insights/insights.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getPriceDistribution\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPriceDistribution(combustivelId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('distribuicao-preco/:combustivelId')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/insights/insights.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                combustivelId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getPriceEvolutionByPosto\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPriceEvolutionByPosto(postoId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('evolucao-preco/:postoId')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/insights/insights.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                postoId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getPriceVariationByPosto\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPriceVariationByPosto()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('variacao-preco-por-posto')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/insights/insights.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getTop3PostosCheapestAndExpensive\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTop3PostosCheapestAndExpensive(combustivelId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('top3-postos-baratos-caros/:combustivelId')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/insights/insights.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                combustivelId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, Param } from '@nestjs/common';\nimport {InsightsService} from \"../../services/insights.service\";\n\n\n@Controller('insights')\nexport class InsightsController {\n    constructor(private readonly insightsService: InsightsService) {}\n\n    // 1. Preço Médio por Posto em um Período\n    @Get('preco-medio-por-posto')\n    getAveragePriceByPosto(\n        @Query('dataInicio') startDate: string,\n        @Query('dataFim') endDate: string\n    ) {\n        return this.insightsService.getAveragePriceByPosto(startDate, endDate);\n    }\n\n    // 2. Evolução do Preço dos Combustíveis em Cada Posto\n    @Get('evolucao-preco/:postoId')\n    getPriceEvolutionByPosto(@Param('postoId') postoId: number) {\n        return this.insightsService.getPriceEvolutionByPosto(postoId);\n    }\n\n    // 3. Postos com Maior Variação de Preço\n    @Get('variacao-preco-por-posto')\n    getPriceVariationByPosto() {\n        return this.insightsService.getPriceVariationByPosto();\n    }\n\n    // 4. Comparação de Preço entre Combustíveis\n    @Get('comparar-preco-combustiveis')\n    compareFuelPrices() {\n        return this.insightsService.compareFuelPrices();\n    }\n\n    // 5. Distribuição de Preços por Faixa\n    @Get('distribuicao-preco/:combustivelId')\n    getPriceDistribution(@Param('combustivelId') combustivelId: number) {\n        return this.insightsService.getPriceDistribution(combustivelId);\n    }\n\n    // 6. Top 3 Postos Mais Baratos e Mais Caros\n    @Get('top3-postos-baratos-caros/:combustivelId')\n    getTop3PostosCheapestAndExpensive(@Param('combustivelId') combustivelId: number) {\n        return this.insightsService.getTop3PostosCheapestAndExpensive(combustivelId);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InsightsService.html":{"url":"injectables/InsightsService.html","title":"injectable - InsightsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InsightsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/insights.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compareFuelPrices\n                            \n                            \n                                    Async\n                                getAveragePriceByPosto\n                            \n                            \n                                    Async\n                                getPriceDistribution\n                            \n                            \n                                    Async\n                                getPriceEvolutionByPosto\n                            \n                            \n                                    Async\n                                getPriceVariationByPosto\n                            \n                            \n                                    Async\n                                getTop3PostosCheapestAndExpensive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(precoColetadoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/services/insights.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        precoColetadoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compareFuelPrices\n                        \n                    \n                \n            \n            \n                \n                        \n                    compareFuelPrices()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/insights.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAveragePriceByPosto\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAveragePriceByPosto(startDate: string, endDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/insights.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPriceDistribution\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPriceDistribution(combustivelId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/insights.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                combustivelId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPriceEvolutionByPosto\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPriceEvolutionByPosto(postoId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/insights.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                postoId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPriceVariationByPosto\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPriceVariationByPosto()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/insights.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTop3PostosCheapestAndExpensive\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTop3PostosCheapestAndExpensive(combustivelId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/insights.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                combustivelId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { PrecoColetado } from '../entities/preco-coletado.entity';\n\n@Injectable()\nexport class InsightsService {\n    constructor(\n        @InjectRepository(PrecoColetado)\n        private readonly precoColetadoRepository: Repository,\n    ) {}\n\n    // 1. Preço Médio por Posto em um Período de Tempo\n    async getAveragePriceByPosto(startDate: string, endDate: string): Promise {\n        return await this.precoColetadoRepository.query(`\n            SELECT\n                p.\"NomeFantasia\" AS posto,\n                c.\"Nome\" AS combustivel,\n                ROUND(AVG(pc.\"Preco\"), 2) AS preco_medio\n            FROM \"POSTO\" p\n                     JOIN \"PRECO_COLETADO\" pcv ON pcv.\"PostoID\" = p.\"ID_Posto\"\n                     JOIN \"COMBUSTIVEL\" c ON pcv.\"CombustivelID\" = c.\"ID_Combustivel\"\n                     LEFT JOIN \"PRECO_COLETADO\" pc ON pc.\"PostoID\" = p.\"ID_Posto\"\n                AND pc.\"CombustivelID\" = c.\"ID_Combustivel\"\n                AND pc.\"DataColeta\" BETWEEN $1 AND $2\n            GROUP BY p.\"NomeFantasia\", c.\"Nome\"\n            ORDER BY preco_medio ASC;\n        `, [startDate, endDate]);\n    }\n\n    // 2. Evolução do Preço dos Combustíveis em Cada Posto\n    async getPriceEvolutionByPosto(postoId: number): Promise {\n        return this.precoColetadoRepository.query(`\n            SELECT\n                pc.\"DataColeta\" AS data_coleta,\n                c.\"Nome\" AS combustivel,\n                pc.\"Preco\" AS preco\n            FROM \"PRECO_COLETADO\" pc\n                     JOIN \"POSTO\" p ON pc.\"PostoID\" = p.\"ID_Posto\"\n                     JOIN \"COMBUSTIVEL\" c ON pc.\"CombustivelID\" = c.\"ID_Combustivel\"\n            WHERE p.\"ID_Posto\" = $1\n            ORDER BY pc.\"DataColeta\" ASC;\n        `, [postoId]);\n    }\n\n    // 3. Postos com Maior Variação de Preço\n    async getPriceVariationByPosto(): Promise {\n        return this.precoColetadoRepository.query(`\n            SELECT\n                p.\"NomeFantasia\" AS posto,\n                c.\"Nome\" AS combustivel,\n                MAX(pc.\"Preco\") - MIN(pc.\"Preco\") AS variacao\n            FROM \"PRECO_COLETADO\" pc\n                     JOIN \"POSTO\" p ON pc.\"PostoID\" = p.\"ID_Posto\"\n                     JOIN \"COMBUSTIVEL\" c ON pc.\"CombustivelID\" = c.\"ID_Combustivel\"\n            GROUP BY p.\"NomeFantasia\", c.\"Nome\"\n            ORDER BY variacao DESC;\n        `);\n    }\n\n    // 4. Comparação de Preço entre Combustíveis\n    async compareFuelPrices(): Promise {\n        return this.precoColetadoRepository.query(`\n            SELECT\n                c.\"Nome\" AS combustivel,\n                ROUND(AVG(pc.\"Preco\"), 2) AS preco_medio\n            FROM \"PRECO_COLETADO\" pc\n                     JOIN \"COMBUSTIVEL\" c ON pc.\"CombustivelID\" = c.\"ID_Combustivel\"\n            GROUP BY c.\"Nome\"\n            ORDER BY preco_medio DESC;\n        `);\n    }\n\n    // 5. Gráfico de Distribuição de Preços por Faixa\n    async getPriceDistribution(combustivelId: number): Promise {\n        return this.precoColetadoRepository.query(`\n            SELECT\n                CASE\n                    WHEN pc.\"Preco\" BETWEEN 4.00 AND 4.50 THEN 'R$4.00 - R$4.50'\n                    WHEN pc.\"Preco\" BETWEEN 4.51 AND 5.00 THEN 'R$4.51 - R$5.00'\n                    WHEN pc.\"Preco\" BETWEEN 5.01 AND 5.50 THEN 'R$5.01 - R$5.50'\n                    ELSE 'Acima de R$5.50'\n                    END AS faixa_preco,\n                COUNT(*) AS quantidade_postos\n            FROM \"PRECO_COLETADO\" pc\n            WHERE pc.\"CombustivelID\" = $1\n            GROUP BY faixa_preco\n            ORDER BY faixa_preco;\n        `, [combustivelId]);\n    }\n\n    // 6. Top 3 Postos Mais Baratos e Mais Caros\n    async getTop3PostosCheapestAndExpensive(combustivelId: number): Promise {\n        const cheapest = await this.precoColetadoRepository.query(`\n            SELECT\n                p.\"NomeFantasia\" AS posto,\n                pc.\"Preco\" AS preco\n            FROM \"PRECO_COLETADO\" pc\n                     JOIN \"POSTO\" p ON pc.\"PostoID\" = p.\"ID_Posto\"\n            WHERE pc.\"CombustivelID\" = $1\n            ORDER BY pc.\"Preco\" ASC\n                LIMIT 3;\n        `, [combustivelId]);\n\n        const expensive = await this.precoColetadoRepository.query(`\n            SELECT\n                p.\"NomeFantasia\" AS posto,\n                pc.\"Preco\" AS preco\n            FROM \"PRECO_COLETADO\" pc\n                     JOIN \"POSTO\" p ON pc.\"PostoID\" = p.\"ID_Posto\"\n            WHERE pc.\"CombustivelID\" = $1\n            ORDER BY pc.\"Preco\" DESC\n                LIMIT 3;\n        `, [combustivelId]);\n\n        return { cheapest, expensive };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Posto.html":{"url":"entities/Posto.html","title":"entity - Posto","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Posto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/posto.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                bairro\n                            \n                            \n                                    \n                                bandeira\n                            \n                            \n                                    \n                                cep\n                            \n                            \n                                    \n                                cidade\n                            \n                            \n                                    \n                                cnpj\n                            \n                            \n                                    \n                                estado\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                logradouro\n                            \n                            \n                                    \n                                nomeFantasia\n                            \n                            \n                                    \n                                numero\n                            \n                            \n                                    \n                                precosColetados\n                            \n                            \n                                    \n                                razaoSocial\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bairro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, name: 'Bairro'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bandeira\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, name: 'Bandeira'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 10, name: 'CEP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, name: 'Cidade'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cnpj\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 14, name: 'CNPJ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 50, name: 'Estado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({name: 'ID_Posto'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logradouro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, name: 'Logradouro'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nomeFantasia\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, name: 'NomeFantasia'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 20, name: 'Numero'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        precosColetados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PrecoColetado[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, precoColetado => precoColetado.posto)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        razaoSocial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, name: 'RazaoSocial'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/posto.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToMany } from 'typeorm';\nimport { PrecoColetado } from './preco-coletado.entity';\n\n@Entity('POSTO')\nexport class Posto {\n  @PrimaryGeneratedColumn({ name: 'ID_Posto' })\n  id: number;\n\n  @Column({ type: 'varchar', length: 14, name: 'CNPJ' })\n  cnpj: string;\n\n  @Column({ type: 'varchar', length: 255, name: 'RazaoSocial' })\n  razaoSocial: string;\n\n  @Column({ type: 'varchar', length: 255, name: 'NomeFantasia' })\n  nomeFantasia: string;\n\n  @Column({ type: 'varchar', length: 100, name: 'Bandeira' })\n  bandeira: string;\n\n  @Column({ type: 'varchar', length: 255, name: 'Logradouro' })\n  logradouro: string;\n\n  @Column({ type: 'varchar', length: 20, name: 'Numero' })\n  numero: string;\n\n  @Column({ type: 'varchar', length: 100, name: 'Bairro' })\n  bairro: string;\n\n  @Column({ type: 'varchar', length: 100, name: 'Cidade' })\n  cidade: string;\n\n  @Column({ type: 'varchar', length: 50, name: 'Estado' })\n  estado: string;\n\n  @Column({ type: 'varchar', length: 10, name: 'CEP' })\n  cep: string;\n\n  @OneToMany(() => PrecoColetado, (precoColetado) => precoColetado.posto)\n  precosColetados: PrecoColetado[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostoController.html":{"url":"controllers/PostoController.html","title":"controller - PostoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/posto/posto.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                postos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getAllPostos\n                            \n                            \n                                    \n                                getPosto\n                            \n                            \n                                    \n                                getRelatorioPostos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAllPostos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllPostos()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/posto/posto.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getPosto\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosto(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/posto/posto.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getRelatorioPostos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRelatorioPostos(dataInicio: string, dataFim: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('relatorio')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/posto/posto.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataInicio\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dataFim\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Get, Param, Query} from '@nestjs/common';\nimport { PostoService } from '../../services/posto.service';\n\n@Controller('postos')\nexport class PostoController {\n  constructor(private readonly postoService: PostoService) {}\n\n  @Get()\n  getAllPostos() {\n    return this.postoService.getAllPostos();\n  }\n\n  @Get(':id')\n  getPosto(@Param('id') id: number) {\n    return this.postoService.getOnePosto(id);\n  }\n\n  @Get('relatorio')\n  getRelatorioPostos(\n    @Query('dataInicio') dataInicio: string,\n    @Query('dataFim') dataFim: string,\n  ) {\n    return this.postoService.getRelatorioPostos(dataInicio, dataFim);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostoService.html":{"url":"injectables/PostoService.html","title":"injectable - PostoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/posto.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllPostos\n                            \n                            \n                                    Async\n                                getOnePosto\n                            \n                            \n                                getRelatorioPostos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/services/posto.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllPostos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllPostos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/posto.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOnePosto\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOnePosto(postoId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/posto.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                postoId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRelatorioPostos\n                        \n                    \n                \n            \n            \n                \ngetRelatorioPostos(dataInicio: string, dataFim: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/posto.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataInicio\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dataFim\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Posto } from '../entities/posto.entity';\nimport {PrecoColetado} from \"../entities/preco-coletado.entity\";\nimport {Combustivel} from \"../entities/combustivel.entity\";\n\n@Injectable()\nexport class PostoService {\n    constructor(\n        @InjectRepository(Posto) private readonly postoRepository: Repository,\n    ) {}\n\n    async getAllPostos(): Promise {\n        // Step 1: Buscar dados do banco de dados\n        const rawResults = await this.postoRepository.createQueryBuilder('p')\n            .select([\n                'p.\"ID_Posto\" AS posto_id',\n                'p.\"NomeFantasia\" AS posto_nome',\n                'p.\"Bandeira\" AS posto_bandeira',\n                'p.\"Logradouro\" AS posto_logradouro',\n                'p.\"Numero\" AS posto_numero',\n                'p.\"Bairro\" AS posto_bairro',\n                'p.\"Cidade\" AS posto_cidade',\n                'p.\"Estado\" AS posto_estado',\n                'p.\"CEP\" AS posto_cep',\n                'c.\"Nome\" AS combustivel_nome',\n                'pc.\"Preco\" AS preco',\n                'pc.\"DataColeta\" AS data_coleta'\n            ])\n            .leftJoin(Combustivel, 'c', 'TRUE') // LEFT JOIN COMBUSTIVEL ON TRUE\n            .leftJoin(\n                qb => {\n                    return qb\n                        .select([\n                            'pc_inner.\"PostoID\"',\n                            'pc_inner.\"CombustivelID\"',\n                            'pc_inner.\"Preco\"',\n                            'pc_inner.\"DataColeta\"'\n                        ])\n                        .from(PrecoColetado, 'pc_inner')\n                        .where(`(pc_inner.\"PostoID\", pc_inner.\"CombustivelID\", pc_inner.\"DataColeta\") IN (\n                        SELECT \n                            pc_sub.\"PostoID\", \n                            pc_sub.\"CombustivelID\", \n                            MAX(pc_sub.\"DataColeta\") \n                        FROM \n                            \"PRECO_COLETADO\" pc_sub \n                        GROUP BY \n                            pc_sub.\"PostoID\", pc_sub.\"CombustivelID\"\n                    )`);\n                },\n                'pc',\n                'pc.\"PostoID\" = p.\"ID_Posto\" AND pc.\"CombustivelID\" = c.\"ID_Combustivel\"'\n            )\n            .orderBy('p.\"ID_Posto\"', 'ASC')\n            .addOrderBy('c.\"Nome\"', 'ASC')\n            .getRawMany();\n\n        // Step 2: Agrupar os combustíveis por posto\n        const postosMap = new Map();\n\n        rawResults.forEach(result => {\n            const {\n                posto_id,\n                posto_nome,\n                posto_bandeira,\n                posto_logradouro,\n                posto_numero,\n                posto_bairro,\n                posto_cidade,\n                posto_estado,\n                posto_cep,\n                combustivel_nome,\n                preco,\n                data_coleta\n            } = result;\n\n            if (!postosMap.has(posto_id)) {\n                postosMap.set(posto_id, {\n                    posto_id,\n                    posto_nome,\n                    posto_bandeira,\n                    posto_logradouro,\n                    posto_numero,\n                    posto_bairro,\n                    posto_cidade,\n                    posto_estado,\n                    posto_cep,\n                    combustiveis: []\n                });\n            }\n\n            postosMap.get(posto_id).combustiveis.push({\n                combustivel_nome,\n                preco,\n                data_coleta\n            });\n        });\n\n        // Step 3: Converter o mapa em um array\n        return Array.from(postosMap.values());\n    }\n\n    async getOnePosto(postoId: number) {\n        const rawResults = await this.postoRepository.createQueryBuilder('p')\n            .leftJoinAndSelect('p.precosColetados', 'pc')\n            .leftJoinAndSelect('pc.combustivel', 'c')\n            .select([\n                'p',\n                'c.Nome AS combustivel_nome',\n                'pc.Preco AS preco',\n                'pc.DataColeta AS data_coleta'\n            ])\n            .where('p.ID_Posto = :postoId', { postoId })\n            .orderBy('pc.DataColeta', 'ASC')\n            .getRawMany();\n\n        if (rawResults.length === 0) {\n            return null; // ou alguma resposta apropriada caso o posto não seja encontrado\n        }\n\n        const postoDetails = {\n            posto_id: rawResults[0].p_ID_Posto,\n            cnpj: rawResults[0].p_CNPJ,\n            razao_social: rawResults[0].p_RazaoSocial,\n            nome_fantasia: rawResults[0].p_NomeFantasia,\n            bandeira: rawResults[0].p_Bandeira,\n            logradouro: rawResults[0].p_Logradouro,\n            numero: rawResults[0].p_Numero,\n            bairro: rawResults[0].p_Bairro,\n            cidade: rawResults[0].p_Cidade,\n            estado: rawResults[0].p_Estado,\n            cep: rawResults[0].p_CEP,\n            combustiveis: {}\n        };\n\n        rawResults.forEach(result => {\n            const { combustivel_nome, preco, data_coleta } = result;\n\n            if (!postoDetails.combustiveis[combustivel_nome]) {\n                postoDetails.combustiveis[combustivel_nome] = [];\n            }\n\n            postoDetails.combustiveis[combustivel_nome].push({\n                preco,\n                data_coleta\n            });\n        });\n\n        return postoDetails;\n    }\n\n\n    getRelatorioPostos(dataInicio: string, dataFim: string): Promise {\n        return this.postoRepository.query(`EXEC sp_ResumoPostosEPrecos @DataInicio = '${dataInicio}', @DataFim = '${dataFim}'`);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PrecoColetado.html":{"url":"entities/PrecoColetado.html","title":"entity - PrecoColetado","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PrecoColetado\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/preco-coletado.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                combustivel\n                            \n                            \n                                    \n                                dataColeta\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                posto\n                            \n                            \n                                    \n                                preco\n                            \n                            \n                                    \n                                unidadeMedida\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        combustivel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Combustivel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, combustivel => combustivel.precosColetados)@JoinColumn({name: 'CombustivelID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/preco-coletado.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dataColeta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date', name: 'DataColeta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/preco-coletado.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({name: 'ID_Preco'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/preco-coletado.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        posto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Posto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, posto => posto.precosColetados)@JoinColumn({name: 'PostoID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/preco-coletado.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'numeric', precision: 10, scale: 3, name: 'Preco'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/preco-coletado.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unidadeMedida\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 10, name: 'UnidadeMedida'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/preco-coletado.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Posto } from './posto.entity';\nimport { Combustivel } from './combustivel.entity';\n\n@Entity('PRECO_COLETADO')\nexport class PrecoColetado {\n  @PrimaryGeneratedColumn({ name: 'ID_Preco' })\n  id: number;\n\n  @Column({ type: 'numeric', precision: 10, scale: 3, name: 'Preco' })\n  preco: number;\n\n  @Column({ type: 'varchar', length: 10, name: 'UnidadeMedida' })\n  unidadeMedida: string;\n\n  @Column({ type: 'date', name: 'DataColeta' })\n  dataColeta: Date;\n\n  @ManyToOne(() => Posto, (posto) => posto.precosColetados)\n  @JoinColumn({ name: 'PostoID' })\n  posto: Posto;\n\n  @ManyToOne(() => Combustivel, (combustivel) => combustivel.precosColetados)\n  @JoinColumn({ name: 'CombustivelID' })\n  combustivel: Combustivel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PrecoController.html":{"url":"controllers/PrecoController.html","title":"controller - PrecoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PrecoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/preco/preco.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                precos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getMaiorPreco\n                            \n                            \n                                    \n                                    Async\n                                getMediaBairro\n                            \n                            \n                                    \n                                    Async\n                                getMediaCombustivel\n                            \n                            \n                                    \n                                    Async\n                                getMediaMensal\n                            \n                            \n                                    \n                                    Async\n                                getMediaPreco\n                            \n                            \n                                    \n                                    Async\n                                getMenorPreco\n                            \n                            \n                                    \n                                    Async\n                                getPrecos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMaiorPreco\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMaiorPreco(bairro?: string, combustivel?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('maior-preco')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMediaBairro\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaBairro(bairro: string, combustivel: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('media-bairro')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMediaCombustivel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaCombustivel(mes?: string, ano?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('media-combustivel')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mes\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                ano\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMediaMensal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaMensal()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('media-mensal')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMediaPreco\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaPreco(bairro?: string, combustivel?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('media-preco')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMenorPreco\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMenorPreco(bairro?: string, combustivel?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('menor-preco')\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getPrecos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPrecos(page?: number, limit?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/controllers/preco/preco.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { PrecoService } from '../../services/preco.service';\n\n@Controller('precos')\nexport class PrecoController {\n  constructor(private readonly precoService: PrecoService) {}\n\n  @Get()\n  async getPrecos(\n    @Query('page') page?: number, // Paginação\n    @Query('limit') limit?: number, // Limite de resultados\n  ) {\n    const pageNumber = page ? Number(page) : 1;\n    const limitNumber = limit ? Number(limit) : 50;\n\n    return this.precoService.getAll(pageNumber, limitNumber);\n  }\n\n  @Get('menor-preco')\n  async getMenorPreco(\n    @Query('bairro') bairro?: string,\n    @Query('combustivel') combustivel?: string,\n  ) {\n    return this.precoService.getMenorPrecoCombustivel(bairro, combustivel);\n  }\n\n  @Get('media-preco')\n  async getMediaPreco(\n    @Query('bairro') bairro?: string,\n    @Query('combustivel') combustivel?: string,\n  ) {\n    return this.precoService.getMediaPrecoCombustivel(bairro, combustivel);\n  }\n\n  @Get('maior-preco')\n  async getMaiorPreco(\n    @Query('bairro') bairro?: string,\n    @Query('combustivel') combustivel?: string,\n  ) {\n    return this.precoService.getMaiorPrecoCombustivel(bairro, combustivel);\n  }\n\n  @Get('media-bairro')\n  async getMediaBairro(@Query('bairro') bairro: string, @Query('combustivel') combustivel: string) {\n    return this.precoService.getMediaBairro(bairro, combustivel);\n  }\n\n  @Get('media-combustivel')\n  async getMediaCombustivel(@Query('mes') mes?: string, @Query('ano') ano?: string) {\n    return this.precoService.getMediaCombustivel(mes, ano);\n  }\n\n  @Get('media-mensal')\n  async getMediaMensal() {\n    return this.precoService.getMediaMensal();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrecoService.html":{"url":"injectables/PrecoService.html","title":"injectable - PrecoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrecoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/preco.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getMaiorPrecoCombustivel\n                            \n                            \n                                    Async\n                                getMediaBairro\n                            \n                            \n                                    Async\n                                getMediaCombustivel\n                            \n                            \n                                    Async\n                                getMediaMensal\n                            \n                            \n                                    Async\n                                getMediaPrecoCombustivel\n                            \n                            \n                                    Async\n                                getMenorPrecoCombustivel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(precoRepository: Repository, postoRepository: Repository, combustivelRepository: Repository, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/services/preco.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        precoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        postoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        combustivelRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(page: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    50\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMaiorPrecoCombustivel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMaiorPrecoCombustivel(bairro?: string, combustivel?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMediaBairro\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaBairro(bairro: string, combustivel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMediaCombustivel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaCombustivel(mes?: string, ano?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mes\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                ano\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMediaMensal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaMensal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMediaPrecoCombustivel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaPrecoCombustivel(bairro?: string, combustivel?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMenorPrecoCombustivel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMenorPrecoCombustivel(bairro?: string, combustivel?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/preco.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bairro\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                combustivel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, LessThanOrEqual, DataSource } from 'typeorm';\nimport { PrecoColetado } from '../entities/preco-coletado.entity';\nimport { Posto } from '../entities/posto.entity';\nimport { Combustivel } from '../entities/combustivel.entity';\n\n@Injectable()\nexport class PrecoService {\n  constructor(\n    @InjectRepository(PrecoColetado) private precoRepository: Repository,\n    @InjectRepository(Posto) private postoRepository: Repository,\n    @InjectRepository(Combustivel) private combustivelRepository: Repository,\n    private dataSource: DataSource\n  ) {}\n\n  // Método getAll com paginação e ordenação por data decrescente\n  async getAll(page = 1, limit = 50) {\n    const today = new Date();\n    const skip = (page - 1) * limit;\n\n    return await this.precoRepository.find({\n      relations: ['posto', 'combustivel'],\n      where: { dataColeta: LessThanOrEqual(today) },\n      order: { dataColeta: 'DESC' },\n      skip,\n      take: limit,  // Limite de resultados por página (50 por padrão)\n    });\n  }\n\n  async getMediaBairro(bairro: string, combustivel: string) {\n\n      return await this.postoRepository.createQueryBuilder('po')\n        .select([\n          'po.NomeFantasia AS nome_posto',\n          'po.Logradouro AS logradouro',\n          'po.Numero AS numero',\n          'po.Bairro AS bairro',\n          'po.Cidade AS cidade',\n          'po.Estado AS estado',\n          'po.CEP AS cep',\n          'co.Nome AS nome_combustivel',\n          'ROUND(MIN(pc.Preco), 3) AS menor_preco',\n          \"TO_CHAR(pc.DataColeta, 'YYYY-MM') AS mes_coleta\"\n        ])\n        .innerJoin(PrecoColetado, 'pc', 'po.ID_Posto = pc.PostoID')\n        .innerJoin(Combustivel, 'co', 'pc.CombustivelID = co.ID_Combustivel')\n        .where('po.Bairro = :bairro', { bairro: bairro })\n        .andWhere('co.Nome = :nome_combustivel', { nome_combustivel: combustivel })\n        .groupBy('po.NomeFantasia')\n        .addGroupBy('po.Logradouro')\n        .addGroupBy('po.Numero')\n        .addGroupBy('po.Bairro')\n        .addGroupBy('po.Cidade')\n        .addGroupBy('po.Estado')\n        .addGroupBy('po.CEP')\n        .addGroupBy('co.Nome')\n        .addGroupBy(\"TO_CHAR(pc.DataColeta, 'YYYY-MM')\")\n        .orderBy('mes_coleta', 'DESC')\n        .getRawMany();\n  }\n\n  async getMediaMensal() {\n\n    return await this.precoRepository.createQueryBuilder('pc')\n      .select(\"TO_CHAR(pc.DataColeta, 'YYYY-MM')\", 'mes_coleta')\n      .addSelect('co.Nome', 'nome_combustivel')\n      .addSelect('ROUND(AVG(pc.Preco), 3)', 'preco_medio')\n      .innerJoin(Combustivel, 'co', 'pc.CombustivelID = co.ID_Combustivel')\n      .groupBy(\"TO_CHAR(pc.DataColeta, 'YYYY-MM')\")\n      .addGroupBy('co.Nome')\n      .orderBy('mes_coleta', 'DESC')\n      .getRawMany();\n  }\n\n  async getMediaCombustivel(mes?: string, ano?: string) {\n    const query = this.precoRepository.createQueryBuilder('pc')\n      .select('co.\"Nome\"', 'nome_combustivel')\n      .addSelect('ROUND(AVG(pc.\"Preco\"), 3)', 'preco_medio')\n      .innerJoin(Combustivel, 'co', 'pc.\"CombustivelID\" = co.\"ID_Combustivel\"');\n\n    if (mes && ano) {\n      query.where('TO_CHAR(pc.\"DataColeta\", \\'MM\\') = :mes', { mes })\n        .andWhere('TO_CHAR(pc.\"DataColeta\", \\'YYYY\\') = :ano', { ano });\n    }\n\n    query.groupBy('co.\"Nome\"');\n\n    return await query.getRawMany();\n  }\n\n  async getMenorPrecoCombustivel(bairro?: string, combustivel?: string) {\n    const rawResults = await this.postoRepository.createQueryBuilder('po')\n      .select([\n        'po.NomeFantasia AS nome_posto',\n        'po.Logradouro AS logradouro',\n        'po.Numero AS numero',\n        'po.Bairro AS bairro',\n        'po.Cidade AS cidade',\n        'po.Estado AS estado',\n        'po.CEP AS cep',\n        'co.Nome AS nome_combustivel',\n        'ROUND(pc.Preco, 3) AS menor_preco',\n        'pc.DataColeta AS data_coleta'\n      ])\n      .innerJoin(PrecoColetado, 'pc', 'po.ID_Posto = pc.PostoID')\n      .innerJoin(Combustivel, 'co', 'pc.CombustivelID = co.ID_Combustivel')\n      .where('pc.DataColeta = (SELECT MAX(pc2.\"DataColeta\") FROM public.\"PRECO_COLETADO\" pc2 WHERE pc2.\"PostoID\" = po.\"ID_Posto\" AND pc2.\"CombustivelID\" = co.\"ID_Combustivel\")')\n      .orderBy('menor_preco', 'ASC');\n\n    if (bairro) {\n      rawResults.andWhere('po.Bairro = :bairro', { bairro });\n    }\n\n    if (combustivel) {\n      rawResults.andWhere('co.Nome = :nome', { nome: combustivel });\n    }\n\n    const results = await rawResults.getRawMany();\n\n    // Agrupar resultados por posto\n    const groupedResults = results.reduce((acc, curr) => {\n      const postoKey = `${curr.nome_posto}-${curr.logradouro}`;\n\n      if (!acc[postoKey]) {\n        acc[postoKey] = {\n          nome_posto: curr.nome_posto,\n          logradouro: curr.logradouro,\n          numero: curr.numero,\n          bairro: curr.bairro,\n          cidade: curr.cidade,\n          estado: curr.estado,\n          cep: curr.cep,\n          combustiveis: [],\n        };\n      }\n\n      acc[postoKey].combustiveis.push({\n        nome_combustivel: curr.nome_combustivel,\n        menor_preco: curr.menor_preco,\n        data_coleta: curr.data_coleta,\n      });\n\n      return acc;\n    }, {});\n    return Object.values(groupedResults);\n  }\n\n  async getMediaPrecoCombustivel(bairro?: string, combustivel?: string) {\n    const rawResults = await this.postoRepository.createQueryBuilder('po')\n      .select([\n        'po.NomeFantasia AS nome_posto',\n        'po.Logradouro AS logradouro',\n        'po.Numero AS numero',\n        'po.Bairro AS bairro',\n        'po.Cidade AS cidade',\n        'po.Estado AS estado',\n        'po.CEP AS cep',\n        'co.Nome AS nome_combustivel',\n        'ROUND(AVG(pc.Preco), 3) AS media_preco',\n        'MAX(pc.DataColeta) AS data_coleta'\n      ])\n      .innerJoin(PrecoColetado, 'pc', 'po.ID_Posto = pc.PostoID')\n      .innerJoin(Combustivel, 'co', 'pc.CombustivelID = co.ID_Combustivel')\n      .groupBy('po.ID_Posto, po.NomeFantasia, po.Logradouro, po.Numero, po.Bairro, po.Cidade, po.Estado, po.CEP, co.Nome')\n      .orderBy('media_preco', 'ASC');\n\n    if (bairro) {\n      rawResults.andWhere('po.Bairro = :bairro', { bairro });\n    }\n\n    if (combustivel) {\n      rawResults.andWhere('co.Nome = :nome', { nome: combustivel });\n    }\n\n    const results = await rawResults.getRawMany();\n\n    // Agrupar resultados por posto\n    const groupedResults = results.reduce((acc, curr) => {\n      const postoKey = `${curr.nome_posto}-${curr.logradouro}`;\n\n      if (!acc[postoKey]) {\n        acc[postoKey] = {\n          nome_posto: curr.nome_posto,\n          logradouro: curr.logradouro,\n          numero: curr.numero,\n          bairro: curr.bairro,\n          cidade: curr.cidade,\n          estado: curr.estado,\n          cep: curr.cep,\n          combustiveis: [],\n        };\n      }\n\n      acc[postoKey].combustiveis.push({\n        nome_combustivel: curr.nome_combustivel,\n        media_preco: curr.media_preco,\n        data_coleta: curr.data_coleta,\n      });\n\n      return acc;\n    }, {});\n\n    return Object.values(groupedResults);\n  }\n\n  async getMaiorPrecoCombustivel(bairro?: string, combustivel?: string) {\n    const rawResults = await this.postoRepository.createQueryBuilder('po')\n      .select([\n        'po.NomeFantasia AS nome_posto',\n        'po.Logradouro AS logradouro',\n        'po.Numero AS numero',\n        'po.Bairro AS bairro',\n        'po.Cidade AS cidade',\n        'po.Estado AS estado',\n        'po.CEP AS cep',\n        'co.Nome AS nome_combustivel',\n        'ROUND(MAX(pc.Preco), 3) AS maior_preco',\n        'MAX(pc.DataColeta) AS data_coleta'\n      ])\n      .innerJoin(PrecoColetado, 'pc', 'po.ID_Posto = pc.PostoID')\n      .innerJoin(Combustivel, 'co', 'pc.CombustivelID = co.ID_Combustivel')\n      .groupBy('po.ID_Posto, po.NomeFantasia, po.Logradouro, po.Numero, po.Bairro, po.Cidade, po.Estado, po.CEP, co.Nome')\n      .orderBy('maior_preco', 'DESC');\n\n    if (bairro) {\n      rawResults.andWhere('po.Bairro = :bairro', { bairro });\n    }\n\n    if (combustivel) {\n      rawResults.andWhere('co.Nome = :nome', { nome: combustivel });\n    }\n\n    const results = await rawResults.getRawMany();\n\n    // Agrupar resultados por posto\n    const groupedResults = results.reduce((acc, curr) => {\n      const postoKey = `${curr.nome_posto}-${curr.logradouro}`;\n\n      if (!acc[postoKey]) {\n        acc[postoKey] = {\n          nome_posto: curr.nome_posto,\n          logradouro: curr.logradouro,\n          numero: curr.numero,\n          bairro: curr.bairro,\n          cidade: curr.cidade,\n          estado: curr.estado,\n          cep: curr.cep,\n          combustiveis: [],\n        };\n      }\n\n      acc[postoKey].combustiveis.push({\n        nome_combustivel: curr.nome_combustivel,\n        maior_preco: curr.maior_preco,\n        data_coleta: curr.data_coleta,\n      });\n\n      return acc;\n    }, {});\n\n    return Object.values(groupedResults);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilService.html":{"url":"injectables/UtilService.html","title":"injectable - UtilService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/util.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getBairrosDisponiveis\n                            \n                            \n                                    Async\n                                getMesesAnosDisponiveis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(precoRepository: Repository, postoRepository: Repository, combustivelRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/services/util.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        precoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        postoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        combustivelRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/util.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBairrosDisponiveis\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBairrosDisponiveis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/util.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMesesAnosDisponiveis\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMesesAnosDisponiveis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/util.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, LessThanOrEqual, DataSource } from 'typeorm';\nimport { PrecoColetado } from '../entities/preco-coletado.entity';\nimport { Posto } from '../entities/posto.entity';\nimport { Combustivel } from '../entities/combustivel.entity';\n\n@Injectable()\nexport class UtilService {\n  constructor(\n    @InjectRepository(PrecoColetado) private precoRepository: Repository,\n    @InjectRepository(Posto) private postoRepository: Repository,\n    @InjectRepository(Combustivel) private combustivelRepository: Repository,\n  ) {}\n\n  async getAll() {\n    return [\n      {\n        nome: 'combustivies',\n        rota: '/combustiveis',\n        parametros: null,\n        descricao: 'Retorna todos os combustíveis disponíveis'\n      },\n      {\n        nome: 'datas',\n        rota: '/datas',\n        parametros: null,\n        descricao: 'Retorna todas as datas com mês e ano disponível'\n      },{\n        nome: 'bairros',\n        rota: '/bairros',\n        parametros: null,\n        descricao: 'Retorna todos os bairros disponiveis'\n      },\n    ];\n  }\n\n  async getMesesAnosDisponiveis() {\n    return await this.precoRepository.createQueryBuilder('pc')\n      .select('DISTINCT TO_CHAR(pc.\"DataColeta\", \\'MM\\')', 'mes')\n      .addSelect('TO_CHAR(pc.\"DataColeta\", \\'YYYY\\')', 'ano')\n      .orderBy('ano', 'ASC')\n      .addOrderBy('mes', 'ASC')\n      .getRawMany();\n  }\n\n  async getBairrosDisponiveis() {\n    return await this.postoRepository.createQueryBuilder('po')\n      .select('DISTINCT po.Bairro', 'bairro')\n      .orderBy('po.Bairro', 'ASC')\n      .getRawMany();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/controllers/combustivel/combustivel.controller.ts\n            \n            controller\n            CombustivelController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/controllers/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/controllers/insights/insights.controller.ts\n            \n            controller\n            InsightsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/controllers/posto/posto.controller.ts\n            \n            controller\n            PostoController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/preco/preco.controller.ts\n            \n            controller\n            PrecoController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/entities/combustivel.entity.ts\n            \n            entity\n            Combustivel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/posto.entity.ts\n            \n            entity\n            Posto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/preco-coletado.entity.ts\n            \n            entity\n            PrecoColetado\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/combustivel.service.ts\n            \n            injectable\n            CombustivelService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/insights.service.ts\n            \n            injectable\n            InsightsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/posto.service.ts\n            \n            injectable\n            PostoService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/preco.service.ts\n            \n            injectable\n            PrecoService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/services/util.service.ts\n            \n            injectable\n            UtilService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.0.3\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            axios : ^1.7.7\n        \n            mssql : ^10.0.4\n        \n            pg : ^8.12.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCombustivelService\n\nCombustivelService\n\nAppModule -->\n\nCombustivelService->AppModule\n\n\n\n\n\nInsightsService\n\nInsightsService\n\nAppModule -->\n\nInsightsService->AppModule\n\n\n\n\n\nPostoService\n\nPostoService\n\nAppModule -->\n\nPostoService->AppModule\n\n\n\n\n\nPrecoService\n\nPrecoService\n\nAppModule -->\n\nPrecoService->AppModule\n\n\n\n\n\nUtilService\n\nUtilService\n\nAppModule -->\n\nUtilService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : API para retornar os dados de postos combustíveis de Vila Velha - ES do Ano de 2022 até 2024\n        \n            License : UNLICENSED\n        \n            Repository : https://github.com/elisaharmmer/Fuel-Tracker-VV\n        \n            Author : Elisa Harmmer Ferreira (https://github.com/elisaharmmer) / Nícolas Aigner (https://github.com/nicolasaigner)\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
